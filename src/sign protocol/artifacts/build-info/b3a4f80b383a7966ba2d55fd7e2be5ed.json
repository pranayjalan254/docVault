{"id":"b3a4f80b383a7966ba2d55fd7e2be5ed","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@ethsign/sign-protocol-evm/src/interfaces/ISP.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport { IVersionable } from \"./IVersionable.sol\";\nimport { Schema } from \"../models/Schema.sol\";\nimport { Attestation, OffchainAttestation } from \"../models/Attestation.sol\";\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @title Sign Protocol Interface\n * @author Jack Xu @ EthSign\n */\ninterface ISP is IVersionable {\n    event SchemaRegistered(uint64 schemaId);\n    event AttestationMade(uint64 attestationId, string indexingKey);\n    event AttestationRevoked(uint64 attestationId, string reason);\n    event OffchainAttestationMade(string attestationId);\n    event OffchainAttestationRevoked(string attestationId, string reason);\n\n    /**\n     * @dev 0x9e87fac8\n     */\n    error Paused();\n    /**\n     * @dev 0x38f8c6c4\n     */\n    error SchemaNonexistent();\n    /**\n     * @dev 0x71984561\n     */\n    error SchemaWrongRegistrant();\n    /**\n     * @dev 0x8ac42f49\n     */\n    error AttestationIrrevocable();\n    /**\n     * @dev 0x54681a13\n     */\n    error AttestationNonexistent();\n    /**\n     * @dev 0xa65e02ed\n     */\n    error AttestationInvalidDuration();\n    /**\n     * @dev 0xd8c3da86\n     */\n    error AttestationAlreadyRevoked();\n    /**\n     * @dev 0xa9ad2007\n     */\n    error AttestationWrongAttester();\n    /**\n     * @dev 0xc83e3cdf\n     */\n    error OffchainAttestationExists();\n    /**\n     * @dev 0xa006519a\n     */\n    error OffchainAttestationNonexistent();\n    /**\n     * @dev 0xa0671d20\n     */\n    error OffchainAttestationAlreadyRevoked();\n    /**\n     * @dev 0xfdf4e6f9\n     */\n    error InvalidDelegateSignature();\n    /**\n     * @dev 0x5c34b9cc\n     */\n    error LegacySPRequired();\n\n    /**\n     * @notice Registers a Schema.\n     * @dev Emits `SchemaRegistered`.\n     * @param schema See `Schema`.\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\"\"` or `0x`\n     * otherwise.\n     * @return schemaId The assigned ID of the registered schema.\n     */\n    function register(Schema memory schema, bytes calldata delegateSignature) external returns (uint64 schemaId);\n\n    /**\n     * @notice Makes an attestation.\n     * @dev Emits `AttestationMade`.\n     * @param attestation See `Attestation`.\n     * @param indexingKey Used by the frontend to aid indexing.\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\"\"` or `0x`\n     * otherwise.\n     * @param extraData This is forwarded to the resolver directly.\n     * @return attestationId The assigned ID of the attestation.\n     */\n    function attest(\n        Attestation calldata attestation,\n        string calldata indexingKey,\n        bytes calldata delegateSignature,\n        bytes calldata extraData\n    )\n        external\n        returns (uint64 attestationId);\n\n    /**\n     * @notice Makes an attestation where the schema hook expects ETH payment.\n     * @dev Emits `AttestationMade`.\n     * @param attestation See `Attestation`.\n     * @param resolverFeesETH Amount of funds to send to the hook.\n     * @param indexingKey Used by the frontend to aid indexing.\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\"\"` or `0x`\n     * otherwise.\n     * @param extraData This is forwarded to the resolver directly.\n     * @return attestationId The assigned ID of the attestation.\n     */\n    function attest(\n        Attestation calldata attestation,\n        uint256 resolverFeesETH,\n        string calldata indexingKey,\n        bytes calldata delegateSignature,\n        bytes calldata extraData\n    )\n        external\n        payable\n        returns (uint64 attestationId);\n\n    /**\n     * @notice Makes an attestation where the schema hook expects ERC20 payment.\n     * @dev Emits `AttestationMade`.\n     * @param attestation See `Attestation`.\n     * @param resolverFeesERC20Token ERC20 token address used for payment.\n     * @param resolverFeesERC20Amount Amount of funds to send to the hook.\n     * @param indexingKey Used by the frontend to aid indexing.\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\"\"` or `0x`\n     * otherwise.\n     * @param extraData This is forwarded to the resolver directly.\n     * @return attestationId The assigned ID of the attestation.\n     */\n    function attest(\n        Attestation calldata attestation,\n        IERC20 resolverFeesERC20Token,\n        uint256 resolverFeesERC20Amount,\n        string calldata indexingKey,\n        bytes calldata delegateSignature,\n        bytes calldata extraData\n    )\n        external\n        returns (uint64 attestationId);\n\n    /**\n     * @notice Timestamps an off-chain data ID.\n     * @dev Emits `OffchainAttestationMade`.\n     * @param offchainAttestationId The off-chain data ID.\n     * @param delegateAttester An optional delegated attester that authorized the caller to attest on their behalf if\n     * this is a delegated attestation. Use `address(0)` otherwise.\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\"\"` or `0x`\n     * otherwise. Use `\"\"` or `0x` otherwise.\n     */\n    function attestOffchain(\n        string calldata offchainAttestationId,\n        address delegateAttester,\n        bytes calldata delegateSignature\n    )\n        external;\n\n    /**\n     * @notice Revokes an existing revocable attestation.\n     * @dev Emits `AttestationRevoked`. Must be called by the attester.\n     * @param attestationId An existing attestation ID.\n     * @param reason The revocation reason. This is only emitted as an event to save gas.\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation.\n     * @param extraData This is forwarded to the resolver directly.\n     */\n    function revoke(\n        uint64 attestationId,\n        string calldata reason,\n        bytes calldata delegateSignature,\n        bytes calldata extraData\n    )\n        external;\n\n    /**\n     * @notice Revokes an existing revocable attestation where the schema hook expects ERC20 payment.\n     * @dev Emits `AttestationRevoked`. Must be called by the attester.\n     * @param attestationId An existing attestation ID.\n     * @param reason The revocation reason. This is only emitted as an event to save gas.\n     * @param resolverFeesETH Amount of funds to send to the hook.\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation.\n     * @param extraData This is forwarded to the resolver directly.\n     */\n    function revoke(\n        uint64 attestationId,\n        string calldata reason,\n        uint256 resolverFeesETH,\n        bytes calldata delegateSignature,\n        bytes calldata extraData\n    )\n        external\n        payable;\n\n    /**\n     * @notice Revokes an existing revocable attestation where the schema hook expects ERC20 payment.\n     * @dev Emits `AttestationRevoked`. Must be called by the attester.\n     * @param attestationId An existing attestation ID.\n     * @param reason The revocation reason. This is only emitted as an event to save gas.\n     * @param resolverFeesERC20Token ERC20 token address used for payment.\n     * @param resolverFeesERC20Amount Amount of funds to send to the hook.\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation.\n     * @param extraData This is forwarded to the resolver directly.\n     */\n    function revoke(\n        uint64 attestationId,\n        string calldata reason,\n        IERC20 resolverFeesERC20Token,\n        uint256 resolverFeesERC20Amount,\n        bytes calldata delegateSignature,\n        bytes calldata extraData\n    )\n        external;\n\n    /**\n     * @notice Revokes an existing offchain attestation.\n     * @dev Emits `OffchainAttestationRevoked`. Must be called by the attester.\n     * @param offchainAttestationId An existing attestation ID.\n     * @param reason The revocation reason. This is only emitted as an event to save gas.\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation.\n     */\n    function revokeOffchain(\n        string calldata offchainAttestationId,\n        string calldata reason,\n        bytes calldata delegateSignature\n    )\n        external;\n\n    /**\n     * @notice Batch registers a Schema.\n     */\n    function registerBatch(\n        Schema[] calldata schemas,\n        bytes calldata delegateSignature\n    )\n        external\n        returns (uint64[] calldata schemaIds);\n\n    /**\n     * @notice Batch attests.\n     */\n    function attestBatch(\n        Attestation[] calldata attestations,\n        string[] calldata indexingKeys,\n        bytes calldata delegateSignature,\n        bytes calldata extraData\n    )\n        external\n        returns (uint64[] calldata attestationIds);\n\n    /**\n     * @notice Batch attests where the schema hook expects ETH payment.\n     */\n    function attestBatch(\n        Attestation[] calldata attestations,\n        uint256[] calldata resolverFeesETH,\n        string[] calldata indexingKeys,\n        bytes calldata delegateSignature,\n        bytes calldata extraData\n    )\n        external\n        payable\n        returns (uint64[] calldata attestationIds);\n\n    /**\n     * @notice Batch attests where the schema hook expects ERC20 payment.\n     */\n    function attestBatch(\n        Attestation[] calldata attestations,\n        IERC20[] calldata resolverFeesERC20Tokens,\n        uint256[] calldata resolverFeesERC20Amount,\n        string[] calldata indexingKeys,\n        bytes calldata delegateSignature,\n        bytes calldata extraData\n    )\n        external\n        returns (uint64[] calldata attestationIds);\n\n    /**\n     * @notice Batch timestamps off-chain data IDs.\n     */\n    function attestOffchainBatch(\n        string[] calldata offchainAttestationIds,\n        address delegateAttester,\n        bytes calldata delegateSignature\n    )\n        external;\n\n    /**\n     * @notice Batch revokes revocable on-chain attestations.\n     */\n    function revokeBatch(\n        uint64[] calldata attestationIds,\n        string[] calldata reasons,\n        bytes calldata delegateSignature,\n        bytes calldata extraData\n    )\n        external;\n\n    /**\n     * @notice Batch revokes revocable on-chain attestations where the schema hook expects ETH payment.\n     */\n    function revokeBatch(\n        uint64[] calldata attestationIds,\n        string[] calldata reasons,\n        uint256[] calldata resolverFeesETH,\n        bytes calldata delegateSignature,\n        bytes calldata extraData\n    )\n        external\n        payable;\n\n    /**\n     * @notice Batch revokes revocable on-chain attestations where the schema hook expects ERC20 payment.\n     */\n    function revokeBatch(\n        uint64[] calldata attestationIds,\n        string[] calldata reasons,\n        IERC20[] calldata resolverFeesERC20Tokens,\n        uint256[] calldata resolverFeesERC20Amount,\n        bytes calldata delegateSignature,\n        bytes calldata extraData\n    )\n        external;\n\n    /**\n     * @notice Batch revokes off-chain attestations.\n     */\n    function revokeOffchainBatch(\n        string[] calldata offchainAttestationIds,\n        string[] calldata reasons,\n        bytes calldata delegateSignature\n    )\n        external;\n\n    /**\n     * @notice Returns the specified `Schema`.\n     */\n    function getSchema(uint64 schemaId) external view returns (Schema calldata);\n\n    /**\n     * @notice Returns the specified `Attestation`.\n     */\n    function getAttestation(uint64 attestationId) external view returns (Attestation calldata);\n\n    /**\n     * @notice Returns the specified `OffchainAttestation`.\n     */\n    function getOffchainAttestation(string calldata offchainAttestationId)\n        external\n        view\n        returns (OffchainAttestation calldata);\n\n    /**\n     * @notice Returns the hash that will be used to authorize a delegated registration.\n     */\n    function getDelegatedRegisterHash(Schema memory schema) external pure returns (bytes32);\n\n    /**\n     * @notice Returns the hash that will be used to authorize a delegated batch registration.\n     */\n    function getDelegatedRegisterBatchHash(Schema[] memory schemas) external pure returns (bytes32);\n\n    /**\n     * @notice Returns the hash that will be used to authorize a delegated attestation.\n     */\n    function getDelegatedAttestHash(Attestation calldata attestation) external pure returns (bytes32);\n\n    /**\n     * @notice Returns the hash that will be used to authorize a delegated batch attestation.\n     */\n    function getDelegatedAttestBatchHash(Attestation[] calldata attestations) external pure returns (bytes32);\n\n    /**\n     * @notice Returns the hash that will be used to authorize a delegated offchain attestation.\n     */\n    function getDelegatedOffchainAttestHash(string calldata offchainAttestationId) external pure returns (bytes32);\n\n    /**\n     * @notice Returns the hash that will be used to authorize a delegated batch offchain attestation.\n     */\n    function getDelegatedOffchainAttestBatchHash(string[] calldata offchainAttestationIds)\n        external\n        pure\n        returns (bytes32);\n\n    /**\n     * @notice Returns the hash that will be used to authorize a delegated revocation.\n     */\n    function getDelegatedRevokeHash(uint64 attestationId, string memory reason) external pure returns (bytes32);\n\n    /**\n     * @notice Returns the hash that will be used to authorize a delegated batch revocation.\n     */\n    function getDelegatedRevokeBatchHash(\n        uint64[] memory attestationIds,\n        string[] memory reasons\n    )\n        external\n        pure\n        returns (bytes32);\n\n    /**\n     * @notice Returns the hash that will be used to authorize a delegated offchain revocation.\n     */\n    function getDelegatedOffchainRevokeHash(\n        string memory offchainAttestationId,\n        string memory reason\n    )\n        external\n        pure\n        returns (bytes32);\n\n    /**\n     * @notice Returns the hash that will be used to authorize a delegated batch offchain revocation.\n     */\n    function getDelegatedOffchainRevokeBatchHash(\n        string[] memory offchainAttestationIds,\n        string[] memory reasons\n    )\n        external\n        pure\n        returns (bytes32);\n\n    /**\n     * @notice Returns the current schema counter. This is incremented for each `Schema` registered.\n     */\n    function schemaCounter() external view returns (uint64);\n\n    /**\n     * @notice Returns the current on-chain attestation counter. This is incremented for each `Attestation` made.\n     */\n    function attestationCounter() external view returns (uint64);\n}\n"},"@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @title SIGN Attestation Protocol Resolver Interface\n * @author Jack Xu @ EthSign\n */\ninterface ISPHook {\n    function didReceiveAttestation(\n        address attester,\n        uint64 schemaId,\n        uint64 attestationId,\n        bytes calldata extraData\n    )\n        external\n        payable;\n\n    function didReceiveAttestation(\n        address attester,\n        uint64 schemaId,\n        uint64 attestationId,\n        IERC20 resolverFeeERC20Token,\n        uint256 resolverFeeERC20Amount,\n        bytes calldata extraData\n    )\n        external;\n\n    function didReceiveRevocation(\n        address attester,\n        uint64 schemaId,\n        uint64 attestationId,\n        bytes calldata extraData\n    )\n        external\n        payable;\n\n    function didReceiveRevocation(\n        address attester,\n        uint64 schemaId,\n        uint64 attestationId,\n        IERC20 resolverFeeERC20Token,\n        uint256 resolverFeeERC20Amount,\n        bytes calldata extraData\n    )\n        external;\n}\n"},"@ethsign/sign-protocol-evm/src/interfaces/IVersionable.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/**\n * @title IVersionable\n * @author Jack Xu @ EthSign\n * @dev This interface helps contracts to keep track of their versioning for upgrade compatibility checks.\n */\ninterface IVersionable {\n    function version() external pure returns (string memory);\n}\n"},"@ethsign/sign-protocol-evm/src/models/Attestation.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport { DataLocation } from \"./DataLocation.sol\";\n\n/**\n * @title Attestation\n * @author Jack Xu @ EthSign\n * @notice This struct represents an on-chain attestation record. This record is not deleted after revocation.\n *\n * `schemaId`: The `Schema` that this Attestation is based on. It must exist.\n * `linkedAttestationId`: Useful if the current Attestation references a previous Attestation. It can either be 0 or an\n * existing attestation ID.\n * `attestTimestamp`: When the attestation was made. This is automatically populated by `_attest(...)`.\n * `revokeTimestamp`: When the attestation was revoked. This is automatically populated by `_revoke(...)`.\n * `attester`: The attester. At this time, the attester must be the caller of `attest()`.\n * `validUntil`: The expiration timestamp of the Attestation. Must respect `Schema.maxValidFor`. 0 indicates no\n * expiration date.\n * `dataLocation`: Where `Attestation.data` is stored. See `DataLocation.DataLocation`.\n * `revoked`: If the Attestation has been revoked. It is possible to make a revoked Attestation.\n * `recipients`: The intended ABI-encoded recipients of this Attestation. This is of type `bytes` to support non-EVM\n * repicients.\n * `data`: The raw data of the Attestation based on `Schema.schema`. There is no enforcement here, however. Recommended\n * to use `abi.encode`.\n */\nstruct Attestation {\n    uint64 schemaId;\n    uint64 linkedAttestationId;\n    uint64 attestTimestamp;\n    uint64 revokeTimestamp;\n    address attester;\n    uint64 validUntil;\n    DataLocation dataLocation;\n    bool revoked;\n    bytes[] recipients;\n    bytes data;\n}\n\n/**\n * @title OffchainAttestation\n * @author Jack Xu @ EthSign\n * @notice This struct represents an off-chain attestation record. This record is not deleted after revocation.\n *\n * `attester`: The attester. At this time, the attester must be the caller of `attestOffchain()`.\n * `timestamp`: The `block.timestamp` of the function call.\n */\nstruct OffchainAttestation {\n    address attester;\n    uint64 timestamp;\n}\n"},"@ethsign/sign-protocol-evm/src/models/DataLocation.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/**\n * @title DataLocation\n * @author Jack Xu @ EthSign\n * @notice This enum indicates where `Schema.data` and `Attestation.data` are stored.\n */\nenum DataLocation {\n    ONCHAIN,\n    ARWEAVE,\n    IPFS,\n    CUSTOM\n}\n"},"@ethsign/sign-protocol-evm/src/models/Schema.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport { ISPHook } from \"../interfaces/ISPHook.sol\";\nimport { DataLocation } from \"./DataLocation.sol\";\n\n/**\n * @title Schema\n * @author Jack Xu @ EthSign\n * @notice This struct represents an on-chain Schema that Attestations can conform to.\n *\n * `registrant`: The address that registered this schema.\n * `revocable`: Whether Attestations that adopt this Schema can be revoked.\n * `dataLocation`: Where `Schema.data` is stored. See `DataLocation.DataLocation`.\n * `maxValidFor`: The maximum number of seconds that an Attestation can remain valid. 0 means Attestations can be valid\n * forever. This is enforced through `Attestation.validUntil`.\n * `hook`: The `ISPHook` that is called at the end of every function. 0 means there is no hook set. See\n * `ISPHook`.\n * `timestamp`: When the schema was registered. This is automatically populated by `_register(...)`.\n * `data`: The raw schema that `Attestation.data` should follow. Since there is no way to enforce this, it is a `string`\n * for easy readability.\n */\nstruct Schema {\n    address registrant;\n    bool revocable;\n    DataLocation dataLocation;\n    uint64 maxValidFor;\n    ISPHook hook;\n    uint64 timestamp;\n    string data;\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"contracts/FundMe.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport { Ownable } from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport { ISP } from \"@ethsign/sign-protocol-evm/src/interfaces/ISP.sol\";\nimport { Attestation } from \"@ethsign/sign-protocol-evm/src/models/Attestation.sol\";\nimport { DataLocation } from \"@ethsign/sign-protocol-evm/src/models/DataLocation.sol\";\n\ncontract EducationalCredential is Ownable {\n    ISP public spInstance;\n    uint64 public credentialSchemaId;\n\n    event CredentialIssued(address indexed institution, address indexed recipient, string course, uint256 issueDate);\n\n    constructor() Ownable(_msgSender()) {}\n\n    function setSPInstance(address instance) external onlyOwner {\n        spInstance = ISP(instance);\n    }\n\n    function setCredentialSchemaID(uint64 schemaId) external onlyOwner {\n        credentialSchemaId = schemaId;\n    }\n\n    function issueCredential(\n        address recipient,\n        string memory course,\n        uint256 issueDate\n    ) external returns (uint64) {\n        require(credentialSchemaId != 0, \"Credential schema not set\");\n\n        // Encode the credential data\n        bytes memory data = abi.encode(course, issueDate);\n\n        // Create the attestation\n        bytes[] memory recipients = new bytes[](1);\n        recipients[0] = abi.encode(recipient);\n\n        Attestation memory attestation = Attestation({\n            schemaId: credentialSchemaId,\n            linkedAttestationId: 0,\n            attestTimestamp: 0,\n            revokeTimestamp: 0,\n            attester: _msgSender(),\n            validUntil: 0,\n            dataLocation: DataLocation.ONCHAIN,\n            revoked: false,\n            recipients: recipients,\n            data: data\n        });\n\n        // Issue the attestation\n        uint64 attestationId = spInstance.attest(attestation, \"\", \"\", \"\");\n\n        emit CredentialIssued(_msgSender(), recipient, course, issueDate);\n\n        return attestationId;\n    }\n\n    function verifyCredential(address wallet) external view returns (bool, string memory, uint256) {\n        // Variables to store the most recent valid attestation\n        bool found = false;\n        uint64 mostRecentId = 0;\n        uint256 mostRecentTimestamp = 0;\n\n        // Iterate through attestations to find the most recent one for the given wallet\n        for (uint64 i = 1; ; i++) {\n            try spInstance.getAttestation(i) returns (Attestation memory attestation) {\n                // Check if the attestation matches our criteria\n                if (attestation.schemaId == credentialSchemaId && \n                    !attestation.revoked &&\n                    attestation.recipients.length > 0) {\n                    \n                    address recipient = abi.decode(attestation.recipients[0], (address));\n                    \n                    if (recipient == wallet && attestation.attestTimestamp > mostRecentTimestamp) {\n                        found = true;\n                        mostRecentId = i;\n                        mostRecentTimestamp = attestation.attestTimestamp;\n                    }\n                }\n            } catch {\n                // If we've reached an attestation that doesn't exist, break the loop\n                break;\n            }\n        }\n\n        if (!found) {\n            return (false, \"\", 0);\n        }\n\n        // Get the most recent valid attestation\n        Attestation memory mostRecentAttestation = spInstance.getAttestation(mostRecentId);\n        \n        (string memory course, uint256 issueDate) = abi.decode(mostRecentAttestation.data, (string, uint256));\n\n        return (true, course, issueDate);\n    }\n\n    function schemaHook(\n        uint64 schemaId,\n        bytes calldata data,\n        bytes[] calldata recipients\n    ) external view returns (bool) {\n        require(schemaId == credentialSchemaId, \"Invalid schema ID\");\n        require(recipients.length == 1, \"Only one recipient allowed\");\n\n        // Decode the credential data\n        (string memory course, uint256 issueDate) = abi.decode(data, (string, uint256));\n\n        // Add your custom validation logic here\n        // For example:\n        require(bytes(course).length > 0, \"Course name cannot be empty\");\n        require(issueDate <= block.timestamp, \"Issue date cannot be in the future\");\n\n        return true;\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout","devdoc","userdoc","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@ethsign/sign-protocol-evm/src/interfaces/ISP.sol":{"ast":{"absolutePath":"@ethsign/sign-protocol-evm/src/interfaces/ISP.sol","exportedSymbols":{"Attestation":[592],"IERC20":[856],"ISP":[495],"IVersionable":[564],"OffchainAttestation":[598],"Schema":[630]},"id":496,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:0"},{"absolutePath":"@ethsign/sign-protocol-evm/src/interfaces/IVersionable.sol","file":"./IVersionable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":496,"sourceUnit":565,"src":"58:50:0","symbolAliases":[{"foreign":{"id":2,"name":"IVersionable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"67:12:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@ethsign/sign-protocol-evm/src/models/Schema.sol","file":"../models/Schema.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":496,"sourceUnit":631,"src":"109:46:0","symbolAliases":[{"foreign":{"id":4,"name":"Schema","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"118:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@ethsign/sign-protocol-evm/src/models/Attestation.sol","file":"../models/Attestation.sol","id":8,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":496,"sourceUnit":599,"src":"156:77:0","symbolAliases":[{"foreign":{"id":6,"name":"Attestation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"165:11:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":7,"name":"OffchainAttestation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"178:19:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":10,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":496,"sourceUnit":857,"src":"234:72:0","symbolAliases":[{"foreign":{"id":9,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"243:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":12,"name":"IVersionable","nameLocations":["396:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":564,"src":"396:12:0"},"id":13,"nodeType":"InheritanceSpecifier","src":"396:12:0"}],"canonicalName":"ISP","contractDependencies":[],"contractKind":"interface","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"308:70:0","text":" @title Sign Protocol Interface\n @author Jack Xu @ EthSign"},"fullyImplemented":false,"id":495,"linearizedBaseContracts":[495,564],"name":"ISP","nameLocation":"389:3:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"d0f9818d35b9c7d941f89e81a08a7f4761384ae32aeaf4a913b94319a321e7ff","id":17,"name":"SchemaRegistered","nameLocation":"421:16:0","nodeType":"EventDefinition","parameters":{"id":16,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15,"indexed":false,"mutability":"mutable","name":"schemaId","nameLocation":"445:8:0","nodeType":"VariableDeclaration","scope":17,"src":"438:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14,"name":"uint64","nodeType":"ElementaryTypeName","src":"438:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"437:17:0"},"src":"415:40:0"},{"anonymous":false,"eventSelector":"38b331f00373c8b0f9af5a4273ca1b91e894fec999bfa4ec787e8c90a5c8b05c","id":23,"name":"AttestationMade","nameLocation":"466:15:0","nodeType":"EventDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"indexed":false,"mutability":"mutable","name":"attestationId","nameLocation":"489:13:0","nodeType":"VariableDeclaration","scope":23,"src":"482:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":18,"name":"uint64","nodeType":"ElementaryTypeName","src":"482:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":21,"indexed":false,"mutability":"mutable","name":"indexingKey","nameLocation":"511:11:0","nodeType":"VariableDeclaration","scope":23,"src":"504:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":20,"name":"string","nodeType":"ElementaryTypeName","src":"504:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"481:42:0"},"src":"460:64:0"},{"anonymous":false,"eventSelector":"294c02ce66be799794a712d72e9926c40a3cb2738a51571523ffe23be2c6fb01","id":29,"name":"AttestationRevoked","nameLocation":"535:18:0","nodeType":"EventDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25,"indexed":false,"mutability":"mutable","name":"attestationId","nameLocation":"561:13:0","nodeType":"VariableDeclaration","scope":29,"src":"554:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":24,"name":"uint64","nodeType":"ElementaryTypeName","src":"554:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":27,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"583:6:0","nodeType":"VariableDeclaration","scope":29,"src":"576:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":26,"name":"string","nodeType":"ElementaryTypeName","src":"576:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"553:37:0"},"src":"529:62:0"},{"anonymous":false,"eventSelector":"6f0bf119c2fc55752051c1cfde5d145fdd499c7f748df7920409c72319ff6027","id":33,"name":"OffchainAttestationMade","nameLocation":"602:23:0","nodeType":"EventDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31,"indexed":false,"mutability":"mutable","name":"attestationId","nameLocation":"633:13:0","nodeType":"VariableDeclaration","scope":33,"src":"626:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":30,"name":"string","nodeType":"ElementaryTypeName","src":"626:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"625:22:0"},"src":"596:52:0"},{"anonymous":false,"eventSelector":"8cdef7ac4262df432ef960b4d902483c56118d54647a70746d99abc05cb970ba","id":39,"name":"OffchainAttestationRevoked","nameLocation":"659:26:0","nodeType":"EventDefinition","parameters":{"id":38,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"indexed":false,"mutability":"mutable","name":"attestationId","nameLocation":"693:13:0","nodeType":"VariableDeclaration","scope":39,"src":"686:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":34,"name":"string","nodeType":"ElementaryTypeName","src":"686:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"715:6:0","nodeType":"VariableDeclaration","scope":39,"src":"708:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":36,"name":"string","nodeType":"ElementaryTypeName","src":"708:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"685:37:0"},"src":"653:70:0"},{"documentation":{"id":40,"nodeType":"StructuredDocumentation","src":"729:34:0","text":" @dev 0x9e87fac8"},"errorSelector":"9e87fac8","id":42,"name":"Paused","nameLocation":"774:6:0","nodeType":"ErrorDefinition","parameters":{"id":41,"nodeType":"ParameterList","parameters":[],"src":"780:2:0"},"src":"768:15:0"},{"documentation":{"id":43,"nodeType":"StructuredDocumentation","src":"788:34:0","text":" @dev 0x38f8c6c4"},"errorSelector":"a3ad7828","id":45,"name":"SchemaNonexistent","nameLocation":"833:17:0","nodeType":"ErrorDefinition","parameters":{"id":44,"nodeType":"ParameterList","parameters":[],"src":"850:2:0"},"src":"827:26:0"},{"documentation":{"id":46,"nodeType":"StructuredDocumentation","src":"858:34:0","text":" @dev 0x71984561"},"errorSelector":"71984561","id":48,"name":"SchemaWrongRegistrant","nameLocation":"903:21:0","nodeType":"ErrorDefinition","parameters":{"id":47,"nodeType":"ParameterList","parameters":[],"src":"924:2:0"},"src":"897:30:0"},{"documentation":{"id":49,"nodeType":"StructuredDocumentation","src":"932:34:0","text":" @dev 0x8ac42f49"},"errorSelector":"d1994a9a","id":51,"name":"AttestationIrrevocable","nameLocation":"977:22:0","nodeType":"ErrorDefinition","parameters":{"id":50,"nodeType":"ParameterList","parameters":[],"src":"999:2:0"},"src":"971:31:0"},{"documentation":{"id":52,"nodeType":"StructuredDocumentation","src":"1007:34:0","text":" @dev 0x54681a13"},"errorSelector":"ccc2eda0","id":54,"name":"AttestationNonexistent","nameLocation":"1052:22:0","nodeType":"ErrorDefinition","parameters":{"id":53,"nodeType":"ParameterList","parameters":[],"src":"1074:2:0"},"src":"1046:31:0"},{"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1082:34:0","text":" @dev 0xa65e02ed"},"errorSelector":"2a9e0beb","id":57,"name":"AttestationInvalidDuration","nameLocation":"1127:26:0","nodeType":"ErrorDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1153:2:0"},"src":"1121:35:0"},{"documentation":{"id":58,"nodeType":"StructuredDocumentation","src":"1161:34:0","text":" @dev 0xd8c3da86"},"errorSelector":"10a0e42f","id":60,"name":"AttestationAlreadyRevoked","nameLocation":"1206:25:0","nodeType":"ErrorDefinition","parameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1231:2:0"},"src":"1200:34:0"},{"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"1239:34:0","text":" @dev 0xa9ad2007"},"errorSelector":"688731b1","id":63,"name":"AttestationWrongAttester","nameLocation":"1284:24:0","nodeType":"ErrorDefinition","parameters":{"id":62,"nodeType":"ParameterList","parameters":[],"src":"1308:2:0"},"src":"1278:33:0"},{"documentation":{"id":64,"nodeType":"StructuredDocumentation","src":"1316:34:0","text":" @dev 0xc83e3cdf"},"errorSelector":"ee5ae86a","id":66,"name":"OffchainAttestationExists","nameLocation":"1361:25:0","nodeType":"ErrorDefinition","parameters":{"id":65,"nodeType":"ParameterList","parameters":[],"src":"1386:2:0"},"src":"1355:34:0"},{"documentation":{"id":67,"nodeType":"StructuredDocumentation","src":"1394:34:0","text":" @dev 0xa006519a"},"errorSelector":"a1a740f6","id":69,"name":"OffchainAttestationNonexistent","nameLocation":"1439:30:0","nodeType":"ErrorDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[],"src":"1469:2:0"},"src":"1433:39:0"},{"documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"1477:34:0","text":" @dev 0xa0671d20"},"errorSelector":"ac8606f3","id":72,"name":"OffchainAttestationAlreadyRevoked","nameLocation":"1522:33:0","nodeType":"ErrorDefinition","parameters":{"id":71,"nodeType":"ParameterList","parameters":[],"src":"1555:2:0"},"src":"1516:42:0"},{"documentation":{"id":73,"nodeType":"StructuredDocumentation","src":"1563:34:0","text":" @dev 0xfdf4e6f9"},"errorSelector":"fdf4e6f9","id":75,"name":"InvalidDelegateSignature","nameLocation":"1608:24:0","nodeType":"ErrorDefinition","parameters":{"id":74,"nodeType":"ParameterList","parameters":[],"src":"1632:2:0"},"src":"1602:33:0"},{"documentation":{"id":76,"nodeType":"StructuredDocumentation","src":"1640:34:0","text":" @dev 0x5c34b9cc"},"errorSelector":"cc504239","id":78,"name":"LegacySPRequired","nameLocation":"1685:16:0","nodeType":"ErrorDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[],"src":"1701:2:0"},"src":"1679:25:0"},{"documentation":{"id":79,"nodeType":"StructuredDocumentation","src":"1710:324:0","text":" @notice Registers a Schema.\n @dev Emits `SchemaRegistered`.\n @param schema See `Schema`.\n @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\"\"` or `0x`\n otherwise.\n @return schemaId The assigned ID of the registered schema."},"functionSelector":"e117a861","id":89,"implemented":false,"kind":"function","modifiers":[],"name":"register","nameLocation":"2048:8:0","nodeType":"FunctionDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"schema","nameLocation":"2071:6:0","nodeType":"VariableDeclaration","scope":89,"src":"2057:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Schema_$630_memory_ptr","typeString":"struct Schema"},"typeName":{"id":81,"nodeType":"UserDefinedTypeName","pathNode":{"id":80,"name":"Schema","nameLocations":["2057:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"2057:6:0"},"referencedDeclaration":630,"src":"2057:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Schema_$630_storage_ptr","typeString":"struct Schema"}},"visibility":"internal"},{"constant":false,"id":84,"mutability":"mutable","name":"delegateSignature","nameLocation":"2094:17:0","nodeType":"VariableDeclaration","scope":89,"src":"2079:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":83,"name":"bytes","nodeType":"ElementaryTypeName","src":"2079:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2056:56:0"},"returnParameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"mutability":"mutable","name":"schemaId","nameLocation":"2138:8:0","nodeType":"VariableDeclaration","scope":89,"src":"2131:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":86,"name":"uint64","nodeType":"ElementaryTypeName","src":"2131:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2130:17:0"},"scope":495,"src":"2039:109:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2154:466:0","text":" @notice Makes an attestation.\n @dev Emits `AttestationMade`.\n @param attestation See `Attestation`.\n @param indexingKey Used by the frontend to aid indexing.\n @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\"\"` or `0x`\n otherwise.\n @param extraData This is forwarded to the resolver directly.\n @return attestationId The assigned ID of the attestation."},"functionSelector":"b82916cb","id":104,"implemented":false,"kind":"function","modifiers":[],"name":"attest","nameLocation":"2634:6:0","nodeType":"FunctionDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"attestation","nameLocation":"2671:11:0","nodeType":"VariableDeclaration","scope":104,"src":"2650:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_calldata_ptr","typeString":"struct Attestation"},"typeName":{"id":92,"nodeType":"UserDefinedTypeName","pathNode":{"id":91,"name":"Attestation","nameLocations":["2650:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":592,"src":"2650:11:0"},"referencedDeclaration":592,"src":"2650:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_storage_ptr","typeString":"struct Attestation"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"indexingKey","nameLocation":"2708:11:0","nodeType":"VariableDeclaration","scope":104,"src":"2692:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":94,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"delegateSignature","nameLocation":"2744:17:0","nodeType":"VariableDeclaration","scope":104,"src":"2729:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":96,"name":"bytes","nodeType":"ElementaryTypeName","src":"2729:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"extraData","nameLocation":"2786:9:0","nodeType":"VariableDeclaration","scope":104,"src":"2771:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":98,"name":"bytes","nodeType":"ElementaryTypeName","src":"2771:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2640:161:0"},"returnParameters":{"id":103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102,"mutability":"mutable","name":"attestationId","nameLocation":"2843:13:0","nodeType":"VariableDeclaration","scope":104,"src":"2836:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":101,"name":"uint64","nodeType":"ElementaryTypeName","src":"2836:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2835:22:0"},"scope":495,"src":"2625:233:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":105,"nodeType":"StructuredDocumentation","src":"2864:575:0","text":" @notice Makes an attestation where the schema hook expects ETH payment.\n @dev Emits `AttestationMade`.\n @param attestation See `Attestation`.\n @param resolverFeesETH Amount of funds to send to the hook.\n @param indexingKey Used by the frontend to aid indexing.\n @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\"\"` or `0x`\n otherwise.\n @param extraData This is forwarded to the resolver directly.\n @return attestationId The assigned ID of the attestation."},"functionSelector":"e09f1b7a","id":121,"implemented":false,"kind":"function","modifiers":[],"name":"attest","nameLocation":"3453:6:0","nodeType":"FunctionDefinition","parameters":{"id":117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":108,"mutability":"mutable","name":"attestation","nameLocation":"3490:11:0","nodeType":"VariableDeclaration","scope":121,"src":"3469:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_calldata_ptr","typeString":"struct Attestation"},"typeName":{"id":107,"nodeType":"UserDefinedTypeName","pathNode":{"id":106,"name":"Attestation","nameLocations":["3469:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":592,"src":"3469:11:0"},"referencedDeclaration":592,"src":"3469:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_storage_ptr","typeString":"struct Attestation"}},"visibility":"internal"},{"constant":false,"id":110,"mutability":"mutable","name":"resolverFeesETH","nameLocation":"3519:15:0","nodeType":"VariableDeclaration","scope":121,"src":"3511:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":109,"name":"uint256","nodeType":"ElementaryTypeName","src":"3511:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":112,"mutability":"mutable","name":"indexingKey","nameLocation":"3560:11:0","nodeType":"VariableDeclaration","scope":121,"src":"3544:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":111,"name":"string","nodeType":"ElementaryTypeName","src":"3544:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":114,"mutability":"mutable","name":"delegateSignature","nameLocation":"3596:17:0","nodeType":"VariableDeclaration","scope":121,"src":"3581:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":113,"name":"bytes","nodeType":"ElementaryTypeName","src":"3581:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":116,"mutability":"mutable","name":"extraData","nameLocation":"3638:9:0","nodeType":"VariableDeclaration","scope":121,"src":"3623:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":115,"name":"bytes","nodeType":"ElementaryTypeName","src":"3623:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3459:194:0"},"returnParameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"attestationId","nameLocation":"3711:13:0","nodeType":"VariableDeclaration","scope":121,"src":"3704:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":118,"name":"uint64","nodeType":"ElementaryTypeName","src":"3704:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3703:22:0"},"scope":495,"src":"3444:282:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":122,"nodeType":"StructuredDocumentation","src":"3732:660:0","text":" @notice Makes an attestation where the schema hook expects ERC20 payment.\n @dev Emits `AttestationMade`.\n @param attestation See `Attestation`.\n @param resolverFeesERC20Token ERC20 token address used for payment.\n @param resolverFeesERC20Amount Amount of funds to send to the hook.\n @param indexingKey Used by the frontend to aid indexing.\n @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\"\"` or `0x`\n otherwise.\n @param extraData This is forwarded to the resolver directly.\n @return attestationId The assigned ID of the attestation."},"functionSelector":"812c255f","id":141,"implemented":false,"kind":"function","modifiers":[],"name":"attest","nameLocation":"4406:6:0","nodeType":"FunctionDefinition","parameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":125,"mutability":"mutable","name":"attestation","nameLocation":"4443:11:0","nodeType":"VariableDeclaration","scope":141,"src":"4422:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_calldata_ptr","typeString":"struct Attestation"},"typeName":{"id":124,"nodeType":"UserDefinedTypeName","pathNode":{"id":123,"name":"Attestation","nameLocations":["4422:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":592,"src":"4422:11:0"},"referencedDeclaration":592,"src":"4422:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_storage_ptr","typeString":"struct Attestation"}},"visibility":"internal"},{"constant":false,"id":128,"mutability":"mutable","name":"resolverFeesERC20Token","nameLocation":"4471:22:0","nodeType":"VariableDeclaration","scope":141,"src":"4464:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$856","typeString":"contract IERC20"},"typeName":{"id":127,"nodeType":"UserDefinedTypeName","pathNode":{"id":126,"name":"IERC20","nameLocations":["4464:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":856,"src":"4464:6:0"},"referencedDeclaration":856,"src":"4464:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$856","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":130,"mutability":"mutable","name":"resolverFeesERC20Amount","nameLocation":"4511:23:0","nodeType":"VariableDeclaration","scope":141,"src":"4503:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":129,"name":"uint256","nodeType":"ElementaryTypeName","src":"4503:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":132,"mutability":"mutable","name":"indexingKey","nameLocation":"4560:11:0","nodeType":"VariableDeclaration","scope":141,"src":"4544:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":131,"name":"string","nodeType":"ElementaryTypeName","src":"4544:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"delegateSignature","nameLocation":"4596:17:0","nodeType":"VariableDeclaration","scope":141,"src":"4581:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":133,"name":"bytes","nodeType":"ElementaryTypeName","src":"4581:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":136,"mutability":"mutable","name":"extraData","nameLocation":"4638:9:0","nodeType":"VariableDeclaration","scope":141,"src":"4623:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":135,"name":"bytes","nodeType":"ElementaryTypeName","src":"4623:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4412:241:0"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"attestationId","nameLocation":"4695:13:0","nodeType":"VariableDeclaration","scope":141,"src":"4688:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":138,"name":"uint64","nodeType":"ElementaryTypeName","src":"4688:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4687:22:0"},"scope":495,"src":"4397:313:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":142,"nodeType":"StructuredDocumentation","src":"4716:516:0","text":" @notice Timestamps an off-chain data ID.\n @dev Emits `OffchainAttestationMade`.\n @param offchainAttestationId The off-chain data ID.\n @param delegateAttester An optional delegated attester that authorized the caller to attest on their behalf if\n this is a delegated attestation. Use `address(0)` otherwise.\n @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\"\"` or `0x`\n otherwise. Use `\"\"` or `0x` otherwise."},"functionSelector":"a01fb774","id":151,"implemented":false,"kind":"function","modifiers":[],"name":"attestOffchain","nameLocation":"5246:14:0","nodeType":"FunctionDefinition","parameters":{"id":149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"offchainAttestationId","nameLocation":"5286:21:0","nodeType":"VariableDeclaration","scope":151,"src":"5270:37:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":143,"name":"string","nodeType":"ElementaryTypeName","src":"5270:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":146,"mutability":"mutable","name":"delegateAttester","nameLocation":"5325:16:0","nodeType":"VariableDeclaration","scope":151,"src":"5317:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"5317:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":148,"mutability":"mutable","name":"delegateSignature","nameLocation":"5366:17:0","nodeType":"VariableDeclaration","scope":151,"src":"5351:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":147,"name":"bytes","nodeType":"ElementaryTypeName","src":"5351:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5260:129:0"},"returnParameters":{"id":150,"nodeType":"ParameterList","parameters":[],"src":"5406:0:0"},"scope":495,"src":"5237:170:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":152,"nodeType":"StructuredDocumentation","src":"5413:458:0","text":" @notice Revokes an existing revocable attestation.\n @dev Emits `AttestationRevoked`. Must be called by the attester.\n @param attestationId An existing attestation ID.\n @param reason The revocation reason. This is only emitted as an event to save gas.\n @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation.\n @param extraData This is forwarded to the resolver directly."},"functionSelector":"24855e60","id":163,"implemented":false,"kind":"function","modifiers":[],"name":"revoke","nameLocation":"5885:6:0","nodeType":"FunctionDefinition","parameters":{"id":161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":154,"mutability":"mutable","name":"attestationId","nameLocation":"5908:13:0","nodeType":"VariableDeclaration","scope":163,"src":"5901:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":153,"name":"uint64","nodeType":"ElementaryTypeName","src":"5901:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":156,"mutability":"mutable","name":"reason","nameLocation":"5947:6:0","nodeType":"VariableDeclaration","scope":163,"src":"5931:22:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":155,"name":"string","nodeType":"ElementaryTypeName","src":"5931:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"delegateSignature","nameLocation":"5978:17:0","nodeType":"VariableDeclaration","scope":163,"src":"5963:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":157,"name":"bytes","nodeType":"ElementaryTypeName","src":"5963:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"extraData","nameLocation":"6020:9:0","nodeType":"VariableDeclaration","scope":163,"src":"6005:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":159,"name":"bytes","nodeType":"ElementaryTypeName","src":"6005:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5891:144:0"},"returnParameters":{"id":162,"nodeType":"ParameterList","parameters":[],"src":"6052:0:0"},"scope":495,"src":"5876:177:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":164,"nodeType":"StructuredDocumentation","src":"6059:569:0","text":" @notice Revokes an existing revocable attestation where the schema hook expects ERC20 payment.\n @dev Emits `AttestationRevoked`. Must be called by the attester.\n @param attestationId An existing attestation ID.\n @param reason The revocation reason. This is only emitted as an event to save gas.\n @param resolverFeesETH Amount of funds to send to the hook.\n @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation.\n @param extraData This is forwarded to the resolver directly."},"functionSelector":"f83b92b7","id":177,"implemented":false,"kind":"function","modifiers":[],"name":"revoke","nameLocation":"6642:6:0","nodeType":"FunctionDefinition","parameters":{"id":175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"attestationId","nameLocation":"6665:13:0","nodeType":"VariableDeclaration","scope":177,"src":"6658:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":165,"name":"uint64","nodeType":"ElementaryTypeName","src":"6658:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":168,"mutability":"mutable","name":"reason","nameLocation":"6704:6:0","nodeType":"VariableDeclaration","scope":177,"src":"6688:22:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":167,"name":"string","nodeType":"ElementaryTypeName","src":"6688:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":170,"mutability":"mutable","name":"resolverFeesETH","nameLocation":"6728:15:0","nodeType":"VariableDeclaration","scope":177,"src":"6720:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":169,"name":"uint256","nodeType":"ElementaryTypeName","src":"6720:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":172,"mutability":"mutable","name":"delegateSignature","nameLocation":"6768:17:0","nodeType":"VariableDeclaration","scope":177,"src":"6753:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":171,"name":"bytes","nodeType":"ElementaryTypeName","src":"6753:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"extraData","nameLocation":"6810:9:0","nodeType":"VariableDeclaration","scope":177,"src":"6795:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":173,"name":"bytes","nodeType":"ElementaryTypeName","src":"6795:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6648:177:0"},"returnParameters":{"id":176,"nodeType":"ParameterList","parameters":[],"src":"6858:0:0"},"scope":495,"src":"6633:226:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"6865:652:0","text":" @notice Revokes an existing revocable attestation where the schema hook expects ERC20 payment.\n @dev Emits `AttestationRevoked`. Must be called by the attester.\n @param attestationId An existing attestation ID.\n @param reason The revocation reason. This is only emitted as an event to save gas.\n @param resolverFeesERC20Token ERC20 token address used for payment.\n @param resolverFeesERC20Amount Amount of funds to send to the hook.\n @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation.\n @param extraData This is forwarded to the resolver directly."},"functionSelector":"9b7f8318","id":194,"implemented":false,"kind":"function","modifiers":[],"name":"revoke","nameLocation":"7531:6:0","nodeType":"FunctionDefinition","parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"mutability":"mutable","name":"attestationId","nameLocation":"7554:13:0","nodeType":"VariableDeclaration","scope":194,"src":"7547:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":179,"name":"uint64","nodeType":"ElementaryTypeName","src":"7547:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"reason","nameLocation":"7593:6:0","nodeType":"VariableDeclaration","scope":194,"src":"7577:22:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":181,"name":"string","nodeType":"ElementaryTypeName","src":"7577:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":185,"mutability":"mutable","name":"resolverFeesERC20Token","nameLocation":"7616:22:0","nodeType":"VariableDeclaration","scope":194,"src":"7609:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$856","typeString":"contract IERC20"},"typeName":{"id":184,"nodeType":"UserDefinedTypeName","pathNode":{"id":183,"name":"IERC20","nameLocations":["7609:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":856,"src":"7609:6:0"},"referencedDeclaration":856,"src":"7609:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$856","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"resolverFeesERC20Amount","nameLocation":"7656:23:0","nodeType":"VariableDeclaration","scope":194,"src":"7648:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"7648:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":189,"mutability":"mutable","name":"delegateSignature","nameLocation":"7704:17:0","nodeType":"VariableDeclaration","scope":194,"src":"7689:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":188,"name":"bytes","nodeType":"ElementaryTypeName","src":"7689:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"extraData","nameLocation":"7746:9:0","nodeType":"VariableDeclaration","scope":194,"src":"7731:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":190,"name":"bytes","nodeType":"ElementaryTypeName","src":"7731:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7537:224:0"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[],"src":"7778:0:0"},"scope":495,"src":"7522:257:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":195,"nodeType":"StructuredDocumentation","src":"7785:405:0","text":" @notice Revokes an existing offchain attestation.\n @dev Emits `OffchainAttestationRevoked`. Must be called by the attester.\n @param offchainAttestationId An existing attestation ID.\n @param reason The revocation reason. This is only emitted as an event to save gas.\n @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation."},"functionSelector":"574a3066","id":204,"implemented":false,"kind":"function","modifiers":[],"name":"revokeOffchain","nameLocation":"8204:14:0","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"offchainAttestationId","nameLocation":"8244:21:0","nodeType":"VariableDeclaration","scope":204,"src":"8228:37:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":196,"name":"string","nodeType":"ElementaryTypeName","src":"8228:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"reason","nameLocation":"8291:6:0","nodeType":"VariableDeclaration","scope":204,"src":"8275:22:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":198,"name":"string","nodeType":"ElementaryTypeName","src":"8275:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"delegateSignature","nameLocation":"8322:17:0","nodeType":"VariableDeclaration","scope":204,"src":"8307:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":200,"name":"bytes","nodeType":"ElementaryTypeName","src":"8307:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8218:127:0"},"returnParameters":{"id":203,"nodeType":"ParameterList","parameters":[],"src":"8362:0:0"},"scope":495,"src":"8195:168:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":205,"nodeType":"StructuredDocumentation","src":"8369:52:0","text":" @notice Batch registers a Schema."},"functionSelector":"5e7689b7","id":217,"implemented":false,"kind":"function","modifiers":[],"name":"registerBatch","nameLocation":"8435:13:0","nodeType":"FunctionDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"schemas","nameLocation":"8476:7:0","nodeType":"VariableDeclaration","scope":217,"src":"8458:25:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Schema_$630_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Schema[]"},"typeName":{"baseType":{"id":207,"nodeType":"UserDefinedTypeName","pathNode":{"id":206,"name":"Schema","nameLocations":["8458:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"8458:6:0"},"referencedDeclaration":630,"src":"8458:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Schema_$630_storage_ptr","typeString":"struct Schema"}},"id":208,"nodeType":"ArrayTypeName","src":"8458:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Schema_$630_storage_$dyn_storage_ptr","typeString":"struct Schema[]"}},"visibility":"internal"},{"constant":false,"id":211,"mutability":"mutable","name":"delegateSignature","nameLocation":"8508:17:0","nodeType":"VariableDeclaration","scope":217,"src":"8493:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":210,"name":"bytes","nodeType":"ElementaryTypeName","src":"8493:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8448:83:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"schemaIds","nameLocation":"8584:9:0","nodeType":"VariableDeclaration","scope":217,"src":"8566:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_calldata_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":213,"name":"uint64","nodeType":"ElementaryTypeName","src":"8566:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":214,"nodeType":"ArrayTypeName","src":"8566:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"}],"src":"8565:29:0"},"scope":495,"src":"8426:169:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"8601:41:0","text":" @notice Batch attests."},"functionSelector":"d98934ff","id":235,"implemented":false,"kind":"function","modifiers":[],"name":"attestBatch","nameLocation":"8656:11:0","nodeType":"FunctionDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"attestations","nameLocation":"8700:12:0","nodeType":"VariableDeclaration","scope":235,"src":"8677:35:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$592_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Attestation[]"},"typeName":{"baseType":{"id":220,"nodeType":"UserDefinedTypeName","pathNode":{"id":219,"name":"Attestation","nameLocations":["8677:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":592,"src":"8677:11:0"},"referencedDeclaration":592,"src":"8677:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_storage_ptr","typeString":"struct Attestation"}},"id":221,"nodeType":"ArrayTypeName","src":"8677:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$592_storage_$dyn_storage_ptr","typeString":"struct Attestation[]"}},"visibility":"internal"},{"constant":false,"id":225,"mutability":"mutable","name":"indexingKeys","nameLocation":"8740:12:0","nodeType":"VariableDeclaration","scope":235,"src":"8722:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":223,"name":"string","nodeType":"ElementaryTypeName","src":"8722:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":224,"nodeType":"ArrayTypeName","src":"8722:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":227,"mutability":"mutable","name":"delegateSignature","nameLocation":"8777:17:0","nodeType":"VariableDeclaration","scope":235,"src":"8762:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":226,"name":"bytes","nodeType":"ElementaryTypeName","src":"8762:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":229,"mutability":"mutable","name":"extraData","nameLocation":"8819:9:0","nodeType":"VariableDeclaration","scope":235,"src":"8804:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":228,"name":"bytes","nodeType":"ElementaryTypeName","src":"8804:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8667:167:0"},"returnParameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"attestationIds","nameLocation":"8887:14:0","nodeType":"VariableDeclaration","scope":235,"src":"8869:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_calldata_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":231,"name":"uint64","nodeType":"ElementaryTypeName","src":"8869:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":232,"nodeType":"ArrayTypeName","src":"8869:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"}],"src":"8868:34:0"},"scope":495,"src":"8647:256:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":236,"nodeType":"StructuredDocumentation","src":"8909:83:0","text":" @notice Batch attests where the schema hook expects ETH payment."},"functionSelector":"4e6ac1d5","id":256,"implemented":false,"kind":"function","modifiers":[],"name":"attestBatch","nameLocation":"9006:11:0","nodeType":"FunctionDefinition","parameters":{"id":251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"attestations","nameLocation":"9050:12:0","nodeType":"VariableDeclaration","scope":256,"src":"9027:35:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$592_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Attestation[]"},"typeName":{"baseType":{"id":238,"nodeType":"UserDefinedTypeName","pathNode":{"id":237,"name":"Attestation","nameLocations":["9027:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":592,"src":"9027:11:0"},"referencedDeclaration":592,"src":"9027:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_storage_ptr","typeString":"struct Attestation"}},"id":239,"nodeType":"ArrayTypeName","src":"9027:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$592_storage_$dyn_storage_ptr","typeString":"struct Attestation[]"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"resolverFeesETH","nameLocation":"9091:15:0","nodeType":"VariableDeclaration","scope":256,"src":"9072:34:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":241,"name":"uint256","nodeType":"ElementaryTypeName","src":"9072:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":242,"nodeType":"ArrayTypeName","src":"9072:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":246,"mutability":"mutable","name":"indexingKeys","nameLocation":"9134:12:0","nodeType":"VariableDeclaration","scope":256,"src":"9116:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":244,"name":"string","nodeType":"ElementaryTypeName","src":"9116:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":245,"nodeType":"ArrayTypeName","src":"9116:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":248,"mutability":"mutable","name":"delegateSignature","nameLocation":"9171:17:0","nodeType":"VariableDeclaration","scope":256,"src":"9156:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":247,"name":"bytes","nodeType":"ElementaryTypeName","src":"9156:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":250,"mutability":"mutable","name":"extraData","nameLocation":"9213:9:0","nodeType":"VariableDeclaration","scope":256,"src":"9198:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":249,"name":"bytes","nodeType":"ElementaryTypeName","src":"9198:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9017:211:0"},"returnParameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"attestationIds","nameLocation":"9297:14:0","nodeType":"VariableDeclaration","scope":256,"src":"9279:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_calldata_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":252,"name":"uint64","nodeType":"ElementaryTypeName","src":"9279:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":253,"nodeType":"ArrayTypeName","src":"9279:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"}],"src":"9278:34:0"},"scope":495,"src":"8997:316:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"9319:85:0","text":" @notice Batch attests where the schema hook expects ERC20 payment."},"functionSelector":"59d9a12f","id":281,"implemented":false,"kind":"function","modifiers":[],"name":"attestBatch","nameLocation":"9418:11:0","nodeType":"FunctionDefinition","parameters":{"id":276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"attestations","nameLocation":"9462:12:0","nodeType":"VariableDeclaration","scope":281,"src":"9439:35:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$592_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Attestation[]"},"typeName":{"baseType":{"id":259,"nodeType":"UserDefinedTypeName","pathNode":{"id":258,"name":"Attestation","nameLocations":["9439:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":592,"src":"9439:11:0"},"referencedDeclaration":592,"src":"9439:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_storage_ptr","typeString":"struct Attestation"}},"id":260,"nodeType":"ArrayTypeName","src":"9439:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$592_storage_$dyn_storage_ptr","typeString":"struct Attestation[]"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"resolverFeesERC20Tokens","nameLocation":"9502:23:0","nodeType":"VariableDeclaration","scope":281,"src":"9484:41:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$856_$dyn_calldata_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":263,"nodeType":"UserDefinedTypeName","pathNode":{"id":262,"name":"IERC20","nameLocations":["9484:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":856,"src":"9484:6:0"},"referencedDeclaration":856,"src":"9484:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$856","typeString":"contract IERC20"}},"id":264,"nodeType":"ArrayTypeName","src":"9484:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$856_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":268,"mutability":"mutable","name":"resolverFeesERC20Amount","nameLocation":"9554:23:0","nodeType":"VariableDeclaration","scope":281,"src":"9535:42:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":266,"name":"uint256","nodeType":"ElementaryTypeName","src":"9535:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":267,"nodeType":"ArrayTypeName","src":"9535:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":271,"mutability":"mutable","name":"indexingKeys","nameLocation":"9605:12:0","nodeType":"VariableDeclaration","scope":281,"src":"9587:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":269,"name":"string","nodeType":"ElementaryTypeName","src":"9587:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":270,"nodeType":"ArrayTypeName","src":"9587:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"delegateSignature","nameLocation":"9642:17:0","nodeType":"VariableDeclaration","scope":281,"src":"9627:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":272,"name":"bytes","nodeType":"ElementaryTypeName","src":"9627:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":275,"mutability":"mutable","name":"extraData","nameLocation":"9684:9:0","nodeType":"VariableDeclaration","scope":281,"src":"9669:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":274,"name":"bytes","nodeType":"ElementaryTypeName","src":"9669:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9429:270:0"},"returnParameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"attestationIds","nameLocation":"9752:14:0","nodeType":"VariableDeclaration","scope":281,"src":"9734:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_calldata_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":277,"name":"uint64","nodeType":"ElementaryTypeName","src":"9734:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":278,"nodeType":"ArrayTypeName","src":"9734:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"}],"src":"9733:34:0"},"scope":495,"src":"9409:359:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":282,"nodeType":"StructuredDocumentation","src":"9774:63:0","text":" @notice Batch timestamps off-chain data IDs."},"functionSelector":"1916749d","id":292,"implemented":false,"kind":"function","modifiers":[],"name":"attestOffchainBatch","nameLocation":"9851:19:0","nodeType":"FunctionDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"mutability":"mutable","name":"offchainAttestationIds","nameLocation":"9898:22:0","nodeType":"VariableDeclaration","scope":292,"src":"9880:40:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":283,"name":"string","nodeType":"ElementaryTypeName","src":"9880:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":284,"nodeType":"ArrayTypeName","src":"9880:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":287,"mutability":"mutable","name":"delegateAttester","nameLocation":"9938:16:0","nodeType":"VariableDeclaration","scope":292,"src":"9930:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"9930:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":289,"mutability":"mutable","name":"delegateSignature","nameLocation":"9979:17:0","nodeType":"VariableDeclaration","scope":292,"src":"9964:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":288,"name":"bytes","nodeType":"ElementaryTypeName","src":"9964:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9870:132:0"},"returnParameters":{"id":291,"nodeType":"ParameterList","parameters":[],"src":"10019:0:0"},"scope":495,"src":"9842:178:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":293,"nodeType":"StructuredDocumentation","src":"10026:73:0","text":" @notice Batch revokes revocable on-chain attestations."},"functionSelector":"65ae13b3","id":306,"implemented":false,"kind":"function","modifiers":[],"name":"revokeBatch","nameLocation":"10113:11:0","nodeType":"FunctionDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":296,"mutability":"mutable","name":"attestationIds","nameLocation":"10152:14:0","nodeType":"VariableDeclaration","scope":306,"src":"10134:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_calldata_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":294,"name":"uint64","nodeType":"ElementaryTypeName","src":"10134:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":295,"nodeType":"ArrayTypeName","src":"10134:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"},{"constant":false,"id":299,"mutability":"mutable","name":"reasons","nameLocation":"10194:7:0","nodeType":"VariableDeclaration","scope":306,"src":"10176:25:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":297,"name":"string","nodeType":"ElementaryTypeName","src":"10176:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":298,"nodeType":"ArrayTypeName","src":"10176:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":301,"mutability":"mutable","name":"delegateSignature","nameLocation":"10226:17:0","nodeType":"VariableDeclaration","scope":306,"src":"10211:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":300,"name":"bytes","nodeType":"ElementaryTypeName","src":"10211:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"extraData","nameLocation":"10268:9:0","nodeType":"VariableDeclaration","scope":306,"src":"10253:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":302,"name":"bytes","nodeType":"ElementaryTypeName","src":"10253:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10124:159:0"},"returnParameters":{"id":305,"nodeType":"ParameterList","parameters":[],"src":"10300:0:0"},"scope":495,"src":"10104:197:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"10307:115:0","text":" @notice Batch revokes revocable on-chain attestations where the schema hook expects ETH payment."},"functionSelector":"d7681235","id":323,"implemented":false,"kind":"function","modifiers":[],"name":"revokeBatch","nameLocation":"10436:11:0","nodeType":"FunctionDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"mutability":"mutable","name":"attestationIds","nameLocation":"10475:14:0","nodeType":"VariableDeclaration","scope":323,"src":"10457:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_calldata_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":308,"name":"uint64","nodeType":"ElementaryTypeName","src":"10457:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":309,"nodeType":"ArrayTypeName","src":"10457:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"},{"constant":false,"id":313,"mutability":"mutable","name":"reasons","nameLocation":"10517:7:0","nodeType":"VariableDeclaration","scope":323,"src":"10499:25:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":311,"name":"string","nodeType":"ElementaryTypeName","src":"10499:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":312,"nodeType":"ArrayTypeName","src":"10499:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":316,"mutability":"mutable","name":"resolverFeesETH","nameLocation":"10553:15:0","nodeType":"VariableDeclaration","scope":323,"src":"10534:34:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"10534:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":315,"nodeType":"ArrayTypeName","src":"10534:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":318,"mutability":"mutable","name":"delegateSignature","nameLocation":"10593:17:0","nodeType":"VariableDeclaration","scope":323,"src":"10578:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":317,"name":"bytes","nodeType":"ElementaryTypeName","src":"10578:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"extraData","nameLocation":"10635:9:0","nodeType":"VariableDeclaration","scope":323,"src":"10620:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":319,"name":"bytes","nodeType":"ElementaryTypeName","src":"10620:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10447:203:0"},"returnParameters":{"id":322,"nodeType":"ParameterList","parameters":[],"src":"10683:0:0"},"scope":495,"src":"10427:257:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":324,"nodeType":"StructuredDocumentation","src":"10690:117:0","text":" @notice Batch revokes revocable on-chain attestations where the schema hook expects ERC20 payment."},"functionSelector":"fd397913","id":344,"implemented":false,"kind":"function","modifiers":[],"name":"revokeBatch","nameLocation":"10821:11:0","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"attestationIds","nameLocation":"10860:14:0","nodeType":"VariableDeclaration","scope":344,"src":"10842:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_calldata_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":325,"name":"uint64","nodeType":"ElementaryTypeName","src":"10842:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":326,"nodeType":"ArrayTypeName","src":"10842:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"},{"constant":false,"id":330,"mutability":"mutable","name":"reasons","nameLocation":"10902:7:0","nodeType":"VariableDeclaration","scope":344,"src":"10884:25:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":328,"name":"string","nodeType":"ElementaryTypeName","src":"10884:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":329,"nodeType":"ArrayTypeName","src":"10884:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":334,"mutability":"mutable","name":"resolverFeesERC20Tokens","nameLocation":"10937:23:0","nodeType":"VariableDeclaration","scope":344,"src":"10919:41:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$856_$dyn_calldata_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":332,"nodeType":"UserDefinedTypeName","pathNode":{"id":331,"name":"IERC20","nameLocations":["10919:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":856,"src":"10919:6:0"},"referencedDeclaration":856,"src":"10919:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$856","typeString":"contract IERC20"}},"id":333,"nodeType":"ArrayTypeName","src":"10919:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$856_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":337,"mutability":"mutable","name":"resolverFeesERC20Amount","nameLocation":"10989:23:0","nodeType":"VariableDeclaration","scope":344,"src":"10970:42:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"10970:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":336,"nodeType":"ArrayTypeName","src":"10970:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"delegateSignature","nameLocation":"11037:17:0","nodeType":"VariableDeclaration","scope":344,"src":"11022:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":338,"name":"bytes","nodeType":"ElementaryTypeName","src":"11022:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"extraData","nameLocation":"11079:9:0","nodeType":"VariableDeclaration","scope":344,"src":"11064:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":340,"name":"bytes","nodeType":"ElementaryTypeName","src":"11064:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10832:262:0"},"returnParameters":{"id":343,"nodeType":"ParameterList","parameters":[],"src":"11111:0:0"},"scope":495,"src":"10812:300:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"11118:64:0","text":" @notice Batch revokes off-chain attestations."},"functionSelector":"ba97637d","id":356,"implemented":false,"kind":"function","modifiers":[],"name":"revokeOffchainBatch","nameLocation":"11196:19:0","nodeType":"FunctionDefinition","parameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"offchainAttestationIds","nameLocation":"11243:22:0","nodeType":"VariableDeclaration","scope":356,"src":"11225:40:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":346,"name":"string","nodeType":"ElementaryTypeName","src":"11225:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":347,"nodeType":"ArrayTypeName","src":"11225:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":351,"mutability":"mutable","name":"reasons","nameLocation":"11293:7:0","nodeType":"VariableDeclaration","scope":356,"src":"11275:25:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":349,"name":"string","nodeType":"ElementaryTypeName","src":"11275:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":350,"nodeType":"ArrayTypeName","src":"11275:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":353,"mutability":"mutable","name":"delegateSignature","nameLocation":"11325:17:0","nodeType":"VariableDeclaration","scope":356,"src":"11310:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":352,"name":"bytes","nodeType":"ElementaryTypeName","src":"11310:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11215:133:0"},"returnParameters":{"id":355,"nodeType":"ParameterList","parameters":[],"src":"11365:0:0"},"scope":495,"src":"11187:179:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"11372:58:0","text":" @notice Returns the specified `Schema`."},"functionSelector":"8d1be875","id":365,"implemented":false,"kind":"function","modifiers":[],"name":"getSchema","nameLocation":"11444:9:0","nodeType":"FunctionDefinition","parameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"schemaId","nameLocation":"11461:8:0","nodeType":"VariableDeclaration","scope":365,"src":"11454:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":358,"name":"uint64","nodeType":"ElementaryTypeName","src":"11454:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"11453:17:0"},"returnParameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":365,"src":"11494:15:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Schema_$630_calldata_ptr","typeString":"struct Schema"},"typeName":{"id":362,"nodeType":"UserDefinedTypeName","pathNode":{"id":361,"name":"Schema","nameLocations":["11494:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"11494:6:0"},"referencedDeclaration":630,"src":"11494:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Schema_$630_storage_ptr","typeString":"struct Schema"}},"visibility":"internal"}],"src":"11493:17:0"},"scope":495,"src":"11435:76:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"11517:63:0","text":" @notice Returns the specified `Attestation`."},"functionSelector":"62252880","id":374,"implemented":false,"kind":"function","modifiers":[],"name":"getAttestation","nameLocation":"11594:14:0","nodeType":"FunctionDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"attestationId","nameLocation":"11616:13:0","nodeType":"VariableDeclaration","scope":374,"src":"11609:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":367,"name":"uint64","nodeType":"ElementaryTypeName","src":"11609:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"11608:22:0"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":374,"src":"11654:20:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_calldata_ptr","typeString":"struct Attestation"},"typeName":{"id":371,"nodeType":"UserDefinedTypeName","pathNode":{"id":370,"name":"Attestation","nameLocations":["11654:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":592,"src":"11654:11:0"},"referencedDeclaration":592,"src":"11654:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_storage_ptr","typeString":"struct Attestation"}},"visibility":"internal"}],"src":"11653:22:0"},"scope":495,"src":"11585:91:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":375,"nodeType":"StructuredDocumentation","src":"11682:71:0","text":" @notice Returns the specified `OffchainAttestation`."},"functionSelector":"6a67651c","id":383,"implemented":false,"kind":"function","modifiers":[],"name":"getOffchainAttestation","nameLocation":"11767:22:0","nodeType":"FunctionDefinition","parameters":{"id":378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":377,"mutability":"mutable","name":"offchainAttestationId","nameLocation":"11806:21:0","nodeType":"VariableDeclaration","scope":383,"src":"11790:37:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":376,"name":"string","nodeType":"ElementaryTypeName","src":"11790:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11789:39:0"},"returnParameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":383,"src":"11876:28:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_OffchainAttestation_$598_calldata_ptr","typeString":"struct OffchainAttestation"},"typeName":{"id":380,"nodeType":"UserDefinedTypeName","pathNode":{"id":379,"name":"OffchainAttestation","nameLocations":["11876:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":598,"src":"11876:19:0"},"referencedDeclaration":598,"src":"11876:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_OffchainAttestation_$598_storage_ptr","typeString":"struct OffchainAttestation"}},"visibility":"internal"}],"src":"11875:30:0"},"scope":495,"src":"11758:148:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"11912:100:0","text":" @notice Returns the hash that will be used to authorize a delegated registration."},"functionSelector":"570b7434","id":392,"implemented":false,"kind":"function","modifiers":[],"name":"getDelegatedRegisterHash","nameLocation":"12026:24:0","nodeType":"FunctionDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":387,"mutability":"mutable","name":"schema","nameLocation":"12065:6:0","nodeType":"VariableDeclaration","scope":392,"src":"12051:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Schema_$630_memory_ptr","typeString":"struct Schema"},"typeName":{"id":386,"nodeType":"UserDefinedTypeName","pathNode":{"id":385,"name":"Schema","nameLocations":["12051:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"12051:6:0"},"referencedDeclaration":630,"src":"12051:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Schema_$630_storage_ptr","typeString":"struct Schema"}},"visibility":"internal"}],"src":"12050:22:0"},"returnParameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":392,"src":"12096:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":389,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12096:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12095:9:0"},"scope":495,"src":"12017:88:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":393,"nodeType":"StructuredDocumentation","src":"12111:106:0","text":" @notice Returns the hash that will be used to authorize a delegated batch registration."},"functionSelector":"00f0f855","id":402,"implemented":false,"kind":"function","modifiers":[],"name":"getDelegatedRegisterBatchHash","nameLocation":"12231:29:0","nodeType":"FunctionDefinition","parameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"mutability":"mutable","name":"schemas","nameLocation":"12277:7:0","nodeType":"VariableDeclaration","scope":402,"src":"12261:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Schema_$630_memory_ptr_$dyn_memory_ptr","typeString":"struct Schema[]"},"typeName":{"baseType":{"id":395,"nodeType":"UserDefinedTypeName","pathNode":{"id":394,"name":"Schema","nameLocations":["12261:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"12261:6:0"},"referencedDeclaration":630,"src":"12261:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Schema_$630_storage_ptr","typeString":"struct Schema"}},"id":396,"nodeType":"ArrayTypeName","src":"12261:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Schema_$630_storage_$dyn_storage_ptr","typeString":"struct Schema[]"}},"visibility":"internal"}],"src":"12260:25:0"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":402,"src":"12309:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":399,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12309:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12308:9:0"},"scope":495,"src":"12222:96:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":403,"nodeType":"StructuredDocumentation","src":"12324:99:0","text":" @notice Returns the hash that will be used to authorize a delegated attestation."},"functionSelector":"8ef1fbc1","id":411,"implemented":false,"kind":"function","modifiers":[],"name":"getDelegatedAttestHash","nameLocation":"12437:22:0","nodeType":"FunctionDefinition","parameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"attestation","nameLocation":"12481:11:0","nodeType":"VariableDeclaration","scope":411,"src":"12460:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_calldata_ptr","typeString":"struct Attestation"},"typeName":{"id":405,"nodeType":"UserDefinedTypeName","pathNode":{"id":404,"name":"Attestation","nameLocations":["12460:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":592,"src":"12460:11:0"},"referencedDeclaration":592,"src":"12460:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_storage_ptr","typeString":"struct Attestation"}},"visibility":"internal"}],"src":"12459:34:0"},"returnParameters":{"id":410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":411,"src":"12517:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":408,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12517:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12516:9:0"},"scope":495,"src":"12428:98:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":412,"nodeType":"StructuredDocumentation","src":"12532:105:0","text":" @notice Returns the hash that will be used to authorize a delegated batch attestation."},"functionSelector":"3f50fb76","id":421,"implemented":false,"kind":"function","modifiers":[],"name":"getDelegatedAttestBatchHash","nameLocation":"12651:27:0","nodeType":"FunctionDefinition","parameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"attestations","nameLocation":"12702:12:0","nodeType":"VariableDeclaration","scope":421,"src":"12679:35:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$592_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Attestation[]"},"typeName":{"baseType":{"id":414,"nodeType":"UserDefinedTypeName","pathNode":{"id":413,"name":"Attestation","nameLocations":["12679:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":592,"src":"12679:11:0"},"referencedDeclaration":592,"src":"12679:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_storage_ptr","typeString":"struct Attestation"}},"id":415,"nodeType":"ArrayTypeName","src":"12679:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$592_storage_$dyn_storage_ptr","typeString":"struct Attestation[]"}},"visibility":"internal"}],"src":"12678:37:0"},"returnParameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":421,"src":"12739:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12739:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12738:9:0"},"scope":495,"src":"12642:106:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":422,"nodeType":"StructuredDocumentation","src":"12754:108:0","text":" @notice Returns the hash that will be used to authorize a delegated offchain attestation."},"functionSelector":"be919fb1","id":429,"implemented":false,"kind":"function","modifiers":[],"name":"getDelegatedOffchainAttestHash","nameLocation":"12876:30:0","nodeType":"FunctionDefinition","parameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"offchainAttestationId","nameLocation":"12923:21:0","nodeType":"VariableDeclaration","scope":429,"src":"12907:37:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":423,"name":"string","nodeType":"ElementaryTypeName","src":"12907:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12906:39:0"},"returnParameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":429,"src":"12969:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12969:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12968:9:0"},"scope":495,"src":"12867:111:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"12984:114:0","text":" @notice Returns the hash that will be used to authorize a delegated batch offchain attestation."},"functionSelector":"263bc92d","id":438,"implemented":false,"kind":"function","modifiers":[],"name":"getDelegatedOffchainAttestBatchHash","nameLocation":"13112:35:0","nodeType":"FunctionDefinition","parameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":433,"mutability":"mutable","name":"offchainAttestationIds","nameLocation":"13166:22:0","nodeType":"VariableDeclaration","scope":438,"src":"13148:40:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":431,"name":"string","nodeType":"ElementaryTypeName","src":"13148:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":432,"nodeType":"ArrayTypeName","src":"13148:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"13147:42:0"},"returnParameters":{"id":437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"13237:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":435,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13237:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13236:9:0"},"scope":495,"src":"13103:143:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"13252:98:0","text":" @notice Returns the hash that will be used to authorize a delegated revocation."},"functionSelector":"dc50eada","id":448,"implemented":false,"kind":"function","modifiers":[],"name":"getDelegatedRevokeHash","nameLocation":"13364:22:0","nodeType":"FunctionDefinition","parameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"attestationId","nameLocation":"13394:13:0","nodeType":"VariableDeclaration","scope":448,"src":"13387:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":440,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":443,"mutability":"mutable","name":"reason","nameLocation":"13423:6:0","nodeType":"VariableDeclaration","scope":448,"src":"13409:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":442,"name":"string","nodeType":"ElementaryTypeName","src":"13409:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13386:44:0"},"returnParameters":{"id":447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":448,"src":"13454:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13454:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13453:9:0"},"scope":495,"src":"13355:108:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":449,"nodeType":"StructuredDocumentation","src":"13469:104:0","text":" @notice Returns the hash that will be used to authorize a delegated batch revocation."},"functionSelector":"40f356fa","id":460,"implemented":false,"kind":"function","modifiers":[],"name":"getDelegatedRevokeBatchHash","nameLocation":"13587:27:0","nodeType":"FunctionDefinition","parameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"mutability":"mutable","name":"attestationIds","nameLocation":"13640:14:0","nodeType":"VariableDeclaration","scope":460,"src":"13624:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":450,"name":"uint64","nodeType":"ElementaryTypeName","src":"13624:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":451,"nodeType":"ArrayTypeName","src":"13624:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"reasons","nameLocation":"13680:7:0","nodeType":"VariableDeclaration","scope":460,"src":"13664:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":453,"name":"string","nodeType":"ElementaryTypeName","src":"13664:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":454,"nodeType":"ArrayTypeName","src":"13664:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"13614:79:0"},"returnParameters":{"id":459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":460,"src":"13741:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13741:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13740:9:0"},"scope":495,"src":"13578:172:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":461,"nodeType":"StructuredDocumentation","src":"13756:107:0","text":" @notice Returns the hash that will be used to authorize a delegated offchain revocation."},"functionSelector":"985292eb","id":470,"implemented":false,"kind":"function","modifiers":[],"name":"getDelegatedOffchainRevokeHash","nameLocation":"13877:30:0","nodeType":"FunctionDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":463,"mutability":"mutable","name":"offchainAttestationId","nameLocation":"13931:21:0","nodeType":"VariableDeclaration","scope":470,"src":"13917:35:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":462,"name":"string","nodeType":"ElementaryTypeName","src":"13917:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":465,"mutability":"mutable","name":"reason","nameLocation":"13976:6:0","nodeType":"VariableDeclaration","scope":470,"src":"13962:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":464,"name":"string","nodeType":"ElementaryTypeName","src":"13962:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13907:81:0"},"returnParameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":470,"src":"14036:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":467,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14036:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14035:9:0"},"scope":495,"src":"13868:177:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"14051:113:0","text":" @notice Returns the hash that will be used to authorize a delegated batch offchain revocation."},"functionSelector":"d3dc7b23","id":482,"implemented":false,"kind":"function","modifiers":[],"name":"getDelegatedOffchainRevokeBatchHash","nameLocation":"14178:35:0","nodeType":"FunctionDefinition","parameters":{"id":478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":474,"mutability":"mutable","name":"offchainAttestationIds","nameLocation":"14239:22:0","nodeType":"VariableDeclaration","scope":482,"src":"14223:38:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":472,"name":"string","nodeType":"ElementaryTypeName","src":"14223:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":473,"nodeType":"ArrayTypeName","src":"14223:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":477,"mutability":"mutable","name":"reasons","nameLocation":"14287:7:0","nodeType":"VariableDeclaration","scope":482,"src":"14271:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":475,"name":"string","nodeType":"ElementaryTypeName","src":"14271:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":476,"nodeType":"ArrayTypeName","src":"14271:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"14213:87:0"},"returnParameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":482,"src":"14348:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":479,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14348:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14347:9:0"},"scope":495,"src":"14169:188:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"14363:112:0","text":" @notice Returns the current schema counter. This is incremented for each `Schema` registered."},"functionSelector":"cb6a3237","id":488,"implemented":false,"kind":"function","modifiers":[],"name":"schemaCounter","nameLocation":"14489:13:0","nodeType":"FunctionDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[],"src":"14502:2:0"},"returnParameters":{"id":487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":488,"src":"14528:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":485,"name":"uint64","nodeType":"ElementaryTypeName","src":"14528:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"14527:8:0"},"scope":495,"src":"14480:56:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"14542:125:0","text":" @notice Returns the current on-chain attestation counter. This is incremented for each `Attestation` made."},"functionSelector":"2c996e03","id":494,"implemented":false,"kind":"function","modifiers":[],"name":"attestationCounter","nameLocation":"14681:18:0","nodeType":"FunctionDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[],"src":"14699:2:0"},"returnParameters":{"id":493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":494,"src":"14725:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":491,"name":"uint64","nodeType":"ElementaryTypeName","src":"14725:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"14724:8:0"},"scope":495,"src":"14672:61:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":496,"src":"379:14356:0","usedErrors":[42,45,48,51,54,57,60,63,66,69,72,75,78],"usedEvents":[17,23,29,33,39]}],"src":"32:14704:0"},"id":0},"@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol":{"ast":{"absolutePath":"@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol","exportedSymbols":{"IERC20":[856],"ISPHook":[555]},"id":556,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":497,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":499,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":556,"sourceUnit":857,"src":"58:72:1","symbolAliases":[{"foreign":{"id":498,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"67:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ISPHook","contractDependencies":[],"contractKind":"interface","documentation":{"id":500,"nodeType":"StructuredDocumentation","src":"132:91:1","text":" @title SIGN Attestation Protocol Resolver Interface\n @author Jack Xu @ EthSign"},"fullyImplemented":false,"id":555,"linearizedBaseContracts":[555],"name":"ISPHook","nameLocation":"234:7:1","nodeType":"ContractDefinition","nodes":[{"functionSelector":"3398b4ed","id":511,"implemented":false,"kind":"function","modifiers":[],"name":"didReceiveAttestation","nameLocation":"257:21:1","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":502,"mutability":"mutable","name":"attester","nameLocation":"296:8:1","nodeType":"VariableDeclaration","scope":511,"src":"288:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":501,"name":"address","nodeType":"ElementaryTypeName","src":"288:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":504,"mutability":"mutable","name":"schemaId","nameLocation":"321:8:1","nodeType":"VariableDeclaration","scope":511,"src":"314:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":503,"name":"uint64","nodeType":"ElementaryTypeName","src":"314:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":506,"mutability":"mutable","name":"attestationId","nameLocation":"346:13:1","nodeType":"VariableDeclaration","scope":511,"src":"339:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":505,"name":"uint64","nodeType":"ElementaryTypeName","src":"339:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":508,"mutability":"mutable","name":"extraData","nameLocation":"384:9:1","nodeType":"VariableDeclaration","scope":511,"src":"369:24:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":507,"name":"bytes","nodeType":"ElementaryTypeName","src":"369:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"278:121:1"},"returnParameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"432:0:1"},"scope":555,"src":"248:185:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"4466507a","id":527,"implemented":false,"kind":"function","modifiers":[],"name":"didReceiveAttestation","nameLocation":"448:21:1","nodeType":"FunctionDefinition","parameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":513,"mutability":"mutable","name":"attester","nameLocation":"487:8:1","nodeType":"VariableDeclaration","scope":527,"src":"479:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"479:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":515,"mutability":"mutable","name":"schemaId","nameLocation":"512:8:1","nodeType":"VariableDeclaration","scope":527,"src":"505:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":514,"name":"uint64","nodeType":"ElementaryTypeName","src":"505:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":517,"mutability":"mutable","name":"attestationId","nameLocation":"537:13:1","nodeType":"VariableDeclaration","scope":527,"src":"530:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":516,"name":"uint64","nodeType":"ElementaryTypeName","src":"530:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":520,"mutability":"mutable","name":"resolverFeeERC20Token","nameLocation":"567:21:1","nodeType":"VariableDeclaration","scope":527,"src":"560:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$856","typeString":"contract IERC20"},"typeName":{"id":519,"nodeType":"UserDefinedTypeName","pathNode":{"id":518,"name":"IERC20","nameLocations":["560:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":856,"src":"560:6:1"},"referencedDeclaration":856,"src":"560:6:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$856","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":522,"mutability":"mutable","name":"resolverFeeERC20Amount","nameLocation":"606:22:1","nodeType":"VariableDeclaration","scope":527,"src":"598:30:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":521,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":524,"mutability":"mutable","name":"extraData","nameLocation":"653:9:1","nodeType":"VariableDeclaration","scope":527,"src":"638:24:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":523,"name":"bytes","nodeType":"ElementaryTypeName","src":"638:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"469:199:1"},"returnParameters":{"id":526,"nodeType":"ParameterList","parameters":[],"src":"685:0:1"},"scope":555,"src":"439:247:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e33361f4","id":538,"implemented":false,"kind":"function","modifiers":[],"name":"didReceiveRevocation","nameLocation":"701:20:1","nodeType":"FunctionDefinition","parameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":529,"mutability":"mutable","name":"attester","nameLocation":"739:8:1","nodeType":"VariableDeclaration","scope":538,"src":"731:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"731:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":531,"mutability":"mutable","name":"schemaId","nameLocation":"764:8:1","nodeType":"VariableDeclaration","scope":538,"src":"757:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":530,"name":"uint64","nodeType":"ElementaryTypeName","src":"757:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":533,"mutability":"mutable","name":"attestationId","nameLocation":"789:13:1","nodeType":"VariableDeclaration","scope":538,"src":"782:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":532,"name":"uint64","nodeType":"ElementaryTypeName","src":"782:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":535,"mutability":"mutable","name":"extraData","nameLocation":"827:9:1","nodeType":"VariableDeclaration","scope":538,"src":"812:24:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":534,"name":"bytes","nodeType":"ElementaryTypeName","src":"812:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"721:121:1"},"returnParameters":{"id":537,"nodeType":"ParameterList","parameters":[],"src":"875:0:1"},"scope":555,"src":"692:184:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"e830b5c7","id":554,"implemented":false,"kind":"function","modifiers":[],"name":"didReceiveRevocation","nameLocation":"891:20:1","nodeType":"FunctionDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":540,"mutability":"mutable","name":"attester","nameLocation":"929:8:1","nodeType":"VariableDeclaration","scope":554,"src":"921:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":542,"mutability":"mutable","name":"schemaId","nameLocation":"954:8:1","nodeType":"VariableDeclaration","scope":554,"src":"947:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":541,"name":"uint64","nodeType":"ElementaryTypeName","src":"947:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":544,"mutability":"mutable","name":"attestationId","nameLocation":"979:13:1","nodeType":"VariableDeclaration","scope":554,"src":"972:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":543,"name":"uint64","nodeType":"ElementaryTypeName","src":"972:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"resolverFeeERC20Token","nameLocation":"1009:21:1","nodeType":"VariableDeclaration","scope":554,"src":"1002:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$856","typeString":"contract IERC20"},"typeName":{"id":546,"nodeType":"UserDefinedTypeName","pathNode":{"id":545,"name":"IERC20","nameLocations":["1002:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":856,"src":"1002:6:1"},"referencedDeclaration":856,"src":"1002:6:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$856","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"resolverFeeERC20Amount","nameLocation":"1048:22:1","nodeType":"VariableDeclaration","scope":554,"src":"1040:30:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":548,"name":"uint256","nodeType":"ElementaryTypeName","src":"1040:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":551,"mutability":"mutable","name":"extraData","nameLocation":"1095:9:1","nodeType":"VariableDeclaration","scope":554,"src":"1080:24:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":550,"name":"bytes","nodeType":"ElementaryTypeName","src":"1080:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"911:199:1"},"returnParameters":{"id":553,"nodeType":"ParameterList","parameters":[],"src":"1127:0:1"},"scope":555,"src":"882:246:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":556,"src":"224:906:1","usedErrors":[],"usedEvents":[]}],"src":"32:1099:1"},"id":1},"@ethsign/sign-protocol-evm/src/interfaces/IVersionable.sol":{"ast":{"absolutePath":"@ethsign/sign-protocol-evm/src/interfaces/IVersionable.sol","exportedSymbols":{"IVersionable":[564]},"id":565,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":557,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IVersionable","contractDependencies":[],"contractKind":"interface","documentation":{"id":558,"nodeType":"StructuredDocumentation","src":"58:166:2","text":" @title IVersionable\n @author Jack Xu @ EthSign\n @dev This interface helps contracts to keep track of their versioning for upgrade compatibility checks."},"fullyImplemented":false,"id":564,"linearizedBaseContracts":[564],"name":"IVersionable","nameLocation":"235:12:2","nodeType":"ContractDefinition","nodes":[{"functionSelector":"54fd4d50","id":563,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"263:7:2","nodeType":"FunctionDefinition","parameters":{"id":559,"nodeType":"ParameterList","parameters":[],"src":"270:2:2"},"returnParameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":563,"src":"296:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":560,"name":"string","nodeType":"ElementaryTypeName","src":"296:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"295:15:2"},"scope":564,"src":"254:57:2","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":565,"src":"225:88:2","usedErrors":[],"usedEvents":[]}],"src":"32:282:2"},"id":2},"@ethsign/sign-protocol-evm/src/models/Attestation.sol":{"ast":{"absolutePath":"@ethsign/sign-protocol-evm/src/models/Attestation.sol","exportedSymbols":{"Attestation":[592],"DataLocation":[606],"OffchainAttestation":[598]},"id":599,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":566,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:3"},{"absolutePath":"@ethsign/sign-protocol-evm/src/models/DataLocation.sol","file":"./DataLocation.sol","id":568,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":599,"sourceUnit":607,"src":"58:50:3","symbolAliases":[{"foreign":{"id":567,"name":"DataLocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"67:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"Attestation","documentation":{"id":569,"nodeType":"StructuredDocumentation","src":"110:1292:3","text":" @title Attestation\n @author Jack Xu @ EthSign\n @notice This struct represents an on-chain attestation record. This record is not deleted after revocation.\n `schemaId`: The `Schema` that this Attestation is based on. It must exist.\n `linkedAttestationId`: Useful if the current Attestation references a previous Attestation. It can either be 0 or an\n existing attestation ID.\n `attestTimestamp`: When the attestation was made. This is automatically populated by `_attest(...)`.\n `revokeTimestamp`: When the attestation was revoked. This is automatically populated by `_revoke(...)`.\n `attester`: The attester. At this time, the attester must be the caller of `attest()`.\n `validUntil`: The expiration timestamp of the Attestation. Must respect `Schema.maxValidFor`. 0 indicates no\n expiration date.\n `dataLocation`: Where `Attestation.data` is stored. See `DataLocation.DataLocation`.\n `revoked`: If the Attestation has been revoked. It is possible to make a revoked Attestation.\n `recipients`: The intended ABI-encoded recipients of this Attestation. This is of type `bytes` to support non-EVM\n repicients.\n `data`: The raw data of the Attestation based on `Schema.schema`. There is no enforcement here, however. Recommended\n to use `abi.encode`."},"id":592,"members":[{"constant":false,"id":571,"mutability":"mutable","name":"schemaId","nameLocation":"1435:8:3","nodeType":"VariableDeclaration","scope":592,"src":"1428:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":570,"name":"uint64","nodeType":"ElementaryTypeName","src":"1428:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":573,"mutability":"mutable","name":"linkedAttestationId","nameLocation":"1456:19:3","nodeType":"VariableDeclaration","scope":592,"src":"1449:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":572,"name":"uint64","nodeType":"ElementaryTypeName","src":"1449:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":575,"mutability":"mutable","name":"attestTimestamp","nameLocation":"1488:15:3","nodeType":"VariableDeclaration","scope":592,"src":"1481:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":574,"name":"uint64","nodeType":"ElementaryTypeName","src":"1481:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":577,"mutability":"mutable","name":"revokeTimestamp","nameLocation":"1516:15:3","nodeType":"VariableDeclaration","scope":592,"src":"1509:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":576,"name":"uint64","nodeType":"ElementaryTypeName","src":"1509:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"attester","nameLocation":"1545:8:3","nodeType":"VariableDeclaration","scope":592,"src":"1537:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":578,"name":"address","nodeType":"ElementaryTypeName","src":"1537:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"validUntil","nameLocation":"1566:10:3","nodeType":"VariableDeclaration","scope":592,"src":"1559:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":580,"name":"uint64","nodeType":"ElementaryTypeName","src":"1559:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":584,"mutability":"mutable","name":"dataLocation","nameLocation":"1595:12:3","nodeType":"VariableDeclaration","scope":592,"src":"1582:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DataLocation_$606","typeString":"enum DataLocation"},"typeName":{"id":583,"nodeType":"UserDefinedTypeName","pathNode":{"id":582,"name":"DataLocation","nameLocations":["1582:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":606,"src":"1582:12:3"},"referencedDeclaration":606,"src":"1582:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_DataLocation_$606","typeString":"enum DataLocation"}},"visibility":"internal"},{"constant":false,"id":586,"mutability":"mutable","name":"revoked","nameLocation":"1618:7:3","nodeType":"VariableDeclaration","scope":592,"src":"1613:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":585,"name":"bool","nodeType":"ElementaryTypeName","src":"1613:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"recipients","nameLocation":"1639:10:3","nodeType":"VariableDeclaration","scope":592,"src":"1631:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":587,"name":"bytes","nodeType":"ElementaryTypeName","src":"1631:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":588,"nodeType":"ArrayTypeName","src":"1631:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":591,"mutability":"mutable","name":"data","nameLocation":"1661:4:3","nodeType":"VariableDeclaration","scope":592,"src":"1655:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":590,"name":"bytes","nodeType":"ElementaryTypeName","src":"1655:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Attestation","nameLocation":"1410:11:3","nodeType":"StructDefinition","scope":599,"src":"1403:265:3","visibility":"public"},{"canonicalName":"OffchainAttestation","documentation":{"id":593,"nodeType":"StructuredDocumentation","src":"1670:339:3","text":" @title OffchainAttestation\n @author Jack Xu @ EthSign\n @notice This struct represents an off-chain attestation record. This record is not deleted after revocation.\n `attester`: The attester. At this time, the attester must be the caller of `attestOffchain()`.\n `timestamp`: The `block.timestamp` of the function call."},"id":598,"members":[{"constant":false,"id":595,"mutability":"mutable","name":"attester","nameLocation":"2051:8:3","nodeType":"VariableDeclaration","scope":598,"src":"2043:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":594,"name":"address","nodeType":"ElementaryTypeName","src":"2043:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":597,"mutability":"mutable","name":"timestamp","nameLocation":"2072:9:3","nodeType":"VariableDeclaration","scope":598,"src":"2065:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":596,"name":"uint64","nodeType":"ElementaryTypeName","src":"2065:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"OffchainAttestation","nameLocation":"2017:19:3","nodeType":"StructDefinition","scope":599,"src":"2010:74:3","visibility":"public"}],"src":"32:2053:3"},"id":3},"@ethsign/sign-protocol-evm/src/models/DataLocation.sol":{"ast":{"absolutePath":"@ethsign/sign-protocol-evm/src/models/DataLocation.sol","exportedSymbols":{"DataLocation":[606]},"id":607,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":600,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:4"},{"canonicalName":"DataLocation","documentation":{"id":601,"nodeType":"StructuredDocumentation","src":"58:145:4","text":" @title DataLocation\n @author Jack Xu @ EthSign\n @notice This enum indicates where `Schema.data` and `Attestation.data` are stored."},"id":606,"members":[{"id":602,"name":"ONCHAIN","nameLocation":"228:7:4","nodeType":"EnumValue","src":"228:7:4"},{"id":603,"name":"ARWEAVE","nameLocation":"241:7:4","nodeType":"EnumValue","src":"241:7:4"},{"id":604,"name":"IPFS","nameLocation":"254:4:4","nodeType":"EnumValue","src":"254:4:4"},{"id":605,"name":"CUSTOM","nameLocation":"264:6:4","nodeType":"EnumValue","src":"264:6:4"}],"name":"DataLocation","nameLocation":"209:12:4","nodeType":"EnumDefinition","src":"204:68:4"}],"src":"32:241:4"},"id":4},"@ethsign/sign-protocol-evm/src/models/Schema.sol":{"ast":{"absolutePath":"@ethsign/sign-protocol-evm/src/models/Schema.sol","exportedSymbols":{"DataLocation":[606],"ISPHook":[555],"Schema":[630]},"id":631,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":608,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:5"},{"absolutePath":"@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol","file":"../interfaces/ISPHook.sol","id":610,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":556,"src":"58:52:5","symbolAliases":[{"foreign":{"id":609,"name":"ISPHook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"67:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@ethsign/sign-protocol-evm/src/models/DataLocation.sol","file":"./DataLocation.sol","id":612,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":607,"src":"111:50:5","symbolAliases":[{"foreign":{"id":611,"name":"DataLocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"120:12:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"Schema","documentation":{"id":613,"nodeType":"StructuredDocumentation","src":"163:908:5","text":" @title Schema\n @author Jack Xu @ EthSign\n @notice This struct represents an on-chain Schema that Attestations can conform to.\n `registrant`: The address that registered this schema.\n `revocable`: Whether Attestations that adopt this Schema can be revoked.\n `dataLocation`: Where `Schema.data` is stored. See `DataLocation.DataLocation`.\n `maxValidFor`: The maximum number of seconds that an Attestation can remain valid. 0 means Attestations can be valid\n forever. This is enforced through `Attestation.validUntil`.\n `hook`: The `ISPHook` that is called at the end of every function. 0 means there is no hook set. See\n `ISPHook`.\n `timestamp`: When the schema was registered. This is automatically populated by `_register(...)`.\n `data`: The raw schema that `Attestation.data` should follow. Since there is no way to enforce this, it is a `string`\n for easy readability."},"id":630,"members":[{"constant":false,"id":615,"mutability":"mutable","name":"registrant","nameLocation":"1100:10:5","nodeType":"VariableDeclaration","scope":630,"src":"1092:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":614,"name":"address","nodeType":"ElementaryTypeName","src":"1092:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":617,"mutability":"mutable","name":"revocable","nameLocation":"1121:9:5","nodeType":"VariableDeclaration","scope":630,"src":"1116:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":616,"name":"bool","nodeType":"ElementaryTypeName","src":"1116:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":620,"mutability":"mutable","name":"dataLocation","nameLocation":"1149:12:5","nodeType":"VariableDeclaration","scope":630,"src":"1136:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DataLocation_$606","typeString":"enum DataLocation"},"typeName":{"id":619,"nodeType":"UserDefinedTypeName","pathNode":{"id":618,"name":"DataLocation","nameLocations":["1136:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":606,"src":"1136:12:5"},"referencedDeclaration":606,"src":"1136:12:5","typeDescriptions":{"typeIdentifier":"t_enum$_DataLocation_$606","typeString":"enum DataLocation"}},"visibility":"internal"},{"constant":false,"id":622,"mutability":"mutable","name":"maxValidFor","nameLocation":"1174:11:5","nodeType":"VariableDeclaration","scope":630,"src":"1167:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":621,"name":"uint64","nodeType":"ElementaryTypeName","src":"1167:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":625,"mutability":"mutable","name":"hook","nameLocation":"1199:4:5","nodeType":"VariableDeclaration","scope":630,"src":"1191:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISPHook_$555","typeString":"contract ISPHook"},"typeName":{"id":624,"nodeType":"UserDefinedTypeName","pathNode":{"id":623,"name":"ISPHook","nameLocations":["1191:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":555,"src":"1191:7:5"},"referencedDeclaration":555,"src":"1191:7:5","typeDescriptions":{"typeIdentifier":"t_contract$_ISPHook_$555","typeString":"contract ISPHook"}},"visibility":"internal"},{"constant":false,"id":627,"mutability":"mutable","name":"timestamp","nameLocation":"1216:9:5","nodeType":"VariableDeclaration","scope":630,"src":"1209:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":626,"name":"uint64","nodeType":"ElementaryTypeName","src":"1209:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":629,"mutability":"mutable","name":"data","nameLocation":"1238:4:5","nodeType":"VariableDeclaration","scope":630,"src":"1231:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":628,"name":"string","nodeType":"ElementaryTypeName","src":"1231:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Schema","nameLocation":"1079:6:5","nodeType":"StructDefinition","scope":631,"src":"1072:173:5","visibility":"public"}],"src":"32:1214:5"},"id":5},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[886],"Ownable":[778]},"id":779,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":632,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":634,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":779,"sourceUnit":887,"src":"128:45:6","symbolAliases":[{"foreign":{"id":633,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"136:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":636,"name":"Context","nameLocations":["692:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":886,"src":"692:7:6"},"id":637,"nodeType":"InheritanceSpecifier","src":"692:7:6"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"175:487:6","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":778,"linearizedBaseContracts":[778,886],"name":"Ownable","nameLocation":"681:7:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":639,"mutability":"mutable","name":"_owner","nameLocation":"722:6:6","nodeType":"VariableDeclaration","scope":778,"src":"706:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":638,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":640,"nodeType":"StructuredDocumentation","src":"735:85:6","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":644,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:6","nodeType":"ErrorDefinition","parameters":{"id":643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"account","nameLocation":"866:7:6","nodeType":"VariableDeclaration","scope":644,"src":"858:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":641,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:6"},"src":"825:50:6"},{"documentation":{"id":645,"nodeType":"StructuredDocumentation","src":"881:82:6","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":649,"name":"OwnableInvalidOwner","nameLocation":"974:19:6","nodeType":"ErrorDefinition","parameters":{"id":648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":647,"mutability":"mutable","name":"owner","nameLocation":"1002:5:6","nodeType":"VariableDeclaration","scope":649,"src":"994:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:6"},"src":"968:41:6"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":655,"name":"OwnershipTransferred","nameLocation":"1021:20:6","nodeType":"EventDefinition","parameters":{"id":654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":651,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:6","nodeType":"VariableDeclaration","scope":655,"src":"1042:29:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":650,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":653,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:6","nodeType":"VariableDeclaration","scope":655,"src":"1073:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":652,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:6"},"src":"1015:84:6"},{"body":{"id":680,"nodeType":"Block","src":"1259:153:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":661,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"1273:12:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":662,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:6","typeDescriptions":{}}},"id":665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":675,"nodeType":"IfStatement","src":"1269:95:6","trueBody":{"id":674,"nodeType":"Block","src":"1301:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":668,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:6","typeDescriptions":{}}},"id":671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":667,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"1322:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":673,"nodeType":"RevertStatement","src":"1315:38:6"}]}},{"expression":{"arguments":[{"id":677,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"1392:12:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":676,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"1373:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":679,"nodeType":"ExpressionStatement","src":"1373:32:6"}]},"documentation":{"id":656,"nodeType":"StructuredDocumentation","src":"1105:115:6","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":681,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":658,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:6","nodeType":"VariableDeclaration","scope":681,"src":"1237:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":657,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:6"},"returnParameters":{"id":660,"nodeType":"ParameterList","parameters":[],"src":"1259:0:6"},"scope":778,"src":"1225:187:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":688,"nodeType":"Block","src":"1521:41:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":684,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"1531:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":686,"nodeType":"ExpressionStatement","src":"1531:13:6"},{"id":687,"nodeType":"PlaceholderStatement","src":"1554:1:6"}]},"documentation":{"id":682,"nodeType":"StructuredDocumentation","src":"1418:77:6","text":" @dev Throws if called by any account other than the owner."},"id":689,"name":"onlyOwner","nameLocation":"1509:9:6","nodeType":"ModifierDefinition","parameters":{"id":683,"nodeType":"ParameterList","parameters":[],"src":"1518:2:6"},"src":"1500:62:6","virtual":false,"visibility":"internal"},{"body":{"id":697,"nodeType":"Block","src":"1693:30:6","statements":[{"expression":{"id":695,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"1710:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":694,"id":696,"nodeType":"Return","src":"1703:13:6"}]},"documentation":{"id":690,"nodeType":"StructuredDocumentation","src":"1568:65:6","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":698,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:6","nodeType":"FunctionDefinition","parameters":{"id":691,"nodeType":"ParameterList","parameters":[],"src":"1652:2:6"},"returnParameters":{"id":694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":698,"src":"1684:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:6"},"scope":778,"src":"1638:85:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":714,"nodeType":"Block","src":"1841:117:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":702,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"1855:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":704,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"1866:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":713,"nodeType":"IfStatement","src":"1851:101:6","trueBody":{"id":712,"nodeType":"Block","src":"1880:72:6","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":708,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"1928:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":707,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"1901:26:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":711,"nodeType":"RevertStatement","src":"1894:47:6"}]}}]},"documentation":{"id":699,"nodeType":"StructuredDocumentation","src":"1729:62:6","text":" @dev Throws if the sender is not the owner."},"id":715,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:6","nodeType":"FunctionDefinition","parameters":{"id":700,"nodeType":"ParameterList","parameters":[],"src":"1816:2:6"},"returnParameters":{"id":701,"nodeType":"ParameterList","parameters":[],"src":"1841:0:6"},"scope":778,"src":"1796:162:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":728,"nodeType":"Block","src":"2347:47:6","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":722,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:6","typeDescriptions":{}}},"id":725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":721,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"2357:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":727,"nodeType":"ExpressionStatement","src":"2357:30:6"}]},"documentation":{"id":716,"nodeType":"StructuredDocumentation","src":"1964:324:6","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":729,"implemented":true,"kind":"function","modifiers":[{"id":719,"kind":"modifierInvocation","modifierName":{"id":718,"name":"onlyOwner","nameLocations":["2337:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":689,"src":"2337:9:6"},"nodeType":"ModifierInvocation","src":"2337:9:6"}],"name":"renounceOwnership","nameLocation":"2302:17:6","nodeType":"FunctionDefinition","parameters":{"id":717,"nodeType":"ParameterList","parameters":[],"src":"2319:2:6"},"returnParameters":{"id":720,"nodeType":"ParameterList","parameters":[],"src":"2347:0:6"},"scope":778,"src":"2293:101:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":756,"nodeType":"Block","src":"2613:145:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":737,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"2627:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":738,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:6","typeDescriptions":{}}},"id":741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":751,"nodeType":"IfStatement","src":"2623:91:6","trueBody":{"id":750,"nodeType":"Block","src":"2651:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":744,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:6","typeDescriptions":{}}},"id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":743,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"2672:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":749,"nodeType":"RevertStatement","src":"2665:38:6"}]}},{"expression":{"arguments":[{"id":753,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"2742:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":752,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"2723:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":755,"nodeType":"ExpressionStatement","src":"2723:28:6"}]},"documentation":{"id":730,"nodeType":"StructuredDocumentation","src":"2400:138:6","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":757,"implemented":true,"kind":"function","modifiers":[{"id":735,"kind":"modifierInvocation","modifierName":{"id":734,"name":"onlyOwner","nameLocations":["2603:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":689,"src":"2603:9:6"},"nodeType":"ModifierInvocation","src":"2603:9:6"}],"name":"transferOwnership","nameLocation":"2552:17:6","nodeType":"FunctionDefinition","parameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:6","nodeType":"VariableDeclaration","scope":757,"src":"2570:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:6"},"returnParameters":{"id":736,"nodeType":"ParameterList","parameters":[],"src":"2613:0:6"},"scope":778,"src":"2543:215:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":776,"nodeType":"Block","src":"2975:124:6","statements":[{"assignments":[764],"declarations":[{"constant":false,"id":764,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:6","nodeType":"VariableDeclaration","scope":776,"src":"2985:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":763,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":766,"initialValue":{"id":765,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"3004:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:6"},{"expression":{"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":767,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"3020:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":768,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"3029:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":770,"nodeType":"ExpressionStatement","src":"3020:17:6"},{"eventCall":{"arguments":[{"id":772,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"3073:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":773,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"3083:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":771,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"3052:20:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":775,"nodeType":"EmitStatement","src":"3047:45:6"}]},"documentation":{"id":758,"nodeType":"StructuredDocumentation","src":"2764:143:6","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":777,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:6","nodeType":"FunctionDefinition","parameters":{"id":761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":760,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:6","nodeType":"VariableDeclaration","scope":777,"src":"2940:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":759,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:6"},"returnParameters":{"id":762,"nodeType":"ParameterList","parameters":[],"src":"2975:0:6"},"scope":778,"src":"2912:187:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":779,"src":"663:2438:6","usedErrors":[644,649],"usedEvents":[655]}],"src":"102:3000:6"},"id":6},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[856]},"id":857,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":780,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"132:70:7","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":856,"linearizedBaseContracts":[856],"name":"IERC20","nameLocation":"213:6:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":782,"nodeType":"StructuredDocumentation","src":"226:158:7","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":790,"name":"Transfer","nameLocation":"395:8:7","nodeType":"EventDefinition","parameters":{"id":789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":784,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:7","nodeType":"VariableDeclaration","scope":790,"src":"404:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":783,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":786,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:7","nodeType":"VariableDeclaration","scope":790,"src":"426:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":788,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:7","nodeType":"VariableDeclaration","scope":790,"src":"446:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":787,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:7"},"src":"389:72:7"},{"anonymous":false,"documentation":{"id":791,"nodeType":"StructuredDocumentation","src":"467:148:7","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":799,"name":"Approval","nameLocation":"626:8:7","nodeType":"EventDefinition","parameters":{"id":798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":793,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:7","nodeType":"VariableDeclaration","scope":799,"src":"635:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":792,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":795,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:7","nodeType":"VariableDeclaration","scope":799,"src":"658:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":794,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":797,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:7","nodeType":"VariableDeclaration","scope":799,"src":"683:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":796,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:7"},"src":"620:78:7"},{"documentation":{"id":800,"nodeType":"StructuredDocumentation","src":"704:65:7","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":805,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:7","nodeType":"FunctionDefinition","parameters":{"id":801,"nodeType":"ParameterList","parameters":[],"src":"794:2:7"},"returnParameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":805,"src":"820:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":802,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:7"},"scope":856,"src":"774:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":806,"nodeType":"StructuredDocumentation","src":"835:71:7","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":813,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:7","nodeType":"FunctionDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"account","nameLocation":"938:7:7","nodeType":"VariableDeclaration","scope":813,"src":"930:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:7"},"returnParameters":{"id":812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":813,"src":"970:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":810,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:7"},"scope":856,"src":"911:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":814,"nodeType":"StructuredDocumentation","src":"985:213:7","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":823,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:7","nodeType":"FunctionDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":816,"mutability":"mutable","name":"to","nameLocation":"1229:2:7","nodeType":"VariableDeclaration","scope":823,"src":"1221:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":818,"mutability":"mutable","name":"value","nameLocation":"1241:5:7","nodeType":"VariableDeclaration","scope":823,"src":"1233:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:7"},"returnParameters":{"id":822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":823,"src":"1266:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":820,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:7"},"scope":856,"src":"1203:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":824,"nodeType":"StructuredDocumentation","src":"1278:264:7","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":833,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:7","nodeType":"FunctionDefinition","parameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":826,"mutability":"mutable","name":"owner","nameLocation":"1574:5:7","nodeType":"VariableDeclaration","scope":833,"src":"1566:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":825,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":828,"mutability":"mutable","name":"spender","nameLocation":"1589:7:7","nodeType":"VariableDeclaration","scope":833,"src":"1581:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":827,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:7"},"returnParameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":833,"src":"1621:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":830,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:7"},"scope":856,"src":"1547:83:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":834,"nodeType":"StructuredDocumentation","src":"1636:667:7","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":843,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:7","nodeType":"FunctionDefinition","parameters":{"id":839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":836,"mutability":"mutable","name":"spender","nameLocation":"2333:7:7","nodeType":"VariableDeclaration","scope":843,"src":"2325:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":835,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":838,"mutability":"mutable","name":"value","nameLocation":"2350:5:7","nodeType":"VariableDeclaration","scope":843,"src":"2342:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":837,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:7"},"returnParameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":843,"src":"2375:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":840,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:7"},"scope":856,"src":"2308:73:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":844,"nodeType":"StructuredDocumentation","src":"2387:297:7","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":855,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:7","nodeType":"FunctionDefinition","parameters":{"id":851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":846,"mutability":"mutable","name":"from","nameLocation":"2719:4:7","nodeType":"VariableDeclaration","scope":855,"src":"2711:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"to","nameLocation":"2733:2:7","nodeType":"VariableDeclaration","scope":855,"src":"2725:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":847,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":850,"mutability":"mutable","name":"value","nameLocation":"2745:5:7","nodeType":"VariableDeclaration","scope":855,"src":"2737:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":849,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:7"},"returnParameters":{"id":854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":855,"src":"2770:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":852,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:7"},"scope":856,"src":"2689:87:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":857,"src":"203:2575:7","usedErrors":[],"usedEvents":[790,799]}],"src":"106:2673:7"},"id":7},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[886]},"id":887,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":858,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:8"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":859,"nodeType":"StructuredDocumentation","src":"127:496:8","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":886,"linearizedBaseContracts":[886],"name":"Context","nameLocation":"642:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":867,"nodeType":"Block","src":"718:34:8","statements":[{"expression":{"expression":{"id":864,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:8","memberName":"sender","nodeType":"MemberAccess","src":"735:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":863,"id":866,"nodeType":"Return","src":"728:17:8"}]},"id":868,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:8","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[],"src":"675:2:8"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":868,"src":"709:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:8"},"scope":886,"src":"656:96:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":876,"nodeType":"Block","src":"825:32:8","statements":[{"expression":{"expression":{"id":873,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:8","memberName":"data","nodeType":"MemberAccess","src":"842:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":872,"id":875,"nodeType":"Return","src":"835:15:8"}]},"id":877,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:8","nodeType":"FunctionDefinition","parameters":{"id":869,"nodeType":"ParameterList","parameters":[],"src":"775:2:8"},"returnParameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":877,"src":"809:14:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":870,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:8"},"scope":886,"src":"758:99:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":884,"nodeType":"Block","src":"935:25:8","statements":[{"expression":{"hexValue":"30","id":882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":881,"id":883,"nodeType":"Return","src":"945:8:8"}]},"id":885,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:8","nodeType":"FunctionDefinition","parameters":{"id":878,"nodeType":"ParameterList","parameters":[],"src":"892:2:8"},"returnParameters":{"id":881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":885,"src":"926:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":879,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:8"},"scope":886,"src":"863:97:8","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":887,"src":"624:338:8","usedErrors":[],"usedEvents":[]}],"src":"101:862:8"},"id":8},"contracts/FundMe.sol":{"ast":{"absolutePath":"contracts/FundMe.sol","exportedSymbols":{"Attestation":[592],"DataLocation":[606],"EducationalCredential":[1232],"ISP":[495],"Ownable":[778]},"id":1233,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":888,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:9"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":890,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1233,"sourceUnit":779,"src":"58:69:9","symbolAliases":[{"foreign":{"id":889,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"67:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@ethsign/sign-protocol-evm/src/interfaces/ISP.sol","file":"@ethsign/sign-protocol-evm/src/interfaces/ISP.sol","id":892,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1233,"sourceUnit":496,"src":"128:72:9","symbolAliases":[{"foreign":{"id":891,"name":"ISP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"137:3:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@ethsign/sign-protocol-evm/src/models/Attestation.sol","file":"@ethsign/sign-protocol-evm/src/models/Attestation.sol","id":894,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1233,"sourceUnit":599,"src":"201:84:9","symbolAliases":[{"foreign":{"id":893,"name":"Attestation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"210:11:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@ethsign/sign-protocol-evm/src/models/DataLocation.sol","file":"@ethsign/sign-protocol-evm/src/models/DataLocation.sol","id":896,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1233,"sourceUnit":607,"src":"286:86:9","symbolAliases":[{"foreign":{"id":895,"name":"DataLocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"295:12:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":897,"name":"Ownable","nameLocations":["408:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":778,"src":"408:7:9"},"id":898,"nodeType":"InheritanceSpecifier","src":"408:7:9"}],"canonicalName":"EducationalCredential","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1232,"linearizedBaseContracts":[1232,778,886],"name":"EducationalCredential","nameLocation":"383:21:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"a8c5dc33","id":901,"mutability":"mutable","name":"spInstance","nameLocation":"433:10:9","nodeType":"VariableDeclaration","scope":1232,"src":"422:21:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISP_$495","typeString":"contract ISP"},"typeName":{"id":900,"nodeType":"UserDefinedTypeName","pathNode":{"id":899,"name":"ISP","nameLocations":["422:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":495,"src":"422:3:9"},"referencedDeclaration":495,"src":"422:3:9","typeDescriptions":{"typeIdentifier":"t_contract$_ISP_$495","typeString":"contract ISP"}},"visibility":"public"},{"constant":false,"functionSelector":"b4c4a054","id":903,"mutability":"mutable","name":"credentialSchemaId","nameLocation":"463:18:9","nodeType":"VariableDeclaration","scope":1232,"src":"449:32:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":902,"name":"uint64","nodeType":"ElementaryTypeName","src":"449:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"public"},{"anonymous":false,"eventSelector":"3cdce538b6db111fcf97c8cdfc0f65dcd4c7eaeea28abf410f46ad76daed828b","id":913,"name":"CredentialIssued","nameLocation":"494:16:9","nodeType":"EventDefinition","parameters":{"id":912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":905,"indexed":true,"mutability":"mutable","name":"institution","nameLocation":"527:11:9","nodeType":"VariableDeclaration","scope":913,"src":"511:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":904,"name":"address","nodeType":"ElementaryTypeName","src":"511:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":907,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"556:9:9","nodeType":"VariableDeclaration","scope":913,"src":"540:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"540:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":909,"indexed":false,"mutability":"mutable","name":"course","nameLocation":"574:6:9","nodeType":"VariableDeclaration","scope":913,"src":"567:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":908,"name":"string","nodeType":"ElementaryTypeName","src":"567:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":911,"indexed":false,"mutability":"mutable","name":"issueDate","nameLocation":"590:9:9","nodeType":"VariableDeclaration","scope":913,"src":"582:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":910,"name":"uint256","nodeType":"ElementaryTypeName","src":"582:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"510:90:9"},"src":"488:113:9"},{"body":{"id":920,"nodeType":"Block","src":"643:2:9","statements":[]},"id":921,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":916,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"629:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"629:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":918,"kind":"baseConstructorSpecifier","modifierName":{"id":915,"name":"Ownable","nameLocations":["621:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":778,"src":"621:7:9"},"nodeType":"ModifierInvocation","src":"621:21:9"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":914,"nodeType":"ParameterList","parameters":[],"src":"618:2:9"},"returnParameters":{"id":919,"nodeType":"ParameterList","parameters":[],"src":"643:0:9"},"scope":1232,"src":"607:38:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":934,"nodeType":"Block","src":"711:43:9","statements":[{"expression":{"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":928,"name":"spInstance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"721:10:9","typeDescriptions":{"typeIdentifier":"t_contract$_ISP_$495","typeString":"contract ISP"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":930,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"738:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":929,"name":"ISP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"734:3:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISP_$495_$","typeString":"type(contract ISP)"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"734:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISP_$495","typeString":"contract ISP"}},"src":"721:26:9","typeDescriptions":{"typeIdentifier":"t_contract$_ISP_$495","typeString":"contract ISP"}},"id":933,"nodeType":"ExpressionStatement","src":"721:26:9"}]},"functionSelector":"8e9d660f","id":935,"implemented":true,"kind":"function","modifiers":[{"id":926,"kind":"modifierInvocation","modifierName":{"id":925,"name":"onlyOwner","nameLocations":["701:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":689,"src":"701:9:9"},"nodeType":"ModifierInvocation","src":"701:9:9"}],"name":"setSPInstance","nameLocation":"660:13:9","nodeType":"FunctionDefinition","parameters":{"id":924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":923,"mutability":"mutable","name":"instance","nameLocation":"682:8:9","nodeType":"VariableDeclaration","scope":935,"src":"674:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":922,"name":"address","nodeType":"ElementaryTypeName","src":"674:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"673:18:9"},"returnParameters":{"id":927,"nodeType":"ParameterList","parameters":[],"src":"711:0:9"},"scope":1232,"src":"651:103:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":946,"nodeType":"Block","src":"827:46:9","statements":[{"expression":{"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":942,"name":"credentialSchemaId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"837:18:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":943,"name":"schemaId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"858:8:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"837:29:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":945,"nodeType":"ExpressionStatement","src":"837:29:9"}]},"functionSelector":"e14e071b","id":947,"implemented":true,"kind":"function","modifiers":[{"id":940,"kind":"modifierInvocation","modifierName":{"id":939,"name":"onlyOwner","nameLocations":["817:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":689,"src":"817:9:9"},"nodeType":"ModifierInvocation","src":"817:9:9"}],"name":"setCredentialSchemaID","nameLocation":"769:21:9","nodeType":"FunctionDefinition","parameters":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":937,"mutability":"mutable","name":"schemaId","nameLocation":"798:8:9","nodeType":"VariableDeclaration","scope":947,"src":"791:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":936,"name":"uint64","nodeType":"ElementaryTypeName","src":"791:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"790:17:9"},"returnParameters":{"id":941,"nodeType":"ParameterList","parameters":[],"src":"827:0:9"},"scope":1232,"src":"760:113:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1031,"nodeType":"Block","src":"1020:934:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":959,"name":"credentialSchemaId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"1038:18:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1060:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1038:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43726564656e7469616c20736368656d61206e6f7420736574","id":962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1063:27:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_51c209187ee368fc1e4dbf500f07ad2d83fbbce262a3a955007d41b55a072cd7","typeString":"literal_string \"Credential schema not set\""},"value":"Credential schema not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51c209187ee368fc1e4dbf500f07ad2d83fbbce262a3a955007d41b55a072cd7","typeString":"literal_string \"Credential schema not set\""}],"id":958,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1030:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1030:61:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":964,"nodeType":"ExpressionStatement","src":"1030:61:9"},{"assignments":[966],"declarations":[{"constant":false,"id":966,"mutability":"mutable","name":"data","nameLocation":"1153:4:9","nodeType":"VariableDeclaration","scope":1031,"src":"1140:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":965,"name":"bytes","nodeType":"ElementaryTypeName","src":"1140:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":972,"initialValue":{"arguments":[{"id":969,"name":"course","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"1171:6:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":970,"name":"issueDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"1179:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":967,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1160:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1164:6:9","memberName":"encode","nodeType":"MemberAccess","src":"1160:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1160:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1140:49:9"},{"assignments":[977],"declarations":[{"constant":false,"id":977,"mutability":"mutable","name":"recipients","nameLocation":"1249:10:9","nodeType":"VariableDeclaration","scope":1031,"src":"1234:25:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":975,"name":"bytes","nodeType":"ElementaryTypeName","src":"1234:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":976,"nodeType":"ArrayTypeName","src":"1234:7:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"id":983,"initialValue":{"arguments":[{"hexValue":"31","id":981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1274:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1262:11:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":978,"name":"bytes","nodeType":"ElementaryTypeName","src":"1266:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":979,"nodeType":"ArrayTypeName","src":"1266:7:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1262:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"1234:42:9"},{"expression":{"id":991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":984,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"1286:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":986,"indexExpression":{"hexValue":"30","id":985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1286:13:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":989,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"1313:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":987,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1302:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1306:6:9","memberName":"encode","nodeType":"MemberAccess","src":"1302:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1302:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1286:37:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":992,"nodeType":"ExpressionStatement","src":"1286:37:9"},{"assignments":[995],"declarations":[{"constant":false,"id":995,"mutability":"mutable","name":"attestation","nameLocation":"1353:11:9","nodeType":"VariableDeclaration","scope":1031,"src":"1334:30:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_memory_ptr","typeString":"struct Attestation"},"typeName":{"id":994,"nodeType":"UserDefinedTypeName","pathNode":{"id":993,"name":"Attestation","nameLocations":["1334:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":592,"src":"1334:11:9"},"referencedDeclaration":592,"src":"1334:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_storage_ptr","typeString":"struct Attestation"}},"visibility":"internal"}],"id":1010,"initialValue":{"arguments":[{"id":997,"name":"credentialSchemaId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"1403:18:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"hexValue":"30","id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1456:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1488:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1520:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[],"expression":{"argumentTypes":[],"id":1001,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"1545:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1545:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1583:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":1004,"name":"DataLocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"1612:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DataLocation_$606_$","typeString":"type(enum DataLocation)"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1625:7:9","memberName":"ONCHAIN","nodeType":"MemberAccess","referencedDeclaration":602,"src":"1612:20:9","typeDescriptions":{"typeIdentifier":"t_enum$_DataLocation_$606","typeString":"enum DataLocation"}},{"hexValue":"66616c7365","id":1006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1655:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":1007,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"1686:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},{"id":1008,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"1716:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_enum$_DataLocation_$606","typeString":"enum DataLocation"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":996,"name":"Attestation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"1367:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Attestation_$592_storage_ptr_$","typeString":"type(struct Attestation storage pointer)"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1393:8:9","1435:19:9","1471:15:9","1503:15:9","1535:8:9","1571:10:9","1598:12:9","1646:7:9","1674:10:9","1710:4:9"],"names":["schemaId","linkedAttestationId","attestTimestamp","revokeTimestamp","attester","validUntil","dataLocation","revoked","recipients","data"],"nodeType":"FunctionCall","src":"1367:364:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_memory_ptr","typeString":"struct Attestation memory"}},"nodeType":"VariableDeclarationStatement","src":"1334:397:9"},{"assignments":[1012],"declarations":[{"constant":false,"id":1012,"mutability":"mutable","name":"attestationId","nameLocation":"1782:13:9","nodeType":"VariableDeclaration","scope":1031,"src":"1775:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1011,"name":"uint64","nodeType":"ElementaryTypeName","src":"1775:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":1020,"initialValue":{"arguments":[{"id":1015,"name":"attestation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"1816:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_memory_ptr","typeString":"struct Attestation memory"}},{"hexValue":"","id":1016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1829:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"","id":1017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1833:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"","id":1018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1837:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Attestation_$592_memory_ptr","typeString":"struct Attestation memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1013,"name":"spInstance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"1798:10:9","typeDescriptions":{"typeIdentifier":"t_contract$_ISP_$495","typeString":"contract ISP"}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1809:6:9","memberName":"attest","nodeType":"MemberAccess","referencedDeclaration":104,"src":"1798:17:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_struct$_Attestation_$592_memory_ptr_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint64_$","typeString":"function (struct Attestation memory,string memory,bytes memory,bytes memory) external returns (uint64)"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1798:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"1775:65:9"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1022,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"1873:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1873:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1024,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"1887:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1025,"name":"course","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"1898:6:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1026,"name":"issueDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"1906:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1021,"name":"CredentialIssued","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"1856:16:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,address,string memory,uint256)"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1856:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1028,"nodeType":"EmitStatement","src":"1851:65:9"},{"expression":{"id":1029,"name":"attestationId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"1934:13:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":957,"id":1030,"nodeType":"Return","src":"1927:20:9"}]},"functionSelector":"8e9841d0","id":1032,"implemented":true,"kind":"function","modifiers":[],"name":"issueCredential","nameLocation":"888:15:9","nodeType":"FunctionDefinition","parameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":949,"mutability":"mutable","name":"recipient","nameLocation":"921:9:9","nodeType":"VariableDeclaration","scope":1032,"src":"913:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":948,"name":"address","nodeType":"ElementaryTypeName","src":"913:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":951,"mutability":"mutable","name":"course","nameLocation":"954:6:9","nodeType":"VariableDeclaration","scope":1032,"src":"940:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":950,"name":"string","nodeType":"ElementaryTypeName","src":"940:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":953,"mutability":"mutable","name":"issueDate","nameLocation":"978:9:9","nodeType":"VariableDeclaration","scope":1032,"src":"970:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":952,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"903:90:9"},"returnParameters":{"id":957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1032,"src":"1012:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":955,"name":"uint64","nodeType":"ElementaryTypeName","src":"1012:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1011:8:9"},"scope":1232,"src":"879:1075:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1167,"nodeType":"Block","src":"2055:1575:9","statements":[{"assignments":[1044],"declarations":[{"constant":false,"id":1044,"mutability":"mutable","name":"found","nameLocation":"2134:5:9","nodeType":"VariableDeclaration","scope":1167,"src":"2129:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1043,"name":"bool","nodeType":"ElementaryTypeName","src":"2129:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1046,"initialValue":{"hexValue":"66616c7365","id":1045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2142:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"2129:18:9"},{"assignments":[1048],"declarations":[{"constant":false,"id":1048,"mutability":"mutable","name":"mostRecentId","nameLocation":"2164:12:9","nodeType":"VariableDeclaration","scope":1167,"src":"2157:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1047,"name":"uint64","nodeType":"ElementaryTypeName","src":"2157:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":1050,"initialValue":{"hexValue":"30","id":1049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2157:23:9"},{"assignments":[1052],"declarations":[{"constant":false,"id":1052,"mutability":"mutable","name":"mostRecentTimestamp","nameLocation":"2198:19:9","nodeType":"VariableDeclaration","scope":1167,"src":"2190:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1051,"name":"uint256","nodeType":"ElementaryTypeName","src":"2190:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1054,"initialValue":{"hexValue":"30","id":1053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2220:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2190:31:9"},{"body":{"id":1128,"nodeType":"Block","src":"2347:904:9","statements":[{"clauses":[{"block":{"id":1122,"nodeType":"Block","src":"2435:675:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1070,"name":"attestation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"2522:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_memory_ptr","typeString":"struct Attestation memory"}},"id":1071,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2534:8:9","memberName":"schemaId","nodeType":"MemberAccess","referencedDeclaration":571,"src":"2522:20:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1072,"name":"credentialSchemaId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"2546:18:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2522:42:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2589:20:9","subExpression":{"expression":{"id":1074,"name":"attestation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"2590:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_memory_ptr","typeString":"struct Attestation memory"}},"id":1075,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2602:7:9","memberName":"revoked","nodeType":"MemberAccess","referencedDeclaration":586,"src":"2590:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2522:87:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1078,"name":"attestation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"2633:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_memory_ptr","typeString":"struct Attestation memory"}},"id":1079,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2645:10:9","memberName":"recipients","nodeType":"MemberAccess","referencedDeclaration":589,"src":"2633:22:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2656:6:9","memberName":"length","nodeType":"MemberAccess","src":"2633:29:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2665:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2633:33:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2522:144:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1121,"nodeType":"IfStatement","src":"2518:578:9","trueBody":{"id":1120,"nodeType":"Block","src":"2668:428:9","statements":[{"assignments":[1085],"declarations":[{"constant":false,"id":1085,"mutability":"mutable","name":"recipient","nameLocation":"2719:9:9","nodeType":"VariableDeclaration","scope":1120,"src":"2711:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1084,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1096,"initialValue":{"arguments":[{"baseExpression":{"expression":{"id":1088,"name":"attestation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"2742:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_memory_ptr","typeString":"struct Attestation memory"}},"id":1089,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2754:10:9","memberName":"recipients","nodeType":"MemberAccess","referencedDeclaration":589,"src":"2742:22:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1091,"indexExpression":{"hexValue":"30","id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2765:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2742:25:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2770:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1092,"name":"address","nodeType":"ElementaryTypeName","src":"2770:7:9","typeDescriptions":{}}}],"id":1094,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2769:9:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}],"expression":{"id":1086,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2731:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2735:6:9","memberName":"decode","nodeType":"MemberAccess","src":"2731:10:9","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2731:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"2711:68:9"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1097,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"2826:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1098,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"2839:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2826:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1100,"name":"attestation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"2849:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_memory_ptr","typeString":"struct Attestation memory"}},"id":1101,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2861:15:9","memberName":"attestTimestamp","nodeType":"MemberAccess","referencedDeclaration":575,"src":"2849:27:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1102,"name":"mostRecentTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"2879:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2849:49:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2826:72:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1119,"nodeType":"IfStatement","src":"2822:256:9","trueBody":{"id":1118,"nodeType":"Block","src":"2900:178:9","statements":[{"expression":{"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1105,"name":"found","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"2926:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2934:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2926:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1108,"nodeType":"ExpressionStatement","src":"2926:12:9"},{"expression":{"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1109,"name":"mostRecentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"2964:12:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1110,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"2979:1:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2964:16:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":1112,"nodeType":"ExpressionStatement","src":"2964:16:9"},{"expression":{"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1113,"name":"mostRecentTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"3006:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1114,"name":"attestation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"3028:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_memory_ptr","typeString":"struct Attestation memory"}},"id":1115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3040:15:9","memberName":"attestTimestamp","nodeType":"MemberAccess","referencedDeclaration":575,"src":"3028:27:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"3006:49:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1117,"nodeType":"ExpressionStatement","src":"3006:49:9"}]}}]}}]},"errorName":"","id":1123,"nodeType":"TryCatchClause","parameters":{"id":1069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1068,"mutability":"mutable","name":"attestation","nameLocation":"2422:11:9","nodeType":"VariableDeclaration","scope":1123,"src":"2403:30:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_memory_ptr","typeString":"struct Attestation"},"typeName":{"id":1067,"nodeType":"UserDefinedTypeName","pathNode":{"id":1066,"name":"Attestation","nameLocations":["2403:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":592,"src":"2403:11:9"},"referencedDeclaration":592,"src":"2403:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_storage_ptr","typeString":"struct Attestation"}},"visibility":"internal"}],"src":"2402:32:9"},"src":"2394:716:9"},{"block":{"id":1125,"nodeType":"Block","src":"3117:124:9","statements":[{"id":1124,"nodeType":"Break","src":"3221:5:9"}]},"errorName":"","id":1126,"nodeType":"TryCatchClause","src":"3111:130:9"}],"externalCall":{"arguments":[{"id":1064,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"2391:1:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":1062,"name":"spInstance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"2365:10:9","typeDescriptions":{"typeIdentifier":"t_contract$_ISP_$495","typeString":"contract ISP"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2376:14:9","memberName":"getAttestation","nodeType":"MemberAccess","referencedDeclaration":374,"src":"2365:25:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint64_$returns$_t_struct$_Attestation_$592_memory_ptr_$","typeString":"function (uint64) view external returns (struct Attestation memory)"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2365:28:9","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_memory_ptr","typeString":"struct Attestation memory"}},"id":1127,"nodeType":"TryStatement","src":"2361:880:9"}]},"id":1129,"initializationExpression":{"assignments":[1056],"declarations":[{"constant":false,"id":1056,"mutability":"mutable","name":"i","nameLocation":"2333:1:9","nodeType":"VariableDeclaration","scope":1129,"src":"2326:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1055,"name":"uint64","nodeType":"ElementaryTypeName","src":"2326:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":1058,"initialValue":{"hexValue":"31","id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2337:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"2326:12:9"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2342:3:9","subExpression":{"id":1059,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"2342:1:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":1061,"nodeType":"ExpressionStatement","src":"2342:3:9"},"nodeType":"ForStatement","src":"2321:930:9"},{"condition":{"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3265:6:9","subExpression":{"id":1130,"name":"found","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"3266:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1138,"nodeType":"IfStatement","src":"3261:58:9","trueBody":{"id":1137,"nodeType":"Block","src":"3273:46:9","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":1132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3295:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"","id":1133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3302:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"30","id":1134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3306:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1135,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3294:14:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_rational_0_by_1_$","typeString":"tuple(bool,literal_string \"\",int_const 0)"}},"functionReturnParameters":1042,"id":1136,"nodeType":"Return","src":"3287:21:9"}]}},{"assignments":[1141],"declarations":[{"constant":false,"id":1141,"mutability":"mutable","name":"mostRecentAttestation","nameLocation":"3397:21:9","nodeType":"VariableDeclaration","scope":1167,"src":"3378:40:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_memory_ptr","typeString":"struct Attestation"},"typeName":{"id":1140,"nodeType":"UserDefinedTypeName","pathNode":{"id":1139,"name":"Attestation","nameLocations":["3378:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":592,"src":"3378:11:9"},"referencedDeclaration":592,"src":"3378:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_storage_ptr","typeString":"struct Attestation"}},"visibility":"internal"}],"id":1146,"initialValue":{"arguments":[{"id":1144,"name":"mostRecentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"3447:12:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":1142,"name":"spInstance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"3421:10:9","typeDescriptions":{"typeIdentifier":"t_contract$_ISP_$495","typeString":"contract ISP"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3432:14:9","memberName":"getAttestation","nodeType":"MemberAccess","referencedDeclaration":374,"src":"3421:25:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint64_$returns$_t_struct$_Attestation_$592_memory_ptr_$","typeString":"function (uint64) view external returns (struct Attestation memory)"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3421:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_memory_ptr","typeString":"struct Attestation memory"}},"nodeType":"VariableDeclarationStatement","src":"3378:82:9"},{"assignments":[1148,1150],"declarations":[{"constant":false,"id":1148,"mutability":"mutable","name":"course","nameLocation":"3494:6:9","nodeType":"VariableDeclaration","scope":1167,"src":"3480:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1147,"name":"string","nodeType":"ElementaryTypeName","src":"3480:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1150,"mutability":"mutable","name":"issueDate","nameLocation":"3510:9:9","nodeType":"VariableDeclaration","scope":1167,"src":"3502:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1149,"name":"uint256","nodeType":"ElementaryTypeName","src":"3502:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1161,"initialValue":{"arguments":[{"expression":{"id":1153,"name":"mostRecentAttestation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"3534:21:9","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_memory_ptr","typeString":"struct Attestation memory"}},"id":1154,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3556:4:9","memberName":"data","nodeType":"MemberAccess","referencedDeclaration":591,"src":"3534:26:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3563:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1155,"name":"string","nodeType":"ElementaryTypeName","src":"3563:6:9","typeDescriptions":{}}},{"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3571:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1157,"name":"uint256","nodeType":"ElementaryTypeName","src":"3571:7:9","typeDescriptions":{}}}],"id":1159,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3562:17:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_string_storage_ptr_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(string storage pointer),type(uint256))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_string_storage_ptr_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(string storage pointer),type(uint256))"}],"expression":{"id":1151,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3523:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3527:6:9","memberName":"decode","nodeType":"MemberAccess","src":"3523:10:9","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3523:57:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_uint256_$","typeString":"tuple(string memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3479:101:9"},{"expression":{"components":[{"hexValue":"74727565","id":1162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3599:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1163,"name":"course","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"3605:6:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1164,"name":"issueDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"3613:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1165,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3598:25:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_string_memory_ptr_$_t_uint256_$","typeString":"tuple(bool,string memory,uint256)"}},"functionReturnParameters":1042,"id":1166,"nodeType":"Return","src":"3591:32:9"}]},"functionSelector":"70dd0dbc","id":1168,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCredential","nameLocation":"1969:16:9","nodeType":"FunctionDefinition","parameters":{"id":1035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1034,"mutability":"mutable","name":"wallet","nameLocation":"1994:6:9","nodeType":"VariableDeclaration","scope":1168,"src":"1986:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1033,"name":"address","nodeType":"ElementaryTypeName","src":"1986:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1985:16:9"},"returnParameters":{"id":1042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1168,"src":"2025:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1036,"name":"bool","nodeType":"ElementaryTypeName","src":"2025:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1168,"src":"2031:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1038,"name":"string","nodeType":"ElementaryTypeName","src":"2031:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1168,"src":"2046:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1040,"name":"uint256","nodeType":"ElementaryTypeName","src":"2046:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2024:30:9"},"scope":1232,"src":"1960:1670:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1230,"nodeType":"Block","src":"3782:531:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1181,"name":"schemaId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"3800:8:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1182,"name":"credentialSchemaId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"3812:18:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"3800:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420736368656d61204944","id":1184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3832:19:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f7f8a0302ff255928d1a72eedf8fbacb95deed18c475d5a03e0d82ca55cffbb","typeString":"literal_string \"Invalid schema ID\""},"value":"Invalid schema ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3f7f8a0302ff255928d1a72eedf8fbacb95deed18c475d5a03e0d82ca55cffbb","typeString":"literal_string \"Invalid schema ID\""}],"id":1180,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3792:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1186,"nodeType":"ExpressionStatement","src":"3792:60:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1188,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"3870:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3881:6:9","memberName":"length","nodeType":"MemberAccess","src":"3870:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3891:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3870:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206f6e6520726563697069656e7420616c6c6f776564","id":1192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3894:28:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_8f7ab3f7e792b273608ffaf89527bcbb9272ea245b3f5800d21a92a6aefb7013","typeString":"literal_string \"Only one recipient allowed\""},"value":"Only one recipient allowed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8f7ab3f7e792b273608ffaf89527bcbb9272ea245b3f5800d21a92a6aefb7013","typeString":"literal_string \"Only one recipient allowed\""}],"id":1187,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3862:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:61:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1194,"nodeType":"ExpressionStatement","src":"3862:61:9"},{"assignments":[1196,1198],"declarations":[{"constant":false,"id":1196,"mutability":"mutable","name":"course","nameLocation":"3987:6:9","nodeType":"VariableDeclaration","scope":1230,"src":"3973:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1195,"name":"string","nodeType":"ElementaryTypeName","src":"3973:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1198,"mutability":"mutable","name":"issueDate","nameLocation":"4003:9:9","nodeType":"VariableDeclaration","scope":1230,"src":"3995:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1197,"name":"uint256","nodeType":"ElementaryTypeName","src":"3995:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1208,"initialValue":{"arguments":[{"id":1201,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"4027:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"components":[{"id":1203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4034:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1202,"name":"string","nodeType":"ElementaryTypeName","src":"4034:6:9","typeDescriptions":{}}},{"id":1205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4042:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1204,"name":"uint256","nodeType":"ElementaryTypeName","src":"4042:7:9","typeDescriptions":{}}}],"id":1206,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4033:17:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_string_storage_ptr_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(string storage pointer),type(uint256))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_tuple$_t_type$_t_string_storage_ptr_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(string storage pointer),type(uint256))"}],"expression":{"id":1199,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4016:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4020:6:9","memberName":"decode","nodeType":"MemberAccess","src":"4016:10:9","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4016:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_uint256_$","typeString":"tuple(string memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3972:79:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1212,"name":"course","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"4149:6:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4143:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1210,"name":"bytes","nodeType":"ElementaryTypeName","src":"4143:5:9","typeDescriptions":{}}},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4143:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4157:6:9","memberName":"length","nodeType":"MemberAccess","src":"4143:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4166:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4143:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f75727365206e616d652063616e6e6f7420626520656d707479","id":1217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4169:29:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988","typeString":"literal_string \"Course name cannot be empty\""},"value":"Course name cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988","typeString":"literal_string \"Course name cannot be empty\""}],"id":1209,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4135:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4135:64:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1219,"nodeType":"ExpressionStatement","src":"4135:64:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1221,"name":"issueDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"4217:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1222,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4230:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4236:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"4230:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4217:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"497373756520646174652063616e6e6f7420626520696e2074686520667574757265","id":1225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4247:36:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97","typeString":"literal_string \"Issue date cannot be in the future\""},"value":"Issue date cannot be in the future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97","typeString":"literal_string \"Issue date cannot be in the future\""}],"id":1220,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4209:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4209:75:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1227,"nodeType":"ExpressionStatement","src":"4209:75:9"},{"expression":{"hexValue":"74727565","id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4302:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1179,"id":1229,"nodeType":"Return","src":"4295:11:9"}]},"functionSelector":"f84dd785","id":1231,"implemented":true,"kind":"function","modifiers":[],"name":"schemaHook","nameLocation":"3645:10:9","nodeType":"FunctionDefinition","parameters":{"id":1176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1170,"mutability":"mutable","name":"schemaId","nameLocation":"3672:8:9","nodeType":"VariableDeclaration","scope":1231,"src":"3665:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1169,"name":"uint64","nodeType":"ElementaryTypeName","src":"3665:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1172,"mutability":"mutable","name":"data","nameLocation":"3705:4:9","nodeType":"VariableDeclaration","scope":1231,"src":"3690:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1171,"name":"bytes","nodeType":"ElementaryTypeName","src":"3690:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1175,"mutability":"mutable","name":"recipients","nameLocation":"3736:10:9","nodeType":"VariableDeclaration","scope":1231,"src":"3719:27:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1173,"name":"bytes","nodeType":"ElementaryTypeName","src":"3719:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1174,"nodeType":"ArrayTypeName","src":"3719:7:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"3655:97:9"},"returnParameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1231,"src":"3776:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1177,"name":"bool","nodeType":"ElementaryTypeName","src":"3776:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3775:6:9"},"scope":1232,"src":"3636:677:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1233,"src":"374:3941:9","usedErrors":[644,649],"usedEvents":[655,913]}],"src":"32:4284:9"},"id":9}},"contracts":{"@ethsign/sign-protocol-evm/src/interfaces/ISP.sol":{"ISP":{"abi":[{"inputs":[],"name":"AttestationAlreadyRevoked","type":"error"},{"inputs":[],"name":"AttestationInvalidDuration","type":"error"},{"inputs":[],"name":"AttestationIrrevocable","type":"error"},{"inputs":[],"name":"AttestationNonexistent","type":"error"},{"inputs":[],"name":"AttestationWrongAttester","type":"error"},{"inputs":[],"name":"InvalidDelegateSignature","type":"error"},{"inputs":[],"name":"LegacySPRequired","type":"error"},{"inputs":[],"name":"OffchainAttestationAlreadyRevoked","type":"error"},{"inputs":[],"name":"OffchainAttestationExists","type":"error"},{"inputs":[],"name":"OffchainAttestationNonexistent","type":"error"},{"inputs":[],"name":"Paused","type":"error"},{"inputs":[],"name":"SchemaNonexistent","type":"error"},{"inputs":[],"name":"SchemaWrongRegistrant","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"attestationId","type":"uint64"},{"indexed":false,"internalType":"string","name":"indexingKey","type":"string"}],"name":"AttestationMade","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"attestationId","type":"uint64"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"AttestationRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"attestationId","type":"string"}],"name":"OffchainAttestationMade","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"attestationId","type":"string"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"OffchainAttestationRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"schemaId","type":"uint64"}],"name":"SchemaRegistered","type":"event"},{"inputs":[{"components":[{"internalType":"uint64","name":"schemaId","type":"uint64"},{"internalType":"uint64","name":"linkedAttestationId","type":"uint64"},{"internalType":"uint64","name":"attestTimestamp","type":"uint64"},{"internalType":"uint64","name":"revokeTimestamp","type":"uint64"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint64","name":"validUntil","type":"uint64"},{"internalType":"enum DataLocation","name":"dataLocation","type":"uint8"},{"internalType":"bool","name":"revoked","type":"bool"},{"internalType":"bytes[]","name":"recipients","type":"bytes[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation","name":"attestation","type":"tuple"},{"internalType":"contract IERC20","name":"resolverFeesERC20Token","type":"address"},{"internalType":"uint256","name":"resolverFeesERC20Amount","type":"uint256"},{"internalType":"string","name":"indexingKey","type":"string"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"attest","outputs":[{"internalType":"uint64","name":"attestationId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint64","name":"schemaId","type":"uint64"},{"internalType":"uint64","name":"linkedAttestationId","type":"uint64"},{"internalType":"uint64","name":"attestTimestamp","type":"uint64"},{"internalType":"uint64","name":"revokeTimestamp","type":"uint64"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint64","name":"validUntil","type":"uint64"},{"internalType":"enum DataLocation","name":"dataLocation","type":"uint8"},{"internalType":"bool","name":"revoked","type":"bool"},{"internalType":"bytes[]","name":"recipients","type":"bytes[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation","name":"attestation","type":"tuple"},{"internalType":"string","name":"indexingKey","type":"string"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"attest","outputs":[{"internalType":"uint64","name":"attestationId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint64","name":"schemaId","type":"uint64"},{"internalType":"uint64","name":"linkedAttestationId","type":"uint64"},{"internalType":"uint64","name":"attestTimestamp","type":"uint64"},{"internalType":"uint64","name":"revokeTimestamp","type":"uint64"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint64","name":"validUntil","type":"uint64"},{"internalType":"enum DataLocation","name":"dataLocation","type":"uint8"},{"internalType":"bool","name":"revoked","type":"bool"},{"internalType":"bytes[]","name":"recipients","type":"bytes[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation","name":"attestation","type":"tuple"},{"internalType":"uint256","name":"resolverFeesETH","type":"uint256"},{"internalType":"string","name":"indexingKey","type":"string"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"attest","outputs":[{"internalType":"uint64","name":"attestationId","type":"uint64"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"uint64","name":"schemaId","type":"uint64"},{"internalType":"uint64","name":"linkedAttestationId","type":"uint64"},{"internalType":"uint64","name":"attestTimestamp","type":"uint64"},{"internalType":"uint64","name":"revokeTimestamp","type":"uint64"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint64","name":"validUntil","type":"uint64"},{"internalType":"enum DataLocation","name":"dataLocation","type":"uint8"},{"internalType":"bool","name":"revoked","type":"bool"},{"internalType":"bytes[]","name":"recipients","type":"bytes[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation[]","name":"attestations","type":"tuple[]"},{"internalType":"uint256[]","name":"resolverFeesETH","type":"uint256[]"},{"internalType":"string[]","name":"indexingKeys","type":"string[]"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"attestBatch","outputs":[{"internalType":"uint64[]","name":"attestationIds","type":"uint64[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"uint64","name":"schemaId","type":"uint64"},{"internalType":"uint64","name":"linkedAttestationId","type":"uint64"},{"internalType":"uint64","name":"attestTimestamp","type":"uint64"},{"internalType":"uint64","name":"revokeTimestamp","type":"uint64"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint64","name":"validUntil","type":"uint64"},{"internalType":"enum DataLocation","name":"dataLocation","type":"uint8"},{"internalType":"bool","name":"revoked","type":"bool"},{"internalType":"bytes[]","name":"recipients","type":"bytes[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation[]","name":"attestations","type":"tuple[]"},{"internalType":"contract IERC20[]","name":"resolverFeesERC20Tokens","type":"address[]"},{"internalType":"uint256[]","name":"resolverFeesERC20Amount","type":"uint256[]"},{"internalType":"string[]","name":"indexingKeys","type":"string[]"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"attestBatch","outputs":[{"internalType":"uint64[]","name":"attestationIds","type":"uint64[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint64","name":"schemaId","type":"uint64"},{"internalType":"uint64","name":"linkedAttestationId","type":"uint64"},{"internalType":"uint64","name":"attestTimestamp","type":"uint64"},{"internalType":"uint64","name":"revokeTimestamp","type":"uint64"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint64","name":"validUntil","type":"uint64"},{"internalType":"enum DataLocation","name":"dataLocation","type":"uint8"},{"internalType":"bool","name":"revoked","type":"bool"},{"internalType":"bytes[]","name":"recipients","type":"bytes[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation[]","name":"attestations","type":"tuple[]"},{"internalType":"string[]","name":"indexingKeys","type":"string[]"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"attestBatch","outputs":[{"internalType":"uint64[]","name":"attestationIds","type":"uint64[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"offchainAttestationId","type":"string"},{"internalType":"address","name":"delegateAttester","type":"address"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"}],"name":"attestOffchain","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string[]","name":"offchainAttestationIds","type":"string[]"},{"internalType":"address","name":"delegateAttester","type":"address"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"}],"name":"attestOffchainBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"attestationCounter","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"attestationId","type":"uint64"}],"name":"getAttestation","outputs":[{"components":[{"internalType":"uint64","name":"schemaId","type":"uint64"},{"internalType":"uint64","name":"linkedAttestationId","type":"uint64"},{"internalType":"uint64","name":"attestTimestamp","type":"uint64"},{"internalType":"uint64","name":"revokeTimestamp","type":"uint64"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint64","name":"validUntil","type":"uint64"},{"internalType":"enum DataLocation","name":"dataLocation","type":"uint8"},{"internalType":"bool","name":"revoked","type":"bool"},{"internalType":"bytes[]","name":"recipients","type":"bytes[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint64","name":"schemaId","type":"uint64"},{"internalType":"uint64","name":"linkedAttestationId","type":"uint64"},{"internalType":"uint64","name":"attestTimestamp","type":"uint64"},{"internalType":"uint64","name":"revokeTimestamp","type":"uint64"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint64","name":"validUntil","type":"uint64"},{"internalType":"enum DataLocation","name":"dataLocation","type":"uint8"},{"internalType":"bool","name":"revoked","type":"bool"},{"internalType":"bytes[]","name":"recipients","type":"bytes[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation[]","name":"attestations","type":"tuple[]"}],"name":"getDelegatedAttestBatchHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"uint64","name":"schemaId","type":"uint64"},{"internalType":"uint64","name":"linkedAttestationId","type":"uint64"},{"internalType":"uint64","name":"attestTimestamp","type":"uint64"},{"internalType":"uint64","name":"revokeTimestamp","type":"uint64"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint64","name":"validUntil","type":"uint64"},{"internalType":"enum DataLocation","name":"dataLocation","type":"uint8"},{"internalType":"bool","name":"revoked","type":"bool"},{"internalType":"bytes[]","name":"recipients","type":"bytes[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation","name":"attestation","type":"tuple"}],"name":"getDelegatedAttestHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"string[]","name":"offchainAttestationIds","type":"string[]"}],"name":"getDelegatedOffchainAttestBatchHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"string","name":"offchainAttestationId","type":"string"}],"name":"getDelegatedOffchainAttestHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"string[]","name":"offchainAttestationIds","type":"string[]"},{"internalType":"string[]","name":"reasons","type":"string[]"}],"name":"getDelegatedOffchainRevokeBatchHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"string","name":"offchainAttestationId","type":"string"},{"internalType":"string","name":"reason","type":"string"}],"name":"getDelegatedOffchainRevokeHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"registrant","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"enum DataLocation","name":"dataLocation","type":"uint8"},{"internalType":"uint64","name":"maxValidFor","type":"uint64"},{"internalType":"contract ISPHook","name":"hook","type":"address"},{"internalType":"uint64","name":"timestamp","type":"uint64"},{"internalType":"string","name":"data","type":"string"}],"internalType":"struct Schema[]","name":"schemas","type":"tuple[]"}],"name":"getDelegatedRegisterBatchHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"registrant","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"enum DataLocation","name":"dataLocation","type":"uint8"},{"internalType":"uint64","name":"maxValidFor","type":"uint64"},{"internalType":"contract ISPHook","name":"hook","type":"address"},{"internalType":"uint64","name":"timestamp","type":"uint64"},{"internalType":"string","name":"data","type":"string"}],"internalType":"struct Schema","name":"schema","type":"tuple"}],"name":"getDelegatedRegisterHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint64[]","name":"attestationIds","type":"uint64[]"},{"internalType":"string[]","name":"reasons","type":"string[]"}],"name":"getDelegatedRevokeBatchHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint64","name":"attestationId","type":"uint64"},{"internalType":"string","name":"reason","type":"string"}],"name":"getDelegatedRevokeHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"string","name":"offchainAttestationId","type":"string"}],"name":"getOffchainAttestation","outputs":[{"components":[{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint64","name":"timestamp","type":"uint64"}],"internalType":"struct OffchainAttestation","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"schemaId","type":"uint64"}],"name":"getSchema","outputs":[{"components":[{"internalType":"address","name":"registrant","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"enum DataLocation","name":"dataLocation","type":"uint8"},{"internalType":"uint64","name":"maxValidFor","type":"uint64"},{"internalType":"contract ISPHook","name":"hook","type":"address"},{"internalType":"uint64","name":"timestamp","type":"uint64"},{"internalType":"string","name":"data","type":"string"}],"internalType":"struct Schema","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"registrant","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"enum DataLocation","name":"dataLocation","type":"uint8"},{"internalType":"uint64","name":"maxValidFor","type":"uint64"},{"internalType":"contract ISPHook","name":"hook","type":"address"},{"internalType":"uint64","name":"timestamp","type":"uint64"},{"internalType":"string","name":"data","type":"string"}],"internalType":"struct Schema","name":"schema","type":"tuple"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"}],"name":"register","outputs":[{"internalType":"uint64","name":"schemaId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"registrant","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"enum DataLocation","name":"dataLocation","type":"uint8"},{"internalType":"uint64","name":"maxValidFor","type":"uint64"},{"internalType":"contract ISPHook","name":"hook","type":"address"},{"internalType":"uint64","name":"timestamp","type":"uint64"},{"internalType":"string","name":"data","type":"string"}],"internalType":"struct Schema[]","name":"schemas","type":"tuple[]"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"}],"name":"registerBatch","outputs":[{"internalType":"uint64[]","name":"schemaIds","type":"uint64[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"attestationId","type":"uint64"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"revoke","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"attestationId","type":"uint64"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"contract IERC20","name":"resolverFeesERC20Token","type":"address"},{"internalType":"uint256","name":"resolverFeesERC20Amount","type":"uint256"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"revoke","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"attestationId","type":"uint64"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"uint256","name":"resolverFeesETH","type":"uint256"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"revoke","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint64[]","name":"attestationIds","type":"uint64[]"},{"internalType":"string[]","name":"reasons","type":"string[]"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"revokeBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64[]","name":"attestationIds","type":"uint64[]"},{"internalType":"string[]","name":"reasons","type":"string[]"},{"internalType":"uint256[]","name":"resolverFeesETH","type":"uint256[]"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"revokeBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint64[]","name":"attestationIds","type":"uint64[]"},{"internalType":"string[]","name":"reasons","type":"string[]"},{"internalType":"contract IERC20[]","name":"resolverFeesERC20Tokens","type":"address[]"},{"internalType":"uint256[]","name":"resolverFeesERC20Amount","type":"uint256[]"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"revokeBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"offchainAttestationId","type":"string"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"}],"name":"revokeOffchain","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string[]","name":"offchainAttestationIds","type":"string[]"},{"internalType":"string[]","name":"reasons","type":"string[]"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"}],"name":"revokeOffchainBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"schemaCounter","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"}],"devdoc":{"author":"Jack Xu @ EthSign","errors":{"AttestationAlreadyRevoked()":[{"details":"0xd8c3da86"}],"AttestationInvalidDuration()":[{"details":"0xa65e02ed"}],"AttestationIrrevocable()":[{"details":"0x8ac42f49"}],"AttestationNonexistent()":[{"details":"0x54681a13"}],"AttestationWrongAttester()":[{"details":"0xa9ad2007"}],"InvalidDelegateSignature()":[{"details":"0xfdf4e6f9"}],"LegacySPRequired()":[{"details":"0x5c34b9cc"}],"OffchainAttestationAlreadyRevoked()":[{"details":"0xa0671d20"}],"OffchainAttestationExists()":[{"details":"0xc83e3cdf"}],"OffchainAttestationNonexistent()":[{"details":"0xa006519a"}],"Paused()":[{"details":"0x9e87fac8"}],"SchemaNonexistent()":[{"details":"0x38f8c6c4"}],"SchemaWrongRegistrant()":[{"details":"0x71984561"}]},"kind":"dev","methods":{"attest((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes),address,uint256,string,bytes,bytes)":{"details":"Emits `AttestationMade`.","params":{"attestation":"See `Attestation`.","delegateSignature":"An optional ECDSA delegateSignature if this is a delegated attestation. Use `\"\"` or `0x` otherwise.","extraData":"This is forwarded to the resolver directly.","indexingKey":"Used by the frontend to aid indexing.","resolverFeesERC20Amount":"Amount of funds to send to the hook.","resolverFeesERC20Token":"ERC20 token address used for payment."},"returns":{"attestationId":"The assigned ID of the attestation."}},"attest((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes),string,bytes,bytes)":{"details":"Emits `AttestationMade`.","params":{"attestation":"See `Attestation`.","delegateSignature":"An optional ECDSA delegateSignature if this is a delegated attestation. Use `\"\"` or `0x` otherwise.","extraData":"This is forwarded to the resolver directly.","indexingKey":"Used by the frontend to aid indexing."},"returns":{"attestationId":"The assigned ID of the attestation."}},"attest((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes),uint256,string,bytes,bytes)":{"details":"Emits `AttestationMade`.","params":{"attestation":"See `Attestation`.","delegateSignature":"An optional ECDSA delegateSignature if this is a delegated attestation. Use `\"\"` or `0x` otherwise.","extraData":"This is forwarded to the resolver directly.","indexingKey":"Used by the frontend to aid indexing.","resolverFeesETH":"Amount of funds to send to the hook."},"returns":{"attestationId":"The assigned ID of the attestation."}},"attestOffchain(string,address,bytes)":{"details":"Emits `OffchainAttestationMade`.","params":{"delegateAttester":"An optional delegated attester that authorized the caller to attest on their behalf if this is a delegated attestation. Use `address(0)` otherwise.","delegateSignature":"An optional ECDSA delegateSignature if this is a delegated attestation. Use `\"\"` or `0x` otherwise. Use `\"\"` or `0x` otherwise.","offchainAttestationId":"The off-chain data ID."}},"register((address,bool,uint8,uint64,address,uint64,string),bytes)":{"details":"Emits `SchemaRegistered`.","params":{"delegateSignature":"An optional ECDSA delegateSignature if this is a delegated attestation. Use `\"\"` or `0x` otherwise.","schema":"See `Schema`."},"returns":{"schemaId":"The assigned ID of the registered schema."}},"revoke(uint64,string,address,uint256,bytes,bytes)":{"details":"Emits `AttestationRevoked`. Must be called by the attester.","params":{"attestationId":"An existing attestation ID.","delegateSignature":"An optional ECDSA delegateSignature if this is a delegated revocation.","extraData":"This is forwarded to the resolver directly.","reason":"The revocation reason. This is only emitted as an event to save gas.","resolverFeesERC20Amount":"Amount of funds to send to the hook.","resolverFeesERC20Token":"ERC20 token address used for payment."}},"revoke(uint64,string,bytes,bytes)":{"details":"Emits `AttestationRevoked`. Must be called by the attester.","params":{"attestationId":"An existing attestation ID.","delegateSignature":"An optional ECDSA delegateSignature if this is a delegated revocation.","extraData":"This is forwarded to the resolver directly.","reason":"The revocation reason. This is only emitted as an event to save gas."}},"revoke(uint64,string,uint256,bytes,bytes)":{"details":"Emits `AttestationRevoked`. Must be called by the attester.","params":{"attestationId":"An existing attestation ID.","delegateSignature":"An optional ECDSA delegateSignature if this is a delegated revocation.","extraData":"This is forwarded to the resolver directly.","reason":"The revocation reason. This is only emitted as an event to save gas.","resolverFeesETH":"Amount of funds to send to the hook."}},"revokeOffchain(string,string,bytes)":{"details":"Emits `OffchainAttestationRevoked`. Must be called by the attester.","params":{"delegateSignature":"An optional ECDSA delegateSignature if this is a delegated revocation.","offchainAttestationId":"An existing attestation ID.","reason":"The revocation reason. This is only emitted as an event to save gas."}}},"title":"Sign Protocol Interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"attest((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes),address,uint256,string,bytes,bytes)":"812c255f","attest((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes),string,bytes,bytes)":"b82916cb","attest((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes),uint256,string,bytes,bytes)":"e09f1b7a","attestBatch((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes)[],address[],uint256[],string[],bytes,bytes)":"59d9a12f","attestBatch((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes)[],string[],bytes,bytes)":"d98934ff","attestBatch((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes)[],uint256[],string[],bytes,bytes)":"4e6ac1d5","attestOffchain(string,address,bytes)":"a01fb774","attestOffchainBatch(string[],address,bytes)":"1916749d","attestationCounter()":"2c996e03","getAttestation(uint64)":"62252880","getDelegatedAttestBatchHash((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes)[])":"3f50fb76","getDelegatedAttestHash((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes))":"8ef1fbc1","getDelegatedOffchainAttestBatchHash(string[])":"263bc92d","getDelegatedOffchainAttestHash(string)":"be919fb1","getDelegatedOffchainRevokeBatchHash(string[],string[])":"d3dc7b23","getDelegatedOffchainRevokeHash(string,string)":"985292eb","getDelegatedRegisterBatchHash((address,bool,uint8,uint64,address,uint64,string)[])":"00f0f855","getDelegatedRegisterHash((address,bool,uint8,uint64,address,uint64,string))":"570b7434","getDelegatedRevokeBatchHash(uint64[],string[])":"40f356fa","getDelegatedRevokeHash(uint64,string)":"dc50eada","getOffchainAttestation(string)":"6a67651c","getSchema(uint64)":"8d1be875","register((address,bool,uint8,uint64,address,uint64,string),bytes)":"e117a861","registerBatch((address,bool,uint8,uint64,address,uint64,string)[],bytes)":"5e7689b7","revoke(uint64,string,address,uint256,bytes,bytes)":"9b7f8318","revoke(uint64,string,bytes,bytes)":"24855e60","revoke(uint64,string,uint256,bytes,bytes)":"f83b92b7","revokeBatch(uint64[],string[],address[],uint256[],bytes,bytes)":"fd397913","revokeBatch(uint64[],string[],bytes,bytes)":"65ae13b3","revokeBatch(uint64[],string[],uint256[],bytes,bytes)":"d7681235","revokeOffchain(string,string,bytes)":"574a3066","revokeOffchainBatch(string[],string[],bytes)":"ba97637d","schemaCounter()":"cb6a3237","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AttestationAlreadyRevoked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AttestationInvalidDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AttestationIrrevocable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AttestationNonexistent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AttestationWrongAttester\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDelegateSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LegacySPRequired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OffchainAttestationAlreadyRevoked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OffchainAttestationExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OffchainAttestationNonexistent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Paused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SchemaNonexistent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SchemaWrongRegistrant\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"attestationId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"indexingKey\",\"type\":\"string\"}],\"name\":\"AttestationMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"attestationId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"AttestationRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"attestationId\",\"type\":\"string\"}],\"name\":\"OffchainAttestationMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"attestationId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"OffchainAttestationRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"}],\"name\":\"SchemaRegistered\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"linkedAttestationId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"attestTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revokeTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"validUntil\",\"type\":\"uint64\"},{\"internalType\":\"enum DataLocation\",\"name\":\"dataLocation\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"},{\"internalType\":\"bytes[]\",\"name\":\"recipients\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"},{\"internalType\":\"contract IERC20\",\"name\":\"resolverFeesERC20Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"resolverFeesERC20Amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"indexingKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"attestationId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"linkedAttestationId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"attestTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revokeTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"validUntil\",\"type\":\"uint64\"},{\"internalType\":\"enum DataLocation\",\"name\":\"dataLocation\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"},{\"internalType\":\"bytes[]\",\"name\":\"recipients\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"indexingKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"attestationId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"linkedAttestationId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"attestTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revokeTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"validUntil\",\"type\":\"uint64\"},{\"internalType\":\"enum DataLocation\",\"name\":\"dataLocation\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"},{\"internalType\":\"bytes[]\",\"name\":\"recipients\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"resolverFeesETH\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"indexingKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"attestationId\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"linkedAttestationId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"attestTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revokeTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"validUntil\",\"type\":\"uint64\"},{\"internalType\":\"enum DataLocation\",\"name\":\"dataLocation\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"},{\"internalType\":\"bytes[]\",\"name\":\"recipients\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"resolverFeesETH\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"indexingKeys\",\"type\":\"string[]\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"attestBatch\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"attestationIds\",\"type\":\"uint64[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"linkedAttestationId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"attestTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revokeTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"validUntil\",\"type\":\"uint64\"},{\"internalType\":\"enum DataLocation\",\"name\":\"dataLocation\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"},{\"internalType\":\"bytes[]\",\"name\":\"recipients\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"resolverFeesERC20Tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"resolverFeesERC20Amount\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"indexingKeys\",\"type\":\"string[]\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"attestBatch\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"attestationIds\",\"type\":\"uint64[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"linkedAttestationId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"attestTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revokeTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"validUntil\",\"type\":\"uint64\"},{\"internalType\":\"enum DataLocation\",\"name\":\"dataLocation\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"},{\"internalType\":\"bytes[]\",\"name\":\"recipients\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"string[]\",\"name\":\"indexingKeys\",\"type\":\"string[]\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"attestBatch\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"attestationIds\",\"type\":\"uint64[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"offchainAttestationId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"delegateAttester\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"}],\"name\":\"attestOffchain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"offchainAttestationIds\",\"type\":\"string[]\"},{\"internalType\":\"address\",\"name\":\"delegateAttester\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"}],\"name\":\"attestOffchainBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"attestationCounter\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"attestationId\",\"type\":\"uint64\"}],\"name\":\"getAttestation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"linkedAttestationId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"attestTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revokeTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"validUntil\",\"type\":\"uint64\"},{\"internalType\":\"enum DataLocation\",\"name\":\"dataLocation\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"},{\"internalType\":\"bytes[]\",\"name\":\"recipients\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"linkedAttestationId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"attestTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revokeTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"validUntil\",\"type\":\"uint64\"},{\"internalType\":\"enum DataLocation\",\"name\":\"dataLocation\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"},{\"internalType\":\"bytes[]\",\"name\":\"recipients\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"}],\"name\":\"getDelegatedAttestBatchHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"linkedAttestationId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"attestTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revokeTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"validUntil\",\"type\":\"uint64\"},{\"internalType\":\"enum DataLocation\",\"name\":\"dataLocation\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"},{\"internalType\":\"bytes[]\",\"name\":\"recipients\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"getDelegatedAttestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"offchainAttestationIds\",\"type\":\"string[]\"}],\"name\":\"getDelegatedOffchainAttestBatchHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"offchainAttestationId\",\"type\":\"string\"}],\"name\":\"getDelegatedOffchainAttestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"offchainAttestationIds\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"reasons\",\"type\":\"string[]\"}],\"name\":\"getDelegatedOffchainRevokeBatchHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"offchainAttestationId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"getDelegatedOffchainRevokeHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"enum DataLocation\",\"name\":\"dataLocation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"maxValidFor\",\"type\":\"uint64\"},{\"internalType\":\"contract ISPHook\",\"name\":\"hook\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"internalType\":\"struct Schema[]\",\"name\":\"schemas\",\"type\":\"tuple[]\"}],\"name\":\"getDelegatedRegisterBatchHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"enum DataLocation\",\"name\":\"dataLocation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"maxValidFor\",\"type\":\"uint64\"},{\"internalType\":\"contract ISPHook\",\"name\":\"hook\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"internalType\":\"struct Schema\",\"name\":\"schema\",\"type\":\"tuple\"}],\"name\":\"getDelegatedRegisterHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64[]\",\"name\":\"attestationIds\",\"type\":\"uint64[]\"},{\"internalType\":\"string[]\",\"name\":\"reasons\",\"type\":\"string[]\"}],\"name\":\"getDelegatedRevokeBatchHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"attestationId\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"getDelegatedRevokeHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"offchainAttestationId\",\"type\":\"string\"}],\"name\":\"getOffchainAttestation\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"internalType\":\"struct OffchainAttestation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"}],\"name\":\"getSchema\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"enum DataLocation\",\"name\":\"dataLocation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"maxValidFor\",\"type\":\"uint64\"},{\"internalType\":\"contract ISPHook\",\"name\":\"hook\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"internalType\":\"struct Schema\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"enum DataLocation\",\"name\":\"dataLocation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"maxValidFor\",\"type\":\"uint64\"},{\"internalType\":\"contract ISPHook\",\"name\":\"hook\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"internalType\":\"struct Schema\",\"name\":\"schema\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"}],\"name\":\"register\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"enum DataLocation\",\"name\":\"dataLocation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"maxValidFor\",\"type\":\"uint64\"},{\"internalType\":\"contract ISPHook\",\"name\":\"hook\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"internalType\":\"struct Schema[]\",\"name\":\"schemas\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"}],\"name\":\"registerBatch\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"schemaIds\",\"type\":\"uint64[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"attestationId\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"attestationId\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"contract IERC20\",\"name\":\"resolverFeesERC20Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"resolverFeesERC20Amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"attestationId\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"resolverFeesETH\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64[]\",\"name\":\"attestationIds\",\"type\":\"uint64[]\"},{\"internalType\":\"string[]\",\"name\":\"reasons\",\"type\":\"string[]\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"revokeBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64[]\",\"name\":\"attestationIds\",\"type\":\"uint64[]\"},{\"internalType\":\"string[]\",\"name\":\"reasons\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"resolverFeesETH\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"revokeBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64[]\",\"name\":\"attestationIds\",\"type\":\"uint64[]\"},{\"internalType\":\"string[]\",\"name\":\"reasons\",\"type\":\"string[]\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"resolverFeesERC20Tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"resolverFeesERC20Amount\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"revokeBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"offchainAttestationId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"}],\"name\":\"revokeOffchain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"offchainAttestationIds\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"reasons\",\"type\":\"string[]\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"}],\"name\":\"revokeOffchainBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"schemaCounter\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Jack Xu @ EthSign\",\"errors\":{\"AttestationAlreadyRevoked()\":[{\"details\":\"0xd8c3da86\"}],\"AttestationInvalidDuration()\":[{\"details\":\"0xa65e02ed\"}],\"AttestationIrrevocable()\":[{\"details\":\"0x8ac42f49\"}],\"AttestationNonexistent()\":[{\"details\":\"0x54681a13\"}],\"AttestationWrongAttester()\":[{\"details\":\"0xa9ad2007\"}],\"InvalidDelegateSignature()\":[{\"details\":\"0xfdf4e6f9\"}],\"LegacySPRequired()\":[{\"details\":\"0x5c34b9cc\"}],\"OffchainAttestationAlreadyRevoked()\":[{\"details\":\"0xa0671d20\"}],\"OffchainAttestationExists()\":[{\"details\":\"0xc83e3cdf\"}],\"OffchainAttestationNonexistent()\":[{\"details\":\"0xa006519a\"}],\"Paused()\":[{\"details\":\"0x9e87fac8\"}],\"SchemaNonexistent()\":[{\"details\":\"0x38f8c6c4\"}],\"SchemaWrongRegistrant()\":[{\"details\":\"0x71984561\"}]},\"kind\":\"dev\",\"methods\":{\"attest((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes),address,uint256,string,bytes,bytes)\":{\"details\":\"Emits `AttestationMade`.\",\"params\":{\"attestation\":\"See `Attestation`.\",\"delegateSignature\":\"An optional ECDSA delegateSignature if this is a delegated attestation. Use `\\\"\\\"` or `0x` otherwise.\",\"extraData\":\"This is forwarded to the resolver directly.\",\"indexingKey\":\"Used by the frontend to aid indexing.\",\"resolverFeesERC20Amount\":\"Amount of funds to send to the hook.\",\"resolverFeesERC20Token\":\"ERC20 token address used for payment.\"},\"returns\":{\"attestationId\":\"The assigned ID of the attestation.\"}},\"attest((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes),string,bytes,bytes)\":{\"details\":\"Emits `AttestationMade`.\",\"params\":{\"attestation\":\"See `Attestation`.\",\"delegateSignature\":\"An optional ECDSA delegateSignature if this is a delegated attestation. Use `\\\"\\\"` or `0x` otherwise.\",\"extraData\":\"This is forwarded to the resolver directly.\",\"indexingKey\":\"Used by the frontend to aid indexing.\"},\"returns\":{\"attestationId\":\"The assigned ID of the attestation.\"}},\"attest((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes),uint256,string,bytes,bytes)\":{\"details\":\"Emits `AttestationMade`.\",\"params\":{\"attestation\":\"See `Attestation`.\",\"delegateSignature\":\"An optional ECDSA delegateSignature if this is a delegated attestation. Use `\\\"\\\"` or `0x` otherwise.\",\"extraData\":\"This is forwarded to the resolver directly.\",\"indexingKey\":\"Used by the frontend to aid indexing.\",\"resolverFeesETH\":\"Amount of funds to send to the hook.\"},\"returns\":{\"attestationId\":\"The assigned ID of the attestation.\"}},\"attestOffchain(string,address,bytes)\":{\"details\":\"Emits `OffchainAttestationMade`.\",\"params\":{\"delegateAttester\":\"An optional delegated attester that authorized the caller to attest on their behalf if this is a delegated attestation. Use `address(0)` otherwise.\",\"delegateSignature\":\"An optional ECDSA delegateSignature if this is a delegated attestation. Use `\\\"\\\"` or `0x` otherwise. Use `\\\"\\\"` or `0x` otherwise.\",\"offchainAttestationId\":\"The off-chain data ID.\"}},\"register((address,bool,uint8,uint64,address,uint64,string),bytes)\":{\"details\":\"Emits `SchemaRegistered`.\",\"params\":{\"delegateSignature\":\"An optional ECDSA delegateSignature if this is a delegated attestation. Use `\\\"\\\"` or `0x` otherwise.\",\"schema\":\"See `Schema`.\"},\"returns\":{\"schemaId\":\"The assigned ID of the registered schema.\"}},\"revoke(uint64,string,address,uint256,bytes,bytes)\":{\"details\":\"Emits `AttestationRevoked`. Must be called by the attester.\",\"params\":{\"attestationId\":\"An existing attestation ID.\",\"delegateSignature\":\"An optional ECDSA delegateSignature if this is a delegated revocation.\",\"extraData\":\"This is forwarded to the resolver directly.\",\"reason\":\"The revocation reason. This is only emitted as an event to save gas.\",\"resolverFeesERC20Amount\":\"Amount of funds to send to the hook.\",\"resolverFeesERC20Token\":\"ERC20 token address used for payment.\"}},\"revoke(uint64,string,bytes,bytes)\":{\"details\":\"Emits `AttestationRevoked`. Must be called by the attester.\",\"params\":{\"attestationId\":\"An existing attestation ID.\",\"delegateSignature\":\"An optional ECDSA delegateSignature if this is a delegated revocation.\",\"extraData\":\"This is forwarded to the resolver directly.\",\"reason\":\"The revocation reason. This is only emitted as an event to save gas.\"}},\"revoke(uint64,string,uint256,bytes,bytes)\":{\"details\":\"Emits `AttestationRevoked`. Must be called by the attester.\",\"params\":{\"attestationId\":\"An existing attestation ID.\",\"delegateSignature\":\"An optional ECDSA delegateSignature if this is a delegated revocation.\",\"extraData\":\"This is forwarded to the resolver directly.\",\"reason\":\"The revocation reason. This is only emitted as an event to save gas.\",\"resolverFeesETH\":\"Amount of funds to send to the hook.\"}},\"revokeOffchain(string,string,bytes)\":{\"details\":\"Emits `OffchainAttestationRevoked`. Must be called by the attester.\",\"params\":{\"delegateSignature\":\"An optional ECDSA delegateSignature if this is a delegated revocation.\",\"offchainAttestationId\":\"An existing attestation ID.\",\"reason\":\"The revocation reason. This is only emitted as an event to save gas.\"}}},\"title\":\"Sign Protocol Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"attest((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes),address,uint256,string,bytes,bytes)\":{\"notice\":\"Makes an attestation where the schema hook expects ERC20 payment.\"},\"attest((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes),string,bytes,bytes)\":{\"notice\":\"Makes an attestation.\"},\"attest((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes),uint256,string,bytes,bytes)\":{\"notice\":\"Makes an attestation where the schema hook expects ETH payment.\"},\"attestBatch((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes)[],address[],uint256[],string[],bytes,bytes)\":{\"notice\":\"Batch attests where the schema hook expects ERC20 payment.\"},\"attestBatch((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes)[],string[],bytes,bytes)\":{\"notice\":\"Batch attests.\"},\"attestBatch((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes)[],uint256[],string[],bytes,bytes)\":{\"notice\":\"Batch attests where the schema hook expects ETH payment.\"},\"attestOffchain(string,address,bytes)\":{\"notice\":\"Timestamps an off-chain data ID.\"},\"attestOffchainBatch(string[],address,bytes)\":{\"notice\":\"Batch timestamps off-chain data IDs.\"},\"attestationCounter()\":{\"notice\":\"Returns the current on-chain attestation counter. This is incremented for each `Attestation` made.\"},\"getAttestation(uint64)\":{\"notice\":\"Returns the specified `Attestation`.\"},\"getDelegatedAttestBatchHash((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes)[])\":{\"notice\":\"Returns the hash that will be used to authorize a delegated batch attestation.\"},\"getDelegatedAttestHash((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes))\":{\"notice\":\"Returns the hash that will be used to authorize a delegated attestation.\"},\"getDelegatedOffchainAttestBatchHash(string[])\":{\"notice\":\"Returns the hash that will be used to authorize a delegated batch offchain attestation.\"},\"getDelegatedOffchainAttestHash(string)\":{\"notice\":\"Returns the hash that will be used to authorize a delegated offchain attestation.\"},\"getDelegatedOffchainRevokeBatchHash(string[],string[])\":{\"notice\":\"Returns the hash that will be used to authorize a delegated batch offchain revocation.\"},\"getDelegatedOffchainRevokeHash(string,string)\":{\"notice\":\"Returns the hash that will be used to authorize a delegated offchain revocation.\"},\"getDelegatedRegisterBatchHash((address,bool,uint8,uint64,address,uint64,string)[])\":{\"notice\":\"Returns the hash that will be used to authorize a delegated batch registration.\"},\"getDelegatedRegisterHash((address,bool,uint8,uint64,address,uint64,string))\":{\"notice\":\"Returns the hash that will be used to authorize a delegated registration.\"},\"getDelegatedRevokeBatchHash(uint64[],string[])\":{\"notice\":\"Returns the hash that will be used to authorize a delegated batch revocation.\"},\"getDelegatedRevokeHash(uint64,string)\":{\"notice\":\"Returns the hash that will be used to authorize a delegated revocation.\"},\"getOffchainAttestation(string)\":{\"notice\":\"Returns the specified `OffchainAttestation`.\"},\"getSchema(uint64)\":{\"notice\":\"Returns the specified `Schema`.\"},\"register((address,bool,uint8,uint64,address,uint64,string),bytes)\":{\"notice\":\"Registers a Schema.\"},\"registerBatch((address,bool,uint8,uint64,address,uint64,string)[],bytes)\":{\"notice\":\"Batch registers a Schema.\"},\"revoke(uint64,string,address,uint256,bytes,bytes)\":{\"notice\":\"Revokes an existing revocable attestation where the schema hook expects ERC20 payment.\"},\"revoke(uint64,string,bytes,bytes)\":{\"notice\":\"Revokes an existing revocable attestation.\"},\"revoke(uint64,string,uint256,bytes,bytes)\":{\"notice\":\"Revokes an existing revocable attestation where the schema hook expects ERC20 payment.\"},\"revokeBatch(uint64[],string[],address[],uint256[],bytes,bytes)\":{\"notice\":\"Batch revokes revocable on-chain attestations where the schema hook expects ERC20 payment.\"},\"revokeBatch(uint64[],string[],bytes,bytes)\":{\"notice\":\"Batch revokes revocable on-chain attestations.\"},\"revokeBatch(uint64[],string[],uint256[],bytes,bytes)\":{\"notice\":\"Batch revokes revocable on-chain attestations where the schema hook expects ETH payment.\"},\"revokeOffchain(string,string,bytes)\":{\"notice\":\"Revokes an existing offchain attestation.\"},\"revokeOffchainBatch(string[],string[],bytes)\":{\"notice\":\"Batch revokes off-chain attestations.\"},\"schemaCounter()\":{\"notice\":\"Returns the current schema counter. This is incremented for each `Schema` registered.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@ethsign/sign-protocol-evm/src/interfaces/ISP.sol\":\"ISP\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ethsign/sign-protocol-evm/src/interfaces/ISP.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { IVersionable } from \\\"./IVersionable.sol\\\";\\nimport { Schema } from \\\"../models/Schema.sol\\\";\\nimport { Attestation, OffchainAttestation } from \\\"../models/Attestation.sol\\\";\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/**\\n * @title Sign Protocol Interface\\n * @author Jack Xu @ EthSign\\n */\\ninterface ISP is IVersionable {\\n    event SchemaRegistered(uint64 schemaId);\\n    event AttestationMade(uint64 attestationId, string indexingKey);\\n    event AttestationRevoked(uint64 attestationId, string reason);\\n    event OffchainAttestationMade(string attestationId);\\n    event OffchainAttestationRevoked(string attestationId, string reason);\\n\\n    /**\\n     * @dev 0x9e87fac8\\n     */\\n    error Paused();\\n    /**\\n     * @dev 0x38f8c6c4\\n     */\\n    error SchemaNonexistent();\\n    /**\\n     * @dev 0x71984561\\n     */\\n    error SchemaWrongRegistrant();\\n    /**\\n     * @dev 0x8ac42f49\\n     */\\n    error AttestationIrrevocable();\\n    /**\\n     * @dev 0x54681a13\\n     */\\n    error AttestationNonexistent();\\n    /**\\n     * @dev 0xa65e02ed\\n     */\\n    error AttestationInvalidDuration();\\n    /**\\n     * @dev 0xd8c3da86\\n     */\\n    error AttestationAlreadyRevoked();\\n    /**\\n     * @dev 0xa9ad2007\\n     */\\n    error AttestationWrongAttester();\\n    /**\\n     * @dev 0xc83e3cdf\\n     */\\n    error OffchainAttestationExists();\\n    /**\\n     * @dev 0xa006519a\\n     */\\n    error OffchainAttestationNonexistent();\\n    /**\\n     * @dev 0xa0671d20\\n     */\\n    error OffchainAttestationAlreadyRevoked();\\n    /**\\n     * @dev 0xfdf4e6f9\\n     */\\n    error InvalidDelegateSignature();\\n    /**\\n     * @dev 0x5c34b9cc\\n     */\\n    error LegacySPRequired();\\n\\n    /**\\n     * @notice Registers a Schema.\\n     * @dev Emits `SchemaRegistered`.\\n     * @param schema See `Schema`.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\\\"\\\"` or `0x`\\n     * otherwise.\\n     * @return schemaId The assigned ID of the registered schema.\\n     */\\n    function register(Schema memory schema, bytes calldata delegateSignature) external returns (uint64 schemaId);\\n\\n    /**\\n     * @notice Makes an attestation.\\n     * @dev Emits `AttestationMade`.\\n     * @param attestation See `Attestation`.\\n     * @param indexingKey Used by the frontend to aid indexing.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\\\"\\\"` or `0x`\\n     * otherwise.\\n     * @param extraData This is forwarded to the resolver directly.\\n     * @return attestationId The assigned ID of the attestation.\\n     */\\n    function attest(\\n        Attestation calldata attestation,\\n        string calldata indexingKey,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        returns (uint64 attestationId);\\n\\n    /**\\n     * @notice Makes an attestation where the schema hook expects ETH payment.\\n     * @dev Emits `AttestationMade`.\\n     * @param attestation See `Attestation`.\\n     * @param resolverFeesETH Amount of funds to send to the hook.\\n     * @param indexingKey Used by the frontend to aid indexing.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\\\"\\\"` or `0x`\\n     * otherwise.\\n     * @param extraData This is forwarded to the resolver directly.\\n     * @return attestationId The assigned ID of the attestation.\\n     */\\n    function attest(\\n        Attestation calldata attestation,\\n        uint256 resolverFeesETH,\\n        string calldata indexingKey,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        payable\\n        returns (uint64 attestationId);\\n\\n    /**\\n     * @notice Makes an attestation where the schema hook expects ERC20 payment.\\n     * @dev Emits `AttestationMade`.\\n     * @param attestation See `Attestation`.\\n     * @param resolverFeesERC20Token ERC20 token address used for payment.\\n     * @param resolverFeesERC20Amount Amount of funds to send to the hook.\\n     * @param indexingKey Used by the frontend to aid indexing.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\\\"\\\"` or `0x`\\n     * otherwise.\\n     * @param extraData This is forwarded to the resolver directly.\\n     * @return attestationId The assigned ID of the attestation.\\n     */\\n    function attest(\\n        Attestation calldata attestation,\\n        IERC20 resolverFeesERC20Token,\\n        uint256 resolverFeesERC20Amount,\\n        string calldata indexingKey,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        returns (uint64 attestationId);\\n\\n    /**\\n     * @notice Timestamps an off-chain data ID.\\n     * @dev Emits `OffchainAttestationMade`.\\n     * @param offchainAttestationId The off-chain data ID.\\n     * @param delegateAttester An optional delegated attester that authorized the caller to attest on their behalf if\\n     * this is a delegated attestation. Use `address(0)` otherwise.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\\\"\\\"` or `0x`\\n     * otherwise. Use `\\\"\\\"` or `0x` otherwise.\\n     */\\n    function attestOffchain(\\n        string calldata offchainAttestationId,\\n        address delegateAttester,\\n        bytes calldata delegateSignature\\n    )\\n        external;\\n\\n    /**\\n     * @notice Revokes an existing revocable attestation.\\n     * @dev Emits `AttestationRevoked`. Must be called by the attester.\\n     * @param attestationId An existing attestation ID.\\n     * @param reason The revocation reason. This is only emitted as an event to save gas.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation.\\n     * @param extraData This is forwarded to the resolver directly.\\n     */\\n    function revoke(\\n        uint64 attestationId,\\n        string calldata reason,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external;\\n\\n    /**\\n     * @notice Revokes an existing revocable attestation where the schema hook expects ERC20 payment.\\n     * @dev Emits `AttestationRevoked`. Must be called by the attester.\\n     * @param attestationId An existing attestation ID.\\n     * @param reason The revocation reason. This is only emitted as an event to save gas.\\n     * @param resolverFeesETH Amount of funds to send to the hook.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation.\\n     * @param extraData This is forwarded to the resolver directly.\\n     */\\n    function revoke(\\n        uint64 attestationId,\\n        string calldata reason,\\n        uint256 resolverFeesETH,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        payable;\\n\\n    /**\\n     * @notice Revokes an existing revocable attestation where the schema hook expects ERC20 payment.\\n     * @dev Emits `AttestationRevoked`. Must be called by the attester.\\n     * @param attestationId An existing attestation ID.\\n     * @param reason The revocation reason. This is only emitted as an event to save gas.\\n     * @param resolverFeesERC20Token ERC20 token address used for payment.\\n     * @param resolverFeesERC20Amount Amount of funds to send to the hook.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation.\\n     * @param extraData This is forwarded to the resolver directly.\\n     */\\n    function revoke(\\n        uint64 attestationId,\\n        string calldata reason,\\n        IERC20 resolverFeesERC20Token,\\n        uint256 resolverFeesERC20Amount,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external;\\n\\n    /**\\n     * @notice Revokes an existing offchain attestation.\\n     * @dev Emits `OffchainAttestationRevoked`. Must be called by the attester.\\n     * @param offchainAttestationId An existing attestation ID.\\n     * @param reason The revocation reason. This is only emitted as an event to save gas.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation.\\n     */\\n    function revokeOffchain(\\n        string calldata offchainAttestationId,\\n        string calldata reason,\\n        bytes calldata delegateSignature\\n    )\\n        external;\\n\\n    /**\\n     * @notice Batch registers a Schema.\\n     */\\n    function registerBatch(\\n        Schema[] calldata schemas,\\n        bytes calldata delegateSignature\\n    )\\n        external\\n        returns (uint64[] calldata schemaIds);\\n\\n    /**\\n     * @notice Batch attests.\\n     */\\n    function attestBatch(\\n        Attestation[] calldata attestations,\\n        string[] calldata indexingKeys,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        returns (uint64[] calldata attestationIds);\\n\\n    /**\\n     * @notice Batch attests where the schema hook expects ETH payment.\\n     */\\n    function attestBatch(\\n        Attestation[] calldata attestations,\\n        uint256[] calldata resolverFeesETH,\\n        string[] calldata indexingKeys,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        payable\\n        returns (uint64[] calldata attestationIds);\\n\\n    /**\\n     * @notice Batch attests where the schema hook expects ERC20 payment.\\n     */\\n    function attestBatch(\\n        Attestation[] calldata attestations,\\n        IERC20[] calldata resolverFeesERC20Tokens,\\n        uint256[] calldata resolverFeesERC20Amount,\\n        string[] calldata indexingKeys,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        returns (uint64[] calldata attestationIds);\\n\\n    /**\\n     * @notice Batch timestamps off-chain data IDs.\\n     */\\n    function attestOffchainBatch(\\n        string[] calldata offchainAttestationIds,\\n        address delegateAttester,\\n        bytes calldata delegateSignature\\n    )\\n        external;\\n\\n    /**\\n     * @notice Batch revokes revocable on-chain attestations.\\n     */\\n    function revokeBatch(\\n        uint64[] calldata attestationIds,\\n        string[] calldata reasons,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external;\\n\\n    /**\\n     * @notice Batch revokes revocable on-chain attestations where the schema hook expects ETH payment.\\n     */\\n    function revokeBatch(\\n        uint64[] calldata attestationIds,\\n        string[] calldata reasons,\\n        uint256[] calldata resolverFeesETH,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        payable;\\n\\n    /**\\n     * @notice Batch revokes revocable on-chain attestations where the schema hook expects ERC20 payment.\\n     */\\n    function revokeBatch(\\n        uint64[] calldata attestationIds,\\n        string[] calldata reasons,\\n        IERC20[] calldata resolverFeesERC20Tokens,\\n        uint256[] calldata resolverFeesERC20Amount,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external;\\n\\n    /**\\n     * @notice Batch revokes off-chain attestations.\\n     */\\n    function revokeOffchainBatch(\\n        string[] calldata offchainAttestationIds,\\n        string[] calldata reasons,\\n        bytes calldata delegateSignature\\n    )\\n        external;\\n\\n    /**\\n     * @notice Returns the specified `Schema`.\\n     */\\n    function getSchema(uint64 schemaId) external view returns (Schema calldata);\\n\\n    /**\\n     * @notice Returns the specified `Attestation`.\\n     */\\n    function getAttestation(uint64 attestationId) external view returns (Attestation calldata);\\n\\n    /**\\n     * @notice Returns the specified `OffchainAttestation`.\\n     */\\n    function getOffchainAttestation(string calldata offchainAttestationId)\\n        external\\n        view\\n        returns (OffchainAttestation calldata);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated registration.\\n     */\\n    function getDelegatedRegisterHash(Schema memory schema) external pure returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated batch registration.\\n     */\\n    function getDelegatedRegisterBatchHash(Schema[] memory schemas) external pure returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated attestation.\\n     */\\n    function getDelegatedAttestHash(Attestation calldata attestation) external pure returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated batch attestation.\\n     */\\n    function getDelegatedAttestBatchHash(Attestation[] calldata attestations) external pure returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated offchain attestation.\\n     */\\n    function getDelegatedOffchainAttestHash(string calldata offchainAttestationId) external pure returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated batch offchain attestation.\\n     */\\n    function getDelegatedOffchainAttestBatchHash(string[] calldata offchainAttestationIds)\\n        external\\n        pure\\n        returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated revocation.\\n     */\\n    function getDelegatedRevokeHash(uint64 attestationId, string memory reason) external pure returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated batch revocation.\\n     */\\n    function getDelegatedRevokeBatchHash(\\n        uint64[] memory attestationIds,\\n        string[] memory reasons\\n    )\\n        external\\n        pure\\n        returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated offchain revocation.\\n     */\\n    function getDelegatedOffchainRevokeHash(\\n        string memory offchainAttestationId,\\n        string memory reason\\n    )\\n        external\\n        pure\\n        returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated batch offchain revocation.\\n     */\\n    function getDelegatedOffchainRevokeBatchHash(\\n        string[] memory offchainAttestationIds,\\n        string[] memory reasons\\n    )\\n        external\\n        pure\\n        returns (bytes32);\\n\\n    /**\\n     * @notice Returns the current schema counter. This is incremented for each `Schema` registered.\\n     */\\n    function schemaCounter() external view returns (uint64);\\n\\n    /**\\n     * @notice Returns the current on-chain attestation counter. This is incremented for each `Attestation` made.\\n     */\\n    function attestationCounter() external view returns (uint64);\\n}\\n\",\"keccak256\":\"0xd5ddbb7cc6af2ee4c11d6c5dac739fc6254d84e13167bc054eb4477244490756\",\"license\":\"MIT\"},\"@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/**\\n * @title SIGN Attestation Protocol Resolver Interface\\n * @author Jack Xu @ EthSign\\n */\\ninterface ISPHook {\\n    function didReceiveAttestation(\\n        address attester,\\n        uint64 schemaId,\\n        uint64 attestationId,\\n        bytes calldata extraData\\n    )\\n        external\\n        payable;\\n\\n    function didReceiveAttestation(\\n        address attester,\\n        uint64 schemaId,\\n        uint64 attestationId,\\n        IERC20 resolverFeeERC20Token,\\n        uint256 resolverFeeERC20Amount,\\n        bytes calldata extraData\\n    )\\n        external;\\n\\n    function didReceiveRevocation(\\n        address attester,\\n        uint64 schemaId,\\n        uint64 attestationId,\\n        bytes calldata extraData\\n    )\\n        external\\n        payable;\\n\\n    function didReceiveRevocation(\\n        address attester,\\n        uint64 schemaId,\\n        uint64 attestationId,\\n        IERC20 resolverFeeERC20Token,\\n        uint256 resolverFeeERC20Amount,\\n        bytes calldata extraData\\n    )\\n        external;\\n}\\n\",\"keccak256\":\"0xa42159d34c4b8fa91507efacad81c14106f466efdc63b81a7d566dc0d2e736f4\",\"license\":\"MIT\"},\"@ethsign/sign-protocol-evm/src/interfaces/IVersionable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title IVersionable\\n * @author Jack Xu @ EthSign\\n * @dev This interface helps contracts to keep track of their versioning for upgrade compatibility checks.\\n */\\ninterface IVersionable {\\n    function version() external pure returns (string memory);\\n}\\n\",\"keccak256\":\"0xbcf1955aa8423f4f77a46a988a7cd41a46ae92af42aa4546cfebdc2a92916129\",\"license\":\"MIT\"},\"@ethsign/sign-protocol-evm/src/models/Attestation.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { DataLocation } from \\\"./DataLocation.sol\\\";\\n\\n/**\\n * @title Attestation\\n * @author Jack Xu @ EthSign\\n * @notice This struct represents an on-chain attestation record. This record is not deleted after revocation.\\n *\\n * `schemaId`: The `Schema` that this Attestation is based on. It must exist.\\n * `linkedAttestationId`: Useful if the current Attestation references a previous Attestation. It can either be 0 or an\\n * existing attestation ID.\\n * `attestTimestamp`: When the attestation was made. This is automatically populated by `_attest(...)`.\\n * `revokeTimestamp`: When the attestation was revoked. This is automatically populated by `_revoke(...)`.\\n * `attester`: The attester. At this time, the attester must be the caller of `attest()`.\\n * `validUntil`: The expiration timestamp of the Attestation. Must respect `Schema.maxValidFor`. 0 indicates no\\n * expiration date.\\n * `dataLocation`: Where `Attestation.data` is stored. See `DataLocation.DataLocation`.\\n * `revoked`: If the Attestation has been revoked. It is possible to make a revoked Attestation.\\n * `recipients`: The intended ABI-encoded recipients of this Attestation. This is of type `bytes` to support non-EVM\\n * repicients.\\n * `data`: The raw data of the Attestation based on `Schema.schema`. There is no enforcement here, however. Recommended\\n * to use `abi.encode`.\\n */\\nstruct Attestation {\\n    uint64 schemaId;\\n    uint64 linkedAttestationId;\\n    uint64 attestTimestamp;\\n    uint64 revokeTimestamp;\\n    address attester;\\n    uint64 validUntil;\\n    DataLocation dataLocation;\\n    bool revoked;\\n    bytes[] recipients;\\n    bytes data;\\n}\\n\\n/**\\n * @title OffchainAttestation\\n * @author Jack Xu @ EthSign\\n * @notice This struct represents an off-chain attestation record. This record is not deleted after revocation.\\n *\\n * `attester`: The attester. At this time, the attester must be the caller of `attestOffchain()`.\\n * `timestamp`: The `block.timestamp` of the function call.\\n */\\nstruct OffchainAttestation {\\n    address attester;\\n    uint64 timestamp;\\n}\\n\",\"keccak256\":\"0x8e2a182141d06bfdcce1325d70e8dd307f7d6b3d7b6fafcedc2dbabeb99fa30f\",\"license\":\"MIT\"},\"@ethsign/sign-protocol-evm/src/models/DataLocation.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title DataLocation\\n * @author Jack Xu @ EthSign\\n * @notice This enum indicates where `Schema.data` and `Attestation.data` are stored.\\n */\\nenum DataLocation {\\n    ONCHAIN,\\n    ARWEAVE,\\n    IPFS,\\n    CUSTOM\\n}\\n\",\"keccak256\":\"0x14f64929317cae8ae822a0dd2c20315ac141f10fa255cd2b13a0a4962385ec10\",\"license\":\"MIT\"},\"@ethsign/sign-protocol-evm/src/models/Schema.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { ISPHook } from \\\"../interfaces/ISPHook.sol\\\";\\nimport { DataLocation } from \\\"./DataLocation.sol\\\";\\n\\n/**\\n * @title Schema\\n * @author Jack Xu @ EthSign\\n * @notice This struct represents an on-chain Schema that Attestations can conform to.\\n *\\n * `registrant`: The address that registered this schema.\\n * `revocable`: Whether Attestations that adopt this Schema can be revoked.\\n * `dataLocation`: Where `Schema.data` is stored. See `DataLocation.DataLocation`.\\n * `maxValidFor`: The maximum number of seconds that an Attestation can remain valid. 0 means Attestations can be valid\\n * forever. This is enforced through `Attestation.validUntil`.\\n * `hook`: The `ISPHook` that is called at the end of every function. 0 means there is no hook set. See\\n * `ISPHook`.\\n * `timestamp`: When the schema was registered. This is automatically populated by `_register(...)`.\\n * `data`: The raw schema that `Attestation.data` should follow. Since there is no way to enforce this, it is a `string`\\n * for easy readability.\\n */\\nstruct Schema {\\n    address registrant;\\n    bool revocable;\\n    DataLocation dataLocation;\\n    uint64 maxValidFor;\\n    ISPHook hook;\\n    uint64 timestamp;\\n    string data;\\n}\\n\",\"keccak256\":\"0xcf3bd964790fdc7f72bacc86380b307e58bf15fa5f7332852d4969fe0db58216\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"attest((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes),address,uint256,string,bytes,bytes)":{"notice":"Makes an attestation where the schema hook expects ERC20 payment."},"attest((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes),string,bytes,bytes)":{"notice":"Makes an attestation."},"attest((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes),uint256,string,bytes,bytes)":{"notice":"Makes an attestation where the schema hook expects ETH payment."},"attestBatch((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes)[],address[],uint256[],string[],bytes,bytes)":{"notice":"Batch attests where the schema hook expects ERC20 payment."},"attestBatch((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes)[],string[],bytes,bytes)":{"notice":"Batch attests."},"attestBatch((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes)[],uint256[],string[],bytes,bytes)":{"notice":"Batch attests where the schema hook expects ETH payment."},"attestOffchain(string,address,bytes)":{"notice":"Timestamps an off-chain data ID."},"attestOffchainBatch(string[],address,bytes)":{"notice":"Batch timestamps off-chain data IDs."},"attestationCounter()":{"notice":"Returns the current on-chain attestation counter. This is incremented for each `Attestation` made."},"getAttestation(uint64)":{"notice":"Returns the specified `Attestation`."},"getDelegatedAttestBatchHash((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes)[])":{"notice":"Returns the hash that will be used to authorize a delegated batch attestation."},"getDelegatedAttestHash((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes))":{"notice":"Returns the hash that will be used to authorize a delegated attestation."},"getDelegatedOffchainAttestBatchHash(string[])":{"notice":"Returns the hash that will be used to authorize a delegated batch offchain attestation."},"getDelegatedOffchainAttestHash(string)":{"notice":"Returns the hash that will be used to authorize a delegated offchain attestation."},"getDelegatedOffchainRevokeBatchHash(string[],string[])":{"notice":"Returns the hash that will be used to authorize a delegated batch offchain revocation."},"getDelegatedOffchainRevokeHash(string,string)":{"notice":"Returns the hash that will be used to authorize a delegated offchain revocation."},"getDelegatedRegisterBatchHash((address,bool,uint8,uint64,address,uint64,string)[])":{"notice":"Returns the hash that will be used to authorize a delegated batch registration."},"getDelegatedRegisterHash((address,bool,uint8,uint64,address,uint64,string))":{"notice":"Returns the hash that will be used to authorize a delegated registration."},"getDelegatedRevokeBatchHash(uint64[],string[])":{"notice":"Returns the hash that will be used to authorize a delegated batch revocation."},"getDelegatedRevokeHash(uint64,string)":{"notice":"Returns the hash that will be used to authorize a delegated revocation."},"getOffchainAttestation(string)":{"notice":"Returns the specified `OffchainAttestation`."},"getSchema(uint64)":{"notice":"Returns the specified `Schema`."},"register((address,bool,uint8,uint64,address,uint64,string),bytes)":{"notice":"Registers a Schema."},"registerBatch((address,bool,uint8,uint64,address,uint64,string)[],bytes)":{"notice":"Batch registers a Schema."},"revoke(uint64,string,address,uint256,bytes,bytes)":{"notice":"Revokes an existing revocable attestation where the schema hook expects ERC20 payment."},"revoke(uint64,string,bytes,bytes)":{"notice":"Revokes an existing revocable attestation."},"revoke(uint64,string,uint256,bytes,bytes)":{"notice":"Revokes an existing revocable attestation where the schema hook expects ERC20 payment."},"revokeBatch(uint64[],string[],address[],uint256[],bytes,bytes)":{"notice":"Batch revokes revocable on-chain attestations where the schema hook expects ERC20 payment."},"revokeBatch(uint64[],string[],bytes,bytes)":{"notice":"Batch revokes revocable on-chain attestations."},"revokeBatch(uint64[],string[],uint256[],bytes,bytes)":{"notice":"Batch revokes revocable on-chain attestations where the schema hook expects ETH payment."},"revokeOffchain(string,string,bytes)":{"notice":"Revokes an existing offchain attestation."},"revokeOffchainBatch(string[],string[],bytes)":{"notice":"Batch revokes off-chain attestations."},"schemaCounter()":{"notice":"Returns the current schema counter. This is incremented for each `Schema` registered."}},"version":1}}},"@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol":{"ISPHook":{"abi":[{"inputs":[{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint64","name":"schemaId","type":"uint64"},{"internalType":"uint64","name":"attestationId","type":"uint64"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"didReceiveAttestation","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint64","name":"schemaId","type":"uint64"},{"internalType":"uint64","name":"attestationId","type":"uint64"},{"internalType":"contract IERC20","name":"resolverFeeERC20Token","type":"address"},{"internalType":"uint256","name":"resolverFeeERC20Amount","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"didReceiveAttestation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint64","name":"schemaId","type":"uint64"},{"internalType":"uint64","name":"attestationId","type":"uint64"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"didReceiveRevocation","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint64","name":"schemaId","type":"uint64"},{"internalType":"uint64","name":"attestationId","type":"uint64"},{"internalType":"contract IERC20","name":"resolverFeeERC20Token","type":"address"},{"internalType":"uint256","name":"resolverFeeERC20Amount","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"didReceiveRevocation","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Jack Xu @ EthSign","kind":"dev","methods":{},"title":"SIGN Attestation Protocol Resolver Interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"didReceiveAttestation(address,uint64,uint64,address,uint256,bytes)":"4466507a","didReceiveAttestation(address,uint64,uint64,bytes)":"3398b4ed","didReceiveRevocation(address,uint64,uint64,address,uint256,bytes)":"e830b5c7","didReceiveRevocation(address,uint64,uint64,bytes)":"e33361f4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"attestationId\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"didReceiveAttestation\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"attestationId\",\"type\":\"uint64\"},{\"internalType\":\"contract IERC20\",\"name\":\"resolverFeeERC20Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"resolverFeeERC20Amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"didReceiveAttestation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"attestationId\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"didReceiveRevocation\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"attestationId\",\"type\":\"uint64\"},{\"internalType\":\"contract IERC20\",\"name\":\"resolverFeeERC20Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"resolverFeeERC20Amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"didReceiveRevocation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Jack Xu @ EthSign\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SIGN Attestation Protocol Resolver Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol\":\"ISPHook\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/**\\n * @title SIGN Attestation Protocol Resolver Interface\\n * @author Jack Xu @ EthSign\\n */\\ninterface ISPHook {\\n    function didReceiveAttestation(\\n        address attester,\\n        uint64 schemaId,\\n        uint64 attestationId,\\n        bytes calldata extraData\\n    )\\n        external\\n        payable;\\n\\n    function didReceiveAttestation(\\n        address attester,\\n        uint64 schemaId,\\n        uint64 attestationId,\\n        IERC20 resolverFeeERC20Token,\\n        uint256 resolverFeeERC20Amount,\\n        bytes calldata extraData\\n    )\\n        external;\\n\\n    function didReceiveRevocation(\\n        address attester,\\n        uint64 schemaId,\\n        uint64 attestationId,\\n        bytes calldata extraData\\n    )\\n        external\\n        payable;\\n\\n    function didReceiveRevocation(\\n        address attester,\\n        uint64 schemaId,\\n        uint64 attestationId,\\n        IERC20 resolverFeeERC20Token,\\n        uint256 resolverFeeERC20Amount,\\n        bytes calldata extraData\\n    )\\n        external;\\n}\\n\",\"keccak256\":\"0xa42159d34c4b8fa91507efacad81c14106f466efdc63b81a7d566dc0d2e736f4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@ethsign/sign-protocol-evm/src/interfaces/IVersionable.sol":{"IVersionable":{"abi":[{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"}],"devdoc":{"author":"Jack Xu @ EthSign","details":"This interface helps contracts to keep track of their versioning for upgrade compatibility checks.","kind":"dev","methods":{},"title":"IVersionable","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Jack Xu @ EthSign\",\"details\":\"This interface helps contracts to keep track of their versioning for upgrade compatibility checks.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IVersionable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@ethsign/sign-protocol-evm/src/interfaces/IVersionable.sol\":\"IVersionable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ethsign/sign-protocol-evm/src/interfaces/IVersionable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title IVersionable\\n * @author Jack Xu @ EthSign\\n * @dev This interface helps contracts to keep track of their versioning for upgrade compatibility checks.\\n */\\ninterface IVersionable {\\n    function version() external pure returns (string memory);\\n}\\n\",\"keccak256\":\"0xbcf1955aa8423f4f77a46a988a7cd41a46ae92af42aa4546cfebdc2a92916129\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the address provided by the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":639,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/FundMe.sol":{"EducationalCredential":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"institution","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"string","name":"course","type":"string"},{"indexed":false,"internalType":"uint256","name":"issueDate","type":"uint256"}],"name":"CredentialIssued","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"credentialSchemaId","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"string","name":"course","type":"string"},{"internalType":"uint256","name":"issueDate","type":"uint256"}],"name":"issueCredential","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"schemaId","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes[]","name":"recipients","type":"bytes[]"}],"name":"schemaHook","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"schemaId","type":"uint64"}],"name":"setCredentialSchemaID","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"instance","type":"address"}],"name":"setSPInstance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"spInstance","outputs":[{"internalType":"contract ISP","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"wallet","type":"address"}],"name":"verifyCredential","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"string","name":"","type":"string"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_681":{"entryPoint":null,"id":681,"parameterSlots":1,"returnSlots":0},"@_921":{"entryPoint":null,"id":921,"parameterSlots":0,"returnSlots":0},"@_msgSender_868":{"entryPoint":175,"id":868,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_777":{"entryPoint":183,"id":777,"parameterSlots":1,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":431,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":448,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":411,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":379,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:590:10","nodeType":"YulBlock","src":"0:590:10","statements":[{"body":{"nativeSrc":"52:81:10","nodeType":"YulBlock","src":"52:81:10","statements":[{"nativeSrc":"62:65:10","nodeType":"YulAssignment","src":"62:65:10","value":{"arguments":[{"name":"value","nativeSrc":"77:5:10","nodeType":"YulIdentifier","src":"77:5:10"},{"kind":"number","nativeSrc":"84:42:10","nodeType":"YulLiteral","src":"84:42:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"73:3:10","nodeType":"YulIdentifier","src":"73:3:10"},"nativeSrc":"73:54:10","nodeType":"YulFunctionCall","src":"73:54:10"},"variableNames":[{"name":"cleaned","nativeSrc":"62:7:10","nodeType":"YulIdentifier","src":"62:7:10"}]}]},"name":"cleanup_t_uint160","nativeSrc":"7:126:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34:5:10","nodeType":"YulTypedName","src":"34:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"44:7:10","nodeType":"YulTypedName","src":"44:7:10","type":""}],"src":"7:126:10"},{"body":{"nativeSrc":"184:51:10","nodeType":"YulBlock","src":"184:51:10","statements":[{"nativeSrc":"194:35:10","nodeType":"YulAssignment","src":"194:35:10","value":{"arguments":[{"name":"value","nativeSrc":"223:5:10","nodeType":"YulIdentifier","src":"223:5:10"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"205:17:10","nodeType":"YulIdentifier","src":"205:17:10"},"nativeSrc":"205:24:10","nodeType":"YulFunctionCall","src":"205:24:10"},"variableNames":[{"name":"cleaned","nativeSrc":"194:7:10","nodeType":"YulIdentifier","src":"194:7:10"}]}]},"name":"cleanup_t_address","nativeSrc":"139:96:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"166:5:10","nodeType":"YulTypedName","src":"166:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"176:7:10","nodeType":"YulTypedName","src":"176:7:10","type":""}],"src":"139:96:10"},{"body":{"nativeSrc":"306:53:10","nodeType":"YulBlock","src":"306:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"323:3:10","nodeType":"YulIdentifier","src":"323:3:10"},{"arguments":[{"name":"value","nativeSrc":"346:5:10","nodeType":"YulIdentifier","src":"346:5:10"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"328:17:10","nodeType":"YulIdentifier","src":"328:17:10"},"nativeSrc":"328:24:10","nodeType":"YulFunctionCall","src":"328:24:10"}],"functionName":{"name":"mstore","nativeSrc":"316:6:10","nodeType":"YulIdentifier","src":"316:6:10"},"nativeSrc":"316:37:10","nodeType":"YulFunctionCall","src":"316:37:10"},"nativeSrc":"316:37:10","nodeType":"YulExpressionStatement","src":"316:37:10"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"241:118:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"294:5:10","nodeType":"YulTypedName","src":"294:5:10","type":""},{"name":"pos","nativeSrc":"301:3:10","nodeType":"YulTypedName","src":"301:3:10","type":""}],"src":"241:118:10"},{"body":{"nativeSrc":"463:124:10","nodeType":"YulBlock","src":"463:124:10","statements":[{"nativeSrc":"473:26:10","nodeType":"YulAssignment","src":"473:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"485:9:10","nodeType":"YulIdentifier","src":"485:9:10"},{"kind":"number","nativeSrc":"496:2:10","nodeType":"YulLiteral","src":"496:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"481:3:10","nodeType":"YulIdentifier","src":"481:3:10"},"nativeSrc":"481:18:10","nodeType":"YulFunctionCall","src":"481:18:10"},"variableNames":[{"name":"tail","nativeSrc":"473:4:10","nodeType":"YulIdentifier","src":"473:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"553:6:10","nodeType":"YulIdentifier","src":"553:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"566:9:10","nodeType":"YulIdentifier","src":"566:9:10"},{"kind":"number","nativeSrc":"577:1:10","nodeType":"YulLiteral","src":"577:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"562:3:10","nodeType":"YulIdentifier","src":"562:3:10"},"nativeSrc":"562:17:10","nodeType":"YulFunctionCall","src":"562:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"509:43:10","nodeType":"YulIdentifier","src":"509:43:10"},"nativeSrc":"509:71:10","nodeType":"YulFunctionCall","src":"509:71:10"},"nativeSrc":"509:71:10","nodeType":"YulExpressionStatement","src":"509:71:10"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"365:222:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"435:9:10","nodeType":"YulTypedName","src":"435:9:10","type":""},{"name":"value0","nativeSrc":"447:6:10","nodeType":"YulTypedName","src":"447:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"458:4:10","nodeType":"YulTypedName","src":"458:4:10","type":""}],"src":"365:222:10"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5062000022620000af60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000975760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200008e9190620001c0565b60405180910390fd5b620000a881620000b760201b60201c565b50620001dd565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001a8826200017b565b9050919050565b620001ba816200019b565b82525050565b6000602082019050620001d76000830184620001af565b92915050565b611dd580620001ed6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063a8c5dc3311610066578063a8c5dc3314610149578063b4c4a05414610167578063e14e071b14610185578063f2fde38b146101a1578063f84dd785146101bd5761009e565b806370dd0dbc146100a3578063715018a6146100d55780638da5cb5b146100df5780638e9841d0146100fd5780638e9d660f1461012d575b600080fd5b6100bd60048036038101906100b89190610c5b565b6101ed565b6040516100cc93929190610d4c565b60405180910390f35b6100dd6104b0565b005b6100e76104c4565b6040516100f49190610d99565b60405180910390f35b61011760048036038101906101129190610f15565b6104ed565b6040516101249190610fa7565b60405180910390f35b61014760048036038101906101429190610c5b565b6107f0565b005b61015161083c565b60405161015e9190611021565b60405180910390f35b61016f610862565b60405161017c9190610fa7565b60405180910390f35b61019f600480360381019061019a9190611068565b61087c565b005b6101bb60048036038101906101b69190610c5b565b6108b0565b005b6101d760048036038101906101d2919061114b565b610936565b6040516101e491906111e0565b60405180910390f35b60006060600080600090506000806000600190505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166362252880826040518263ffffffff1660e01b815260040161025d9190610fa7565b600060405180830381865afa92505050801561029c57506040513d6000823e3d601f19601f820116820180604052508101906102999190611530565b60015b156103ab57600160149054906101000a900467ffffffffffffffff1667ffffffffffffffff16816000015167ffffffffffffffff161480156102e057508060e00151155b80156102f25750600081610100015151115b1561039757600081610100015160008151811061031257610311611579565b5b602002602001015180602001905181019061032d91906115e6565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148015610377575083826040015167ffffffffffffffff16115b156103955760019550829450816040015167ffffffffffffffff1693505b505b5080806103a390611642565b915050610202565b50826103d35760008060405180602001604052806000815250909550955095505050506104a9565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166362252880846040518263ffffffff1660e01b81526004016104309190610fa7565b600060405180830381865afa15801561044d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104769190611530565b905060008082610120015180602001905181019061049491906116f7565b91509150600182829850985098505050505050505b9193909250565b6104b8610a96565b6104c26000610b1d565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1603610551576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105489061179f565b60405180910390fd5b600083836040516020016105669291906117bf565b60405160208183030381529060405290506000600167ffffffffffffffff81111561059457610593610dbe565b5b6040519080825280602002602001820160405280156105c757816020015b60608152602001906001900390816105b25790505b509050856040516020016105db9190610d99565b604051602081830303815290604052816000815181106105fe576105fd611579565b5b60200260200101819052506000604051806101400160405280600160149054906101000a900467ffffffffffffffff1667ffffffffffffffff168152602001600067ffffffffffffffff168152602001600067ffffffffffffffff168152602001600067ffffffffffffffff168152602001610678610be1565b73ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff168152602001600060038111156106b8576106b76117ef565b5b81526020016000151581526020018381526020018481525090506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b82916cb836040518263ffffffff1660e01b815260040161072f9190611ae5565b6020604051808303816000875af115801561074e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107729190611b40565b90508773ffffffffffffffffffffffffffffffffffffffff16610793610be1565b73ffffffffffffffffffffffffffffffffffffffff167f3cdce538b6db111fcf97c8cdfc0f65dcd4c7eaeea28abf410f46ad76daed828b89896040516107da9291906117bf565b60405180910390a3809450505050509392505050565b6107f8610a96565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160149054906101000a900467ffffffffffffffff1681565b610884610a96565b80600160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050565b6108b8610a96565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361092a5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109219190610d99565b60405180910390fd5b61093381610b1d565b50565b6000600160149054906101000a900467ffffffffffffffff1667ffffffffffffffff168667ffffffffffffffff16146109a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099b90611bb9565b60405180910390fd5b600183839050146109ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e190611c25565b60405180910390fd5b60008086868101906109fc9190611c45565b915091506000825111610a44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3b90611ced565b60405180910390fd5b42811115610a87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7e90611d7f565b60405180910390fd5b60019250505095945050505050565b610a9e610be1565b73ffffffffffffffffffffffffffffffffffffffff16610abc6104c4565b73ffffffffffffffffffffffffffffffffffffffff1614610b1b57610adf610be1565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b129190610d99565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c2882610bfd565b9050919050565b610c3881610c1d565b8114610c4357600080fd5b50565b600081359050610c5581610c2f565b92915050565b600060208284031215610c7157610c70610bf3565b5b6000610c7f84828501610c46565b91505092915050565b60008115159050919050565b610c9d81610c88565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610cdd578082015181840152602081019050610cc2565b60008484015250505050565b6000601f19601f8301169050919050565b6000610d0582610ca3565b610d0f8185610cae565b9350610d1f818560208601610cbf565b610d2881610ce9565b840191505092915050565b6000819050919050565b610d4681610d33565b82525050565b6000606082019050610d616000830186610c94565b8181036020830152610d738185610cfa565b9050610d826040830184610d3d565b949350505050565b610d9381610c1d565b82525050565b6000602082019050610dae6000830184610d8a565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610df682610ce9565b810181811067ffffffffffffffff82111715610e1557610e14610dbe565b5b80604052505050565b6000610e28610be9565b9050610e348282610ded565b919050565b600067ffffffffffffffff821115610e5457610e53610dbe565b5b610e5d82610ce9565b9050602081019050919050565b82818337600083830152505050565b6000610e8c610e8784610e39565b610e1e565b905082815260208101848484011115610ea857610ea7610db9565b5b610eb3848285610e6a565b509392505050565b600082601f830112610ed057610ecf610db4565b5b8135610ee0848260208601610e79565b91505092915050565b610ef281610d33565b8114610efd57600080fd5b50565b600081359050610f0f81610ee9565b92915050565b600080600060608486031215610f2e57610f2d610bf3565b5b6000610f3c86828701610c46565b935050602084013567ffffffffffffffff811115610f5d57610f5c610bf8565b5b610f6986828701610ebb565b9250506040610f7a86828701610f00565b9150509250925092565b600067ffffffffffffffff82169050919050565b610fa181610f84565b82525050565b6000602082019050610fbc6000830184610f98565b92915050565b6000819050919050565b6000610fe7610fe2610fdd84610bfd565b610fc2565b610bfd565b9050919050565b6000610ff982610fcc565b9050919050565b600061100b82610fee565b9050919050565b61101b81611000565b82525050565b60006020820190506110366000830184611012565b92915050565b61104581610f84565b811461105057600080fd5b50565b6000813590506110628161103c565b92915050565b60006020828403121561107e5761107d610bf3565b5b600061108c84828501611053565b91505092915050565b600080fd5b600080fd5b60008083601f8401126110b5576110b4610db4565b5b8235905067ffffffffffffffff8111156110d2576110d1611095565b5b6020830191508360018202830111156110ee576110ed61109a565b5b9250929050565b60008083601f84011261110b5761110a610db4565b5b8235905067ffffffffffffffff81111561112857611127611095565b5b6020830191508360208202830111156111445761114361109a565b5b9250929050565b60008060008060006060868803121561116757611166610bf3565b5b600061117588828901611053565b955050602086013567ffffffffffffffff81111561119657611195610bf8565b5b6111a28882890161109f565b9450945050604086013567ffffffffffffffff8111156111c5576111c4610bf8565b5b6111d1888289016110f5565b92509250509295509295909350565b60006020820190506111f56000830184610c94565b92915050565b600080fd5b600080fd5b6000815190506112148161103c565b92915050565b60008151905061122981610c2f565b92915050565b6004811061123c57600080fd5b50565b60008151905061124e8161122f565b92915050565b61125d81610c88565b811461126857600080fd5b50565b60008151905061127a81611254565b92915050565b600067ffffffffffffffff82111561129b5761129a610dbe565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156112c7576112c6610dbe565b5b6112d082610ce9565b9050602081019050919050565b60006112f06112eb846112ac565b610e1e565b90508281526020810184848401111561130c5761130b610db9565b5b611317848285610cbf565b509392505050565b600082601f83011261133457611333610db4565b5b81516113448482602086016112dd565b91505092915050565b600061136061135b84611280565b610e1e565b905080838252602082019050602084028301858111156113835761138261109a565b5b835b818110156113ca57805167ffffffffffffffff8111156113a8576113a7610db4565b5b8086016113b5898261131f565b85526020850194505050602081019050611385565b5050509392505050565b600082601f8301126113e9576113e8610db4565b5b81516113f984826020860161134d565b91505092915050565b60006101408284031215611419576114186111fb565b5b611424610140610e1e565b9050600061143484828501611205565b600083015250602061144884828501611205565b602083015250604061145c84828501611205565b604083015250606061147084828501611205565b60608301525060806114848482850161121a565b60808301525060a061149884828501611205565b60a08301525060c06114ac8482850161123f565b60c08301525060e06114c08482850161126b565b60e08301525061010082015167ffffffffffffffff8111156114e5576114e4611200565b5b6114f1848285016113d4565b6101008301525061012082015167ffffffffffffffff81111561151757611516611200565b5b6115238482850161131f565b6101208301525092915050565b60006020828403121561154657611545610bf3565b5b600082015167ffffffffffffffff81111561156457611563610bf8565b5b61157084828501611402565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006115b382610bfd565b9050919050565b6115c3816115a8565b81146115ce57600080fd5b50565b6000815190506115e0816115ba565b92915050565b6000602082840312156115fc576115fb610bf3565b5b600061160a848285016115d1565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061164d82610f84565b915067ffffffffffffffff820361166757611666611613565b5b600182019050919050565b600061168561168084610e39565b610e1e565b9050828152602081018484840111156116a1576116a0610db9565b5b6116ac848285610cbf565b509392505050565b600082601f8301126116c9576116c8610db4565b5b81516116d9848260208601611672565b91505092915050565b6000815190506116f181610ee9565b92915050565b6000806040838503121561170e5761170d610bf3565b5b600083015167ffffffffffffffff81111561172c5761172b610bf8565b5b611738858286016116b4565b9250506020611749858286016116e2565b9150509250929050565b7f43726564656e7469616c20736368656d61206e6f742073657400000000000000600082015250565b6000611789601983610cae565b915061179482611753565b602082019050919050565b600060208201905081810360008301526117b88161177c565b9050919050565b600060408201905081810360008301526117d98185610cfa565b90506117e86020830184610d3d565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b61182781610f84565b82525050565b61183681610c1d565b82525050565b6004811061184d5761184c6117ef565b5b50565b600081905061185e8261183c565b919050565b600061186e82611850565b9050919050565b61187e81611863565b82525050565b61188d81610c88565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60006118e6826118bf565b6118f081856118ca565b9350611900818560208601610cbf565b61190981610ce9565b840191505092915050565b600061192083836118db565b905092915050565b6000602082019050919050565b600061194082611893565b61194a818561189e565b93508360208202850161195c856118af565b8060005b8581101561199857848403895281516119798582611914565b945061198483611928565b925060208a01995050600181019050611960565b50829750879550505050505092915050565b6000610140830160008301516119c3600086018261181e565b5060208301516119d6602086018261181e565b5060408301516119e9604086018261181e565b5060608301516119fc606086018261181e565b506080830151611a0f608086018261182d565b5060a0830151611a2260a086018261181e565b5060c0830151611a3560c0860182611875565b5060e0830151611a4860e0860182611884565b50610100830151848203610100860152611a628282611935565b915050610120830151848203610120860152611a7e82826118db565b9150508091505092915050565b50565b6000611a9b600083610cae565b9150611aa682611a8b565b600082019050919050565b600082825260208201905092915050565b6000611acf600083611ab1565b9150611ada82611a8b565b600082019050919050565b60006080820190508181036000830152611aff81846119aa565b90508181036020830152611b1281611a8e565b90508181036040830152611b2581611ac2565b90508181036060830152611b3881611ac2565b905092915050565b600060208284031215611b5657611b55610bf3565b5b6000611b6484828501611205565b91505092915050565b7f496e76616c696420736368656d61204944000000000000000000000000000000600082015250565b6000611ba3601183610cae565b9150611bae82611b6d565b602082019050919050565b60006020820190508181036000830152611bd281611b96565b9050919050565b7f4f6e6c79206f6e6520726563697069656e7420616c6c6f776564000000000000600082015250565b6000611c0f601a83610cae565b9150611c1a82611bd9565b602082019050919050565b60006020820190508181036000830152611c3e81611c02565b9050919050565b60008060408385031215611c5c57611c5b610bf3565b5b600083013567ffffffffffffffff811115611c7a57611c79610bf8565b5b611c8685828601610ebb565b9250506020611c9785828601610f00565b9150509250929050565b7f436f75727365206e616d652063616e6e6f7420626520656d7074790000000000600082015250565b6000611cd7601b83610cae565b9150611ce282611ca1565b602082019050919050565b60006020820190508181036000830152611d0681611cca565b9050919050565b7f497373756520646174652063616e6e6f7420626520696e20746865206675747560008201527f7265000000000000000000000000000000000000000000000000000000000000602082015250565b6000611d69602283610cae565b9150611d7482611d0d565b604082019050919050565b60006020820190508181036000830152611d9881611d5c565b905091905056fea2646970667358221220e8d2125f97e29cb5b1359c4d5c4411eb111bb5f0973f40c655e849e64796b51364736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x22 PUSH3 0xAF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x97 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x8E SWAP2 SWAP1 PUSH3 0x1C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xA8 DUP2 PUSH3 0xB7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x1DD JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1A8 DUP3 PUSH3 0x17B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1BA DUP2 PUSH3 0x19B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1D7 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DD5 DUP1 PUSH3 0x1ED PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA8C5DC33 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA8C5DC33 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0xB4C4A054 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xE14E071B EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0xF84DD785 EQ PUSH2 0x1BD JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x70DD0DBC EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x8E9841D0 EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x8E9D660F EQ PUSH2 0x12D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0xC5B JUMP JUMPDEST PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDD PUSH2 0x4B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE7 PUSH2 0x4C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x117 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x112 SWAP2 SWAP1 PUSH2 0xF15 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xFA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x142 SWAP2 SWAP1 PUSH2 0xC5B JUMP JUMPDEST PUSH2 0x7F0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x151 PUSH2 0x83C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x1021 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16F PUSH2 0x862 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0xFA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x1068 JUMP JUMPDEST PUSH2 0x87C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0xC5B JUMP JUMPDEST PUSH2 0x8B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x114B JUMP JUMPDEST PUSH2 0x936 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x62252880 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0xFA7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x29C JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x3AB JUMPI PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x2E0 JUMPI POP DUP1 PUSH1 0xE0 ADD MLOAD ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2F2 JUMPI POP PUSH1 0x0 DUP2 PUSH2 0x100 ADD MLOAD MLOAD GT JUMPDEST ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP2 PUSH2 0x100 ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x312 JUMPI PUSH2 0x311 PUSH2 0x1579 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x377 JUMPI POP DUP4 DUP3 PUSH1 0x40 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND GT JUMPDEST ISZERO PUSH2 0x395 JUMPI PUSH1 0x1 SWAP6 POP DUP3 SWAP5 POP DUP2 PUSH1 0x40 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP4 POP JUMPDEST POP JUMPDEST POP DUP1 DUP1 PUSH2 0x3A3 SWAP1 PUSH2 0x1642 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x202 JUMP JUMPDEST POP DUP3 PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x62252880 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x430 SWAP2 SWAP1 PUSH2 0xFA7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x44D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x476 SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH2 0x120 ADD MLOAD DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x16F7 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x1 DUP3 DUP3 SWAP9 POP SWAP9 POP SWAP9 POP POP POP POP POP POP POP JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH2 0x4B8 PUSH2 0xA96 JUMP JUMPDEST PUSH2 0x4C2 PUSH1 0x0 PUSH2 0xB1D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SUB PUSH2 0x551 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x548 SWAP1 PUSH2 0x179F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x566 SWAP3 SWAP2 SWAP1 PUSH2 0x17BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x594 JUMPI PUSH2 0x593 PUSH2 0xDBE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5C7 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x5B2 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x5FE JUMPI PUSH2 0x5FD PUSH2 0x1579 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x678 PUSH2 0xBE1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6B8 JUMPI PUSH2 0x6B7 PUSH2 0x17EF JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB82916CB DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72F SWAP2 SWAP1 PUSH2 0x1AE5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x74E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x772 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST SWAP1 POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x793 PUSH2 0xBE1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3CDCE538B6DB111FCF97C8CDFC0F65DCD4C7EAEEA28ABF410F46AD76DAED828B DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0x7DA SWAP3 SWAP2 SWAP1 PUSH2 0x17BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 SWAP5 POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x7F8 PUSH2 0xA96 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x884 PUSH2 0xA96 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x8B8 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x92A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x921 SWAP2 SWAP1 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x933 DUP2 PUSH2 0xB1D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99B SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP4 DUP4 SWAP1 POP EQ PUSH2 0x9EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E1 SWAP1 PUSH2 0x1C25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 DUP7 DUP2 ADD SWAP1 PUSH2 0x9FC SWAP2 SWAP1 PUSH2 0x1C45 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP3 MLOAD GT PUSH2 0xA44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3B SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP2 GT ISZERO PUSH2 0xA87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7E SWAP1 PUSH2 0x1D7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA9E PUSH2 0xBE1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xABC PUSH2 0x4C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB1B JUMPI PUSH2 0xADF PUSH2 0xBE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB12 SWAP2 SWAP1 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC28 DUP3 PUSH2 0xBFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC38 DUP2 PUSH2 0xC1D JUMP JUMPDEST DUP2 EQ PUSH2 0xC43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC55 DUP2 PUSH2 0xC2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC71 JUMPI PUSH2 0xC70 PUSH2 0xBF3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC7F DUP5 DUP3 DUP6 ADD PUSH2 0xC46 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC9D DUP2 PUSH2 0xC88 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCDD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xCC2 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD05 DUP3 PUSH2 0xCA3 JUMP JUMPDEST PUSH2 0xD0F DUP2 DUP6 PUSH2 0xCAE JUMP JUMPDEST SWAP4 POP PUSH2 0xD1F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xCBF JUMP JUMPDEST PUSH2 0xD28 DUP2 PUSH2 0xCE9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD46 DUP2 PUSH2 0xD33 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD61 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xC94 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xD73 DUP2 DUP6 PUSH2 0xCFA JUMP JUMPDEST SWAP1 POP PUSH2 0xD82 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD3D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xD93 DUP2 PUSH2 0xC1D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDAE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xDF6 DUP3 PUSH2 0xCE9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xE15 JUMPI PUSH2 0xE14 PUSH2 0xDBE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE28 PUSH2 0xBE9 JUMP JUMPDEST SWAP1 POP PUSH2 0xE34 DUP3 DUP3 PUSH2 0xDED JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE54 JUMPI PUSH2 0xE53 PUSH2 0xDBE JUMP JUMPDEST JUMPDEST PUSH2 0xE5D DUP3 PUSH2 0xCE9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE8C PUSH2 0xE87 DUP5 PUSH2 0xE39 JUMP JUMPDEST PUSH2 0xE1E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xEA8 JUMPI PUSH2 0xEA7 PUSH2 0xDB9 JUMP JUMPDEST JUMPDEST PUSH2 0xEB3 DUP5 DUP3 DUP6 PUSH2 0xE6A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xED0 JUMPI PUSH2 0xECF PUSH2 0xDB4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xEE0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xE79 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEF2 DUP2 PUSH2 0xD33 JUMP JUMPDEST DUP2 EQ PUSH2 0xEFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF0F DUP2 PUSH2 0xEE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF2E JUMPI PUSH2 0xF2D PUSH2 0xBF3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF3C DUP7 DUP3 DUP8 ADD PUSH2 0xC46 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF5D JUMPI PUSH2 0xF5C PUSH2 0xBF8 JUMP JUMPDEST JUMPDEST PUSH2 0xF69 DUP7 DUP3 DUP8 ADD PUSH2 0xEBB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF7A DUP7 DUP3 DUP8 ADD PUSH2 0xF00 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFA1 DUP2 PUSH2 0xF84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFBC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE7 PUSH2 0xFE2 PUSH2 0xFDD DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0xFC2 JUMP JUMPDEST PUSH2 0xBFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF9 DUP3 PUSH2 0xFCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100B DUP3 PUSH2 0xFEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x101B DUP2 PUSH2 0x1000 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1036 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1012 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1045 DUP2 PUSH2 0xF84 JUMP JUMPDEST DUP2 EQ PUSH2 0x1050 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1062 DUP2 PUSH2 0x103C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x107E JUMPI PUSH2 0x107D PUSH2 0xBF3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x108C DUP5 DUP3 DUP6 ADD PUSH2 0x1053 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x10B5 JUMPI PUSH2 0x10B4 PUSH2 0xDB4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10D2 JUMPI PUSH2 0x10D1 PUSH2 0x1095 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x10EE JUMPI PUSH2 0x10ED PUSH2 0x109A JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x110B JUMPI PUSH2 0x110A PUSH2 0xDB4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1128 JUMPI PUSH2 0x1127 PUSH2 0x1095 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1144 JUMPI PUSH2 0x1143 PUSH2 0x109A JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1167 JUMPI PUSH2 0x1166 PUSH2 0xBF3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1175 DUP9 DUP3 DUP10 ADD PUSH2 0x1053 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1196 JUMPI PUSH2 0x1195 PUSH2 0xBF8 JUMP JUMPDEST JUMPDEST PUSH2 0x11A2 DUP9 DUP3 DUP10 ADD PUSH2 0x109F JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11C5 JUMPI PUSH2 0x11C4 PUSH2 0xBF8 JUMP JUMPDEST JUMPDEST PUSH2 0x11D1 DUP9 DUP3 DUP10 ADD PUSH2 0x10F5 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11F5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC94 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1214 DUP2 PUSH2 0x103C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1229 DUP2 PUSH2 0xC2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x123C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x124E DUP2 PUSH2 0x122F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x125D DUP2 PUSH2 0xC88 JUMP JUMPDEST DUP2 EQ PUSH2 0x1268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x127A DUP2 PUSH2 0x1254 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x129B JUMPI PUSH2 0x129A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x12C7 JUMPI PUSH2 0x12C6 PUSH2 0xDBE JUMP JUMPDEST JUMPDEST PUSH2 0x12D0 DUP3 PUSH2 0xCE9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12F0 PUSH2 0x12EB DUP5 PUSH2 0x12AC JUMP JUMPDEST PUSH2 0xE1E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x130C JUMPI PUSH2 0x130B PUSH2 0xDB9 JUMP JUMPDEST JUMPDEST PUSH2 0x1317 DUP5 DUP3 DUP6 PUSH2 0xCBF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1334 JUMPI PUSH2 0x1333 PUSH2 0xDB4 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1344 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x12DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1360 PUSH2 0x135B DUP5 PUSH2 0x1280 JUMP JUMPDEST PUSH2 0xE1E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1383 JUMPI PUSH2 0x1382 PUSH2 0x109A JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13CA JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13A8 JUMPI PUSH2 0x13A7 PUSH2 0xDB4 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x13B5 DUP10 DUP3 PUSH2 0x131F JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1385 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x13E9 JUMPI PUSH2 0x13E8 PUSH2 0xDB4 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x13F9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x134D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1419 JUMPI PUSH2 0x1418 PUSH2 0x11FB JUMP JUMPDEST JUMPDEST PUSH2 0x1424 PUSH2 0x140 PUSH2 0xE1E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1434 DUP5 DUP3 DUP6 ADD PUSH2 0x1205 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1448 DUP5 DUP3 DUP6 ADD PUSH2 0x1205 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x145C DUP5 DUP3 DUP6 ADD PUSH2 0x1205 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x1470 DUP5 DUP3 DUP6 ADD PUSH2 0x1205 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x1484 DUP5 DUP3 DUP6 ADD PUSH2 0x121A JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x1498 DUP5 DUP3 DUP6 ADD PUSH2 0x1205 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x14AC DUP5 DUP3 DUP6 ADD PUSH2 0x123F JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x14C0 DUP5 DUP3 DUP6 ADD PUSH2 0x126B JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14E5 JUMPI PUSH2 0x14E4 PUSH2 0x1200 JUMP JUMPDEST JUMPDEST PUSH2 0x14F1 DUP5 DUP3 DUP6 ADD PUSH2 0x13D4 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP PUSH2 0x120 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1517 JUMPI PUSH2 0x1516 PUSH2 0x1200 JUMP JUMPDEST JUMPDEST PUSH2 0x1523 DUP5 DUP3 DUP6 ADD PUSH2 0x131F JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1546 JUMPI PUSH2 0x1545 PUSH2 0xBF3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1564 JUMPI PUSH2 0x1563 PUSH2 0xBF8 JUMP JUMPDEST JUMPDEST PUSH2 0x1570 DUP5 DUP3 DUP6 ADD PUSH2 0x1402 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15B3 DUP3 PUSH2 0xBFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15C3 DUP2 PUSH2 0x15A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x15CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x15E0 DUP2 PUSH2 0x15BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15FC JUMPI PUSH2 0x15FB PUSH2 0xBF3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x160A DUP5 DUP3 DUP6 ADD PUSH2 0x15D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x164D DUP3 PUSH2 0xF84 JUMP JUMPDEST SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1667 JUMPI PUSH2 0x1666 PUSH2 0x1613 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1685 PUSH2 0x1680 DUP5 PUSH2 0xE39 JUMP JUMPDEST PUSH2 0xE1E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x16A1 JUMPI PUSH2 0x16A0 PUSH2 0xDB9 JUMP JUMPDEST JUMPDEST PUSH2 0x16AC DUP5 DUP3 DUP6 PUSH2 0xCBF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16C9 JUMPI PUSH2 0x16C8 PUSH2 0xDB4 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x16D9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1672 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x16F1 DUP2 PUSH2 0xEE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x170E JUMPI PUSH2 0x170D PUSH2 0xBF3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x172C JUMPI PUSH2 0x172B PUSH2 0xBF8 JUMP JUMPDEST JUMPDEST PUSH2 0x1738 DUP6 DUP3 DUP7 ADD PUSH2 0x16B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1749 DUP6 DUP3 DUP7 ADD PUSH2 0x16E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726564656E7469616C20736368656D61206E6F742073657400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1789 PUSH1 0x19 DUP4 PUSH2 0xCAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1794 DUP3 PUSH2 0x1753 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17B8 DUP2 PUSH2 0x177C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17D9 DUP2 DUP6 PUSH2 0xCFA JUMP JUMPDEST SWAP1 POP PUSH2 0x17E8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD3D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1827 DUP2 PUSH2 0xF84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1836 DUP2 PUSH2 0xC1D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x184D JUMPI PUSH2 0x184C PUSH2 0x17EF JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x185E DUP3 PUSH2 0x183C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x186E DUP3 PUSH2 0x1850 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x187E DUP2 PUSH2 0x1863 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x188D DUP2 PUSH2 0xC88 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E6 DUP3 PUSH2 0x18BF JUMP JUMPDEST PUSH2 0x18F0 DUP2 DUP6 PUSH2 0x18CA JUMP JUMPDEST SWAP4 POP PUSH2 0x1900 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xCBF JUMP JUMPDEST PUSH2 0x1909 DUP2 PUSH2 0xCE9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1920 DUP4 DUP4 PUSH2 0x18DB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1940 DUP3 PUSH2 0x1893 JUMP JUMPDEST PUSH2 0x194A DUP2 DUP6 PUSH2 0x189E JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x195C DUP6 PUSH2 0x18AF JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1998 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x1979 DUP6 DUP3 PUSH2 0x1914 JUMP JUMPDEST SWAP5 POP PUSH2 0x1984 DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1960 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x19C3 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x181E JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x19D6 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x181E JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x19E9 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x181E JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x19FC PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x181E JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x1A0F PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x182D JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x1A22 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x181E JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x1A35 PUSH1 0xC0 DUP7 ADD DUP3 PUSH2 0x1875 JUMP JUMPDEST POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x1A48 PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0x1884 JUMP JUMPDEST POP PUSH2 0x100 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x1A62 DUP3 DUP3 PUSH2 0x1935 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x120 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x1A7E DUP3 DUP3 PUSH2 0x18DB JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A9B PUSH1 0x0 DUP4 PUSH2 0xCAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA6 DUP3 PUSH2 0x1A8B JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ACF PUSH1 0x0 DUP4 PUSH2 0x1AB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ADA DUP3 PUSH2 0x1A8B JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AFF DUP2 DUP5 PUSH2 0x19AA JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1B12 DUP2 PUSH2 0x1A8E JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1B25 DUP2 PUSH2 0x1AC2 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1B38 DUP2 PUSH2 0x1AC2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B56 JUMPI PUSH2 0x1B55 PUSH2 0xBF3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B64 DUP5 DUP3 DUP6 ADD PUSH2 0x1205 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420736368656D61204944000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA3 PUSH1 0x11 DUP4 PUSH2 0xCAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1BAE DUP3 PUSH2 0x1B6D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BD2 DUP2 PUSH2 0x1B96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F6E6520726563697069656E7420616C6C6F776564000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0F PUSH1 0x1A DUP4 PUSH2 0xCAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1C1A DUP3 PUSH2 0x1BD9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C3E DUP2 PUSH2 0x1C02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C5C JUMPI PUSH2 0x1C5B PUSH2 0xBF3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C7A JUMPI PUSH2 0x1C79 PUSH2 0xBF8 JUMP JUMPDEST JUMPDEST PUSH2 0x1C86 DUP6 DUP3 DUP7 ADD PUSH2 0xEBB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C97 DUP6 DUP3 DUP7 ADD PUSH2 0xF00 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F75727365206E616D652063616E6E6F7420626520656D7074790000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD7 PUSH1 0x1B DUP4 PUSH2 0xCAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE2 DUP3 PUSH2 0x1CA1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D06 DUP2 PUSH2 0x1CCA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x497373756520646174652063616E6E6F7420626520696E207468652066757475 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D69 PUSH1 0x22 DUP4 PUSH2 0xCAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1D74 DUP3 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D98 DUP2 PUSH2 0x1D5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 0xD2 SLT PUSH0 SWAP8 0xE2 SWAP13 0xB5 0xB1 CALLDATALOAD SWAP13 0x4D TLOAD PREVRANDAO GT 0xEB GT SHL 0xB5 CREATE SWAP8 EXTCODEHASH BLOCKHASH 0xC6 SSTORE 0xE8 BLOBHASH 0xE6 SELFBALANCE SWAP7 0xB5 SGT PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"374:3941:9:-:0;;;607:38;;;;;;;;;;629:12;:10;;;:12;;:::i;:::-;1297:1:6;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;374:3941:9;;656:96:8;709:7;735:10;728:17;;656:96;:::o;2912:187:6:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:10:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;374:3941:9:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_715":{"entryPoint":2710,"id":715,"parameterSlots":0,"returnSlots":0},"@_msgSender_868":{"entryPoint":3041,"id":868,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_777":{"entryPoint":2845,"id":777,"parameterSlots":1,"returnSlots":0},"@credentialSchemaId_903":{"entryPoint":2146,"id":903,"parameterSlots":0,"returnSlots":0},"@issueCredential_1032":{"entryPoint":1261,"id":1032,"parameterSlots":3,"returnSlots":1},"@owner_698":{"entryPoint":1220,"id":698,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_729":{"entryPoint":1200,"id":729,"parameterSlots":0,"returnSlots":0},"@schemaHook_1231":{"entryPoint":2358,"id":1231,"parameterSlots":5,"returnSlots":1},"@setCredentialSchemaID_947":{"entryPoint":2172,"id":947,"parameterSlots":1,"returnSlots":0},"@setSPInstance_935":{"entryPoint":2032,"id":935,"parameterSlots":1,"returnSlots":0},"@spInstance_901":{"entryPoint":2108,"id":901,"parameterSlots":0,"returnSlots":0},"@transferOwnership_757":{"entryPoint":2224,"id":757,"parameterSlots":1,"returnSlots":0},"@verifyCredential_1168":{"entryPoint":493,"id":1168,"parameterSlots":1,"returnSlots":3},"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":4941,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr_fromMemory":{"entryPoint":4829,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":3705,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":5746,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3142,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":4634,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable_fromMemory":{"entryPoint":5585,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":4341,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":5076,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":4715,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":4255,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes_memory_ptr_fromMemory":{"entryPoint":4895,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_enum$_DataLocation_$606_fromMemory":{"entryPoint":4671,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":3771,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":5812,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_Attestation_$592_memory_ptr_fromMemory":{"entryPoint":5122,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3840,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":5858,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64":{"entryPoint":4179,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64_fromMemory":{"entryPoint":4613,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3163,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable_fromMemory":{"entryPoint":5606,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_string_memory_ptrt_uint256":{"entryPoint":3861,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_string_memory_ptrt_uint256":{"entryPoint":7237,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptrt_uint256_fromMemory":{"entryPoint":5879,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_struct$_Attestation_$592_memory_ptr_fromMemory":{"entryPoint":5424,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint64":{"entryPoint":4200,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint64_fromMemory":{"entryPoint":6976,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint64t_bytes_calldata_ptrt_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":4427,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr":{"entryPoint":6420,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":6189,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3466,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":6453,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool":{"entryPoint":6276,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3220,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr":{"entryPoint":6363,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_ISP_$495_to_t_address_fromStack":{"entryPoint":4114,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_DataLocation_$606_to_t_uint8":{"entryPoint":6261,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3322,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_3f7f8a0302ff255928d1a72eedf8fbacb95deed18c475d5a03e0d82ca55cffbb_to_t_string_memory_ptr_fromStack":{"entryPoint":7062,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97_to_t_string_memory_ptr_fromStack":{"entryPoint":7516,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_51c209187ee368fc1e4dbf500f07ad2d83fbbce262a3a955007d41b55a072cd7_to_t_string_memory_ptr_fromStack":{"entryPoint":6012,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988_to_t_string_memory_ptr_fromStack":{"entryPoint":7370,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8f7ab3f7e792b273608ffaf89527bcbb9272ea245b3f5800d21a92a6aefb7013_to_t_string_memory_ptr_fromStack":{"entryPoint":7170,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack":{"entryPoint":6850,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_string_memory_ptr_fromStack":{"entryPoint":6798,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Attestation_$592_memory_ptr_to_t_struct$_Attestation_$592_memory_ptr_fromStack":{"entryPoint":6570,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3389,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64":{"entryPoint":6174,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":3992,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3481,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":4576,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool_t_string_memory_ptr_t_uint256__to_t_bool_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":3404,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_contract$_ISP_$495__to_t_address__fromStack_reversed":{"entryPoint":4129,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":6079,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3f7f8a0302ff255928d1a72eedf8fbacb95deed18c475d5a03e0d82ca55cffbb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7097,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7551,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_51c209187ee368fc1e4dbf500f07ad2d83fbbce262a3a955007d41b55a072cd7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6047,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7405,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8f7ab3f7e792b273608ffaf89527bcbb9272ea245b3f5800d21a92a6aefb7013__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7205,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Attestation_$592_memory_ptr_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_struct$_Attestation_$592_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":6885,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":4007,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":3614,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":3049,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":4736,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":4780,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":3641,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":6319,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":6291,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":6335,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3235,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":6440,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":6302,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr":{"entryPoint":6346,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":6833,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3246,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3101,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":5544,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3208,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_DataLocation_$606":{"entryPoint":6224,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3069,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3379,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":3972,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_ISP_$495_to_t_address":{"entryPoint":4096,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_DataLocation_$606_to_t_uint8":{"entryPoint":6243,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":4078,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":4044,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":3690,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":3263,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":3565,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":4034,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint64":{"entryPoint":5698,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5651,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":6127,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5497,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3518,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":4245,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":3508,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":4603,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":4608,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":4250,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":3513,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":3064,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3059,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3305,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_3f7f8a0302ff255928d1a72eedf8fbacb95deed18c475d5a03e0d82ca55cffbb":{"entryPoint":7021,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97":{"entryPoint":7437,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_51c209187ee368fc1e4dbf500f07ad2d83fbbce262a3a955007d41b55a072cd7":{"entryPoint":5971,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988":{"entryPoint":7329,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8f7ab3f7e792b273608ffaf89527bcbb9272ea245b3f5800d21a92a6aefb7013":{"entryPoint":7129,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":6795,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_DataLocation_$606":{"entryPoint":6204,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3119,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":5562,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":4692,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_enum$_DataLocation_$606":{"entryPoint":4655,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3817,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":4156,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:35802:10","nodeType":"YulBlock","src":"0:35802:10","statements":[{"body":{"nativeSrc":"47:35:10","nodeType":"YulBlock","src":"47:35:10","statements":[{"nativeSrc":"57:19:10","nodeType":"YulAssignment","src":"57:19:10","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:10","nodeType":"YulLiteral","src":"73:2:10","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:10","nodeType":"YulIdentifier","src":"67:5:10"},"nativeSrc":"67:9:10","nodeType":"YulFunctionCall","src":"67:9:10"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:10","nodeType":"YulIdentifier","src":"57:6:10"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:10","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:10","nodeType":"YulTypedName","src":"40:6:10","type":""}],"src":"7:75:10"},{"body":{"nativeSrc":"177:28:10","nodeType":"YulBlock","src":"177:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:10","nodeType":"YulLiteral","src":"194:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:10","nodeType":"YulLiteral","src":"197:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:10","nodeType":"YulIdentifier","src":"187:6:10"},"nativeSrc":"187:12:10","nodeType":"YulFunctionCall","src":"187:12:10"},"nativeSrc":"187:12:10","nodeType":"YulExpressionStatement","src":"187:12:10"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:10","nodeType":"YulFunctionDefinition","src":"88:117:10"},{"body":{"nativeSrc":"300:28:10","nodeType":"YulBlock","src":"300:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:10","nodeType":"YulLiteral","src":"317:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:10","nodeType":"YulLiteral","src":"320:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:10","nodeType":"YulIdentifier","src":"310:6:10"},"nativeSrc":"310:12:10","nodeType":"YulFunctionCall","src":"310:12:10"},"nativeSrc":"310:12:10","nodeType":"YulExpressionStatement","src":"310:12:10"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:10","nodeType":"YulFunctionDefinition","src":"211:117:10"},{"body":{"nativeSrc":"379:81:10","nodeType":"YulBlock","src":"379:81:10","statements":[{"nativeSrc":"389:65:10","nodeType":"YulAssignment","src":"389:65:10","value":{"arguments":[{"name":"value","nativeSrc":"404:5:10","nodeType":"YulIdentifier","src":"404:5:10"},{"kind":"number","nativeSrc":"411:42:10","nodeType":"YulLiteral","src":"411:42:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:10","nodeType":"YulIdentifier","src":"400:3:10"},"nativeSrc":"400:54:10","nodeType":"YulFunctionCall","src":"400:54:10"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:10","nodeType":"YulIdentifier","src":"389:7:10"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:10","nodeType":"YulTypedName","src":"361:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:10","nodeType":"YulTypedName","src":"371:7:10","type":""}],"src":"334:126:10"},{"body":{"nativeSrc":"511:51:10","nodeType":"YulBlock","src":"511:51:10","statements":[{"nativeSrc":"521:35:10","nodeType":"YulAssignment","src":"521:35:10","value":{"arguments":[{"name":"value","nativeSrc":"550:5:10","nodeType":"YulIdentifier","src":"550:5:10"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:10","nodeType":"YulIdentifier","src":"532:17:10"},"nativeSrc":"532:24:10","nodeType":"YulFunctionCall","src":"532:24:10"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:10","nodeType":"YulIdentifier","src":"521:7:10"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:10","nodeType":"YulTypedName","src":"493:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:10","nodeType":"YulTypedName","src":"503:7:10","type":""}],"src":"466:96:10"},{"body":{"nativeSrc":"611:79:10","nodeType":"YulBlock","src":"611:79:10","statements":[{"body":{"nativeSrc":"668:16:10","nodeType":"YulBlock","src":"668:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:10","nodeType":"YulLiteral","src":"677:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:10","nodeType":"YulLiteral","src":"680:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:10","nodeType":"YulIdentifier","src":"670:6:10"},"nativeSrc":"670:12:10","nodeType":"YulFunctionCall","src":"670:12:10"},"nativeSrc":"670:12:10","nodeType":"YulExpressionStatement","src":"670:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:10","nodeType":"YulIdentifier","src":"634:5:10"},{"arguments":[{"name":"value","nativeSrc":"659:5:10","nodeType":"YulIdentifier","src":"659:5:10"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:10","nodeType":"YulIdentifier","src":"641:17:10"},"nativeSrc":"641:24:10","nodeType":"YulFunctionCall","src":"641:24:10"}],"functionName":{"name":"eq","nativeSrc":"631:2:10","nodeType":"YulIdentifier","src":"631:2:10"},"nativeSrc":"631:35:10","nodeType":"YulFunctionCall","src":"631:35:10"}],"functionName":{"name":"iszero","nativeSrc":"624:6:10","nodeType":"YulIdentifier","src":"624:6:10"},"nativeSrc":"624:43:10","nodeType":"YulFunctionCall","src":"624:43:10"},"nativeSrc":"621:63:10","nodeType":"YulIf","src":"621:63:10"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:10","nodeType":"YulTypedName","src":"604:5:10","type":""}],"src":"568:122:10"},{"body":{"nativeSrc":"748:87:10","nodeType":"YulBlock","src":"748:87:10","statements":[{"nativeSrc":"758:29:10","nodeType":"YulAssignment","src":"758:29:10","value":{"arguments":[{"name":"offset","nativeSrc":"780:6:10","nodeType":"YulIdentifier","src":"780:6:10"}],"functionName":{"name":"calldataload","nativeSrc":"767:12:10","nodeType":"YulIdentifier","src":"767:12:10"},"nativeSrc":"767:20:10","nodeType":"YulFunctionCall","src":"767:20:10"},"variableNames":[{"name":"value","nativeSrc":"758:5:10","nodeType":"YulIdentifier","src":"758:5:10"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"823:5:10","nodeType":"YulIdentifier","src":"823:5:10"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"796:26:10","nodeType":"YulIdentifier","src":"796:26:10"},"nativeSrc":"796:33:10","nodeType":"YulFunctionCall","src":"796:33:10"},"nativeSrc":"796:33:10","nodeType":"YulExpressionStatement","src":"796:33:10"}]},"name":"abi_decode_t_address","nativeSrc":"696:139:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"726:6:10","nodeType":"YulTypedName","src":"726:6:10","type":""},{"name":"end","nativeSrc":"734:3:10","nodeType":"YulTypedName","src":"734:3:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"742:5:10","nodeType":"YulTypedName","src":"742:5:10","type":""}],"src":"696:139:10"},{"body":{"nativeSrc":"907:263:10","nodeType":"YulBlock","src":"907:263:10","statements":[{"body":{"nativeSrc":"953:83:10","nodeType":"YulBlock","src":"953:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"955:77:10","nodeType":"YulIdentifier","src":"955:77:10"},"nativeSrc":"955:79:10","nodeType":"YulFunctionCall","src":"955:79:10"},"nativeSrc":"955:79:10","nodeType":"YulExpressionStatement","src":"955:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"928:7:10","nodeType":"YulIdentifier","src":"928:7:10"},{"name":"headStart","nativeSrc":"937:9:10","nodeType":"YulIdentifier","src":"937:9:10"}],"functionName":{"name":"sub","nativeSrc":"924:3:10","nodeType":"YulIdentifier","src":"924:3:10"},"nativeSrc":"924:23:10","nodeType":"YulFunctionCall","src":"924:23:10"},{"kind":"number","nativeSrc":"949:2:10","nodeType":"YulLiteral","src":"949:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"920:3:10","nodeType":"YulIdentifier","src":"920:3:10"},"nativeSrc":"920:32:10","nodeType":"YulFunctionCall","src":"920:32:10"},"nativeSrc":"917:119:10","nodeType":"YulIf","src":"917:119:10"},{"nativeSrc":"1046:117:10","nodeType":"YulBlock","src":"1046:117:10","statements":[{"nativeSrc":"1061:15:10","nodeType":"YulVariableDeclaration","src":"1061:15:10","value":{"kind":"number","nativeSrc":"1075:1:10","nodeType":"YulLiteral","src":"1075:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1065:6:10","nodeType":"YulTypedName","src":"1065:6:10","type":""}]},{"nativeSrc":"1090:63:10","nodeType":"YulAssignment","src":"1090:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1125:9:10","nodeType":"YulIdentifier","src":"1125:9:10"},{"name":"offset","nativeSrc":"1136:6:10","nodeType":"YulIdentifier","src":"1136:6:10"}],"functionName":{"name":"add","nativeSrc":"1121:3:10","nodeType":"YulIdentifier","src":"1121:3:10"},"nativeSrc":"1121:22:10","nodeType":"YulFunctionCall","src":"1121:22:10"},{"name":"dataEnd","nativeSrc":"1145:7:10","nodeType":"YulIdentifier","src":"1145:7:10"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1100:20:10","nodeType":"YulIdentifier","src":"1100:20:10"},"nativeSrc":"1100:53:10","nodeType":"YulFunctionCall","src":"1100:53:10"},"variableNames":[{"name":"value0","nativeSrc":"1090:6:10","nodeType":"YulIdentifier","src":"1090:6:10"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"841:329:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"877:9:10","nodeType":"YulTypedName","src":"877:9:10","type":""},{"name":"dataEnd","nativeSrc":"888:7:10","nodeType":"YulTypedName","src":"888:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"900:6:10","nodeType":"YulTypedName","src":"900:6:10","type":""}],"src":"841:329:10"},{"body":{"nativeSrc":"1218:48:10","nodeType":"YulBlock","src":"1218:48:10","statements":[{"nativeSrc":"1228:32:10","nodeType":"YulAssignment","src":"1228:32:10","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1253:5:10","nodeType":"YulIdentifier","src":"1253:5:10"}],"functionName":{"name":"iszero","nativeSrc":"1246:6:10","nodeType":"YulIdentifier","src":"1246:6:10"},"nativeSrc":"1246:13:10","nodeType":"YulFunctionCall","src":"1246:13:10"}],"functionName":{"name":"iszero","nativeSrc":"1239:6:10","nodeType":"YulIdentifier","src":"1239:6:10"},"nativeSrc":"1239:21:10","nodeType":"YulFunctionCall","src":"1239:21:10"},"variableNames":[{"name":"cleaned","nativeSrc":"1228:7:10","nodeType":"YulIdentifier","src":"1228:7:10"}]}]},"name":"cleanup_t_bool","nativeSrc":"1176:90:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1200:5:10","nodeType":"YulTypedName","src":"1200:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1210:7:10","nodeType":"YulTypedName","src":"1210:7:10","type":""}],"src":"1176:90:10"},{"body":{"nativeSrc":"1331:50:10","nodeType":"YulBlock","src":"1331:50:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1348:3:10","nodeType":"YulIdentifier","src":"1348:3:10"},{"arguments":[{"name":"value","nativeSrc":"1368:5:10","nodeType":"YulIdentifier","src":"1368:5:10"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1353:14:10","nodeType":"YulIdentifier","src":"1353:14:10"},"nativeSrc":"1353:21:10","nodeType":"YulFunctionCall","src":"1353:21:10"}],"functionName":{"name":"mstore","nativeSrc":"1341:6:10","nodeType":"YulIdentifier","src":"1341:6:10"},"nativeSrc":"1341:34:10","nodeType":"YulFunctionCall","src":"1341:34:10"},"nativeSrc":"1341:34:10","nodeType":"YulExpressionStatement","src":"1341:34:10"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1272:109:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1319:5:10","nodeType":"YulTypedName","src":"1319:5:10","type":""},{"name":"pos","nativeSrc":"1326:3:10","nodeType":"YulTypedName","src":"1326:3:10","type":""}],"src":"1272:109:10"},{"body":{"nativeSrc":"1446:40:10","nodeType":"YulBlock","src":"1446:40:10","statements":[{"nativeSrc":"1457:22:10","nodeType":"YulAssignment","src":"1457:22:10","value":{"arguments":[{"name":"value","nativeSrc":"1473:5:10","nodeType":"YulIdentifier","src":"1473:5:10"}],"functionName":{"name":"mload","nativeSrc":"1467:5:10","nodeType":"YulIdentifier","src":"1467:5:10"},"nativeSrc":"1467:12:10","nodeType":"YulFunctionCall","src":"1467:12:10"},"variableNames":[{"name":"length","nativeSrc":"1457:6:10","nodeType":"YulIdentifier","src":"1457:6:10"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1387:99:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1429:5:10","nodeType":"YulTypedName","src":"1429:5:10","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1439:6:10","nodeType":"YulTypedName","src":"1439:6:10","type":""}],"src":"1387:99:10"},{"body":{"nativeSrc":"1588:73:10","nodeType":"YulBlock","src":"1588:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1605:3:10","nodeType":"YulIdentifier","src":"1605:3:10"},{"name":"length","nativeSrc":"1610:6:10","nodeType":"YulIdentifier","src":"1610:6:10"}],"functionName":{"name":"mstore","nativeSrc":"1598:6:10","nodeType":"YulIdentifier","src":"1598:6:10"},"nativeSrc":"1598:19:10","nodeType":"YulFunctionCall","src":"1598:19:10"},"nativeSrc":"1598:19:10","nodeType":"YulExpressionStatement","src":"1598:19:10"},{"nativeSrc":"1626:29:10","nodeType":"YulAssignment","src":"1626:29:10","value":{"arguments":[{"name":"pos","nativeSrc":"1645:3:10","nodeType":"YulIdentifier","src":"1645:3:10"},{"kind":"number","nativeSrc":"1650:4:10","nodeType":"YulLiteral","src":"1650:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1641:3:10","nodeType":"YulIdentifier","src":"1641:3:10"},"nativeSrc":"1641:14:10","nodeType":"YulFunctionCall","src":"1641:14:10"},"variableNames":[{"name":"updated_pos","nativeSrc":"1626:11:10","nodeType":"YulIdentifier","src":"1626:11:10"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1492:169:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1560:3:10","nodeType":"YulTypedName","src":"1560:3:10","type":""},{"name":"length","nativeSrc":"1565:6:10","nodeType":"YulTypedName","src":"1565:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1576:11:10","nodeType":"YulTypedName","src":"1576:11:10","type":""}],"src":"1492:169:10"},{"body":{"nativeSrc":"1729:184:10","nodeType":"YulBlock","src":"1729:184:10","statements":[{"nativeSrc":"1739:10:10","nodeType":"YulVariableDeclaration","src":"1739:10:10","value":{"kind":"number","nativeSrc":"1748:1:10","nodeType":"YulLiteral","src":"1748:1:10","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1743:1:10","nodeType":"YulTypedName","src":"1743:1:10","type":""}]},{"body":{"nativeSrc":"1808:63:10","nodeType":"YulBlock","src":"1808:63:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1833:3:10","nodeType":"YulIdentifier","src":"1833:3:10"},{"name":"i","nativeSrc":"1838:1:10","nodeType":"YulIdentifier","src":"1838:1:10"}],"functionName":{"name":"add","nativeSrc":"1829:3:10","nodeType":"YulIdentifier","src":"1829:3:10"},"nativeSrc":"1829:11:10","nodeType":"YulFunctionCall","src":"1829:11:10"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1852:3:10","nodeType":"YulIdentifier","src":"1852:3:10"},{"name":"i","nativeSrc":"1857:1:10","nodeType":"YulIdentifier","src":"1857:1:10"}],"functionName":{"name":"add","nativeSrc":"1848:3:10","nodeType":"YulIdentifier","src":"1848:3:10"},"nativeSrc":"1848:11:10","nodeType":"YulFunctionCall","src":"1848:11:10"}],"functionName":{"name":"mload","nativeSrc":"1842:5:10","nodeType":"YulIdentifier","src":"1842:5:10"},"nativeSrc":"1842:18:10","nodeType":"YulFunctionCall","src":"1842:18:10"}],"functionName":{"name":"mstore","nativeSrc":"1822:6:10","nodeType":"YulIdentifier","src":"1822:6:10"},"nativeSrc":"1822:39:10","nodeType":"YulFunctionCall","src":"1822:39:10"},"nativeSrc":"1822:39:10","nodeType":"YulExpressionStatement","src":"1822:39:10"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1769:1:10","nodeType":"YulIdentifier","src":"1769:1:10"},{"name":"length","nativeSrc":"1772:6:10","nodeType":"YulIdentifier","src":"1772:6:10"}],"functionName":{"name":"lt","nativeSrc":"1766:2:10","nodeType":"YulIdentifier","src":"1766:2:10"},"nativeSrc":"1766:13:10","nodeType":"YulFunctionCall","src":"1766:13:10"},"nativeSrc":"1758:113:10","nodeType":"YulForLoop","post":{"nativeSrc":"1780:19:10","nodeType":"YulBlock","src":"1780:19:10","statements":[{"nativeSrc":"1782:15:10","nodeType":"YulAssignment","src":"1782:15:10","value":{"arguments":[{"name":"i","nativeSrc":"1791:1:10","nodeType":"YulIdentifier","src":"1791:1:10"},{"kind":"number","nativeSrc":"1794:2:10","nodeType":"YulLiteral","src":"1794:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1787:3:10","nodeType":"YulIdentifier","src":"1787:3:10"},"nativeSrc":"1787:10:10","nodeType":"YulFunctionCall","src":"1787:10:10"},"variableNames":[{"name":"i","nativeSrc":"1782:1:10","nodeType":"YulIdentifier","src":"1782:1:10"}]}]},"pre":{"nativeSrc":"1762:3:10","nodeType":"YulBlock","src":"1762:3:10","statements":[]},"src":"1758:113:10"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1891:3:10","nodeType":"YulIdentifier","src":"1891:3:10"},{"name":"length","nativeSrc":"1896:6:10","nodeType":"YulIdentifier","src":"1896:6:10"}],"functionName":{"name":"add","nativeSrc":"1887:3:10","nodeType":"YulIdentifier","src":"1887:3:10"},"nativeSrc":"1887:16:10","nodeType":"YulFunctionCall","src":"1887:16:10"},{"kind":"number","nativeSrc":"1905:1:10","nodeType":"YulLiteral","src":"1905:1:10","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"1880:6:10","nodeType":"YulIdentifier","src":"1880:6:10"},"nativeSrc":"1880:27:10","nodeType":"YulFunctionCall","src":"1880:27:10"},"nativeSrc":"1880:27:10","nodeType":"YulExpressionStatement","src":"1880:27:10"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1667:246:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1711:3:10","nodeType":"YulTypedName","src":"1711:3:10","type":""},{"name":"dst","nativeSrc":"1716:3:10","nodeType":"YulTypedName","src":"1716:3:10","type":""},{"name":"length","nativeSrc":"1721:6:10","nodeType":"YulTypedName","src":"1721:6:10","type":""}],"src":"1667:246:10"},{"body":{"nativeSrc":"1967:54:10","nodeType":"YulBlock","src":"1967:54:10","statements":[{"nativeSrc":"1977:38:10","nodeType":"YulAssignment","src":"1977:38:10","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1995:5:10","nodeType":"YulIdentifier","src":"1995:5:10"},{"kind":"number","nativeSrc":"2002:2:10","nodeType":"YulLiteral","src":"2002:2:10","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1991:3:10","nodeType":"YulIdentifier","src":"1991:3:10"},"nativeSrc":"1991:14:10","nodeType":"YulFunctionCall","src":"1991:14:10"},{"arguments":[{"kind":"number","nativeSrc":"2011:2:10","nodeType":"YulLiteral","src":"2011:2:10","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2007:3:10","nodeType":"YulIdentifier","src":"2007:3:10"},"nativeSrc":"2007:7:10","nodeType":"YulFunctionCall","src":"2007:7:10"}],"functionName":{"name":"and","nativeSrc":"1987:3:10","nodeType":"YulIdentifier","src":"1987:3:10"},"nativeSrc":"1987:28:10","nodeType":"YulFunctionCall","src":"1987:28:10"},"variableNames":[{"name":"result","nativeSrc":"1977:6:10","nodeType":"YulIdentifier","src":"1977:6:10"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"1919:102:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1950:5:10","nodeType":"YulTypedName","src":"1950:5:10","type":""}],"returnVariables":[{"name":"result","nativeSrc":"1960:6:10","nodeType":"YulTypedName","src":"1960:6:10","type":""}],"src":"1919:102:10"},{"body":{"nativeSrc":"2119:285:10","nodeType":"YulBlock","src":"2119:285:10","statements":[{"nativeSrc":"2129:53:10","nodeType":"YulVariableDeclaration","src":"2129:53:10","value":{"arguments":[{"name":"value","nativeSrc":"2176:5:10","nodeType":"YulIdentifier","src":"2176:5:10"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"2143:32:10","nodeType":"YulIdentifier","src":"2143:32:10"},"nativeSrc":"2143:39:10","nodeType":"YulFunctionCall","src":"2143:39:10"},"variables":[{"name":"length","nativeSrc":"2133:6:10","nodeType":"YulTypedName","src":"2133:6:10","type":""}]},{"nativeSrc":"2191:78:10","nodeType":"YulAssignment","src":"2191:78:10","value":{"arguments":[{"name":"pos","nativeSrc":"2257:3:10","nodeType":"YulIdentifier","src":"2257:3:10"},{"name":"length","nativeSrc":"2262:6:10","nodeType":"YulIdentifier","src":"2262:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2198:58:10","nodeType":"YulIdentifier","src":"2198:58:10"},"nativeSrc":"2198:71:10","nodeType":"YulFunctionCall","src":"2198:71:10"},"variableNames":[{"name":"pos","nativeSrc":"2191:3:10","nodeType":"YulIdentifier","src":"2191:3:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2317:5:10","nodeType":"YulIdentifier","src":"2317:5:10"},{"kind":"number","nativeSrc":"2324:4:10","nodeType":"YulLiteral","src":"2324:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2313:3:10","nodeType":"YulIdentifier","src":"2313:3:10"},"nativeSrc":"2313:16:10","nodeType":"YulFunctionCall","src":"2313:16:10"},{"name":"pos","nativeSrc":"2331:3:10","nodeType":"YulIdentifier","src":"2331:3:10"},{"name":"length","nativeSrc":"2336:6:10","nodeType":"YulIdentifier","src":"2336:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2278:34:10","nodeType":"YulIdentifier","src":"2278:34:10"},"nativeSrc":"2278:65:10","nodeType":"YulFunctionCall","src":"2278:65:10"},"nativeSrc":"2278:65:10","nodeType":"YulExpressionStatement","src":"2278:65:10"},{"nativeSrc":"2352:46:10","nodeType":"YulAssignment","src":"2352:46:10","value":{"arguments":[{"name":"pos","nativeSrc":"2363:3:10","nodeType":"YulIdentifier","src":"2363:3:10"},{"arguments":[{"name":"length","nativeSrc":"2390:6:10","nodeType":"YulIdentifier","src":"2390:6:10"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2368:21:10","nodeType":"YulIdentifier","src":"2368:21:10"},"nativeSrc":"2368:29:10","nodeType":"YulFunctionCall","src":"2368:29:10"}],"functionName":{"name":"add","nativeSrc":"2359:3:10","nodeType":"YulIdentifier","src":"2359:3:10"},"nativeSrc":"2359:39:10","nodeType":"YulFunctionCall","src":"2359:39:10"},"variableNames":[{"name":"end","nativeSrc":"2352:3:10","nodeType":"YulIdentifier","src":"2352:3:10"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2027:377:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2100:5:10","nodeType":"YulTypedName","src":"2100:5:10","type":""},{"name":"pos","nativeSrc":"2107:3:10","nodeType":"YulTypedName","src":"2107:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2115:3:10","nodeType":"YulTypedName","src":"2115:3:10","type":""}],"src":"2027:377:10"},{"body":{"nativeSrc":"2455:32:10","nodeType":"YulBlock","src":"2455:32:10","statements":[{"nativeSrc":"2465:16:10","nodeType":"YulAssignment","src":"2465:16:10","value":{"name":"value","nativeSrc":"2476:5:10","nodeType":"YulIdentifier","src":"2476:5:10"},"variableNames":[{"name":"cleaned","nativeSrc":"2465:7:10","nodeType":"YulIdentifier","src":"2465:7:10"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2410:77:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2437:5:10","nodeType":"YulTypedName","src":"2437:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2447:7:10","nodeType":"YulTypedName","src":"2447:7:10","type":""}],"src":"2410:77:10"},{"body":{"nativeSrc":"2558:53:10","nodeType":"YulBlock","src":"2558:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2575:3:10","nodeType":"YulIdentifier","src":"2575:3:10"},{"arguments":[{"name":"value","nativeSrc":"2598:5:10","nodeType":"YulIdentifier","src":"2598:5:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2580:17:10","nodeType":"YulIdentifier","src":"2580:17:10"},"nativeSrc":"2580:24:10","nodeType":"YulFunctionCall","src":"2580:24:10"}],"functionName":{"name":"mstore","nativeSrc":"2568:6:10","nodeType":"YulIdentifier","src":"2568:6:10"},"nativeSrc":"2568:37:10","nodeType":"YulFunctionCall","src":"2568:37:10"},"nativeSrc":"2568:37:10","nodeType":"YulExpressionStatement","src":"2568:37:10"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"2493:118:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2546:5:10","nodeType":"YulTypedName","src":"2546:5:10","type":""},{"name":"pos","nativeSrc":"2553:3:10","nodeType":"YulTypedName","src":"2553:3:10","type":""}],"src":"2493:118:10"},{"body":{"nativeSrc":"2785:353:10","nodeType":"YulBlock","src":"2785:353:10","statements":[{"nativeSrc":"2795:26:10","nodeType":"YulAssignment","src":"2795:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"2807:9:10","nodeType":"YulIdentifier","src":"2807:9:10"},{"kind":"number","nativeSrc":"2818:2:10","nodeType":"YulLiteral","src":"2818:2:10","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2803:3:10","nodeType":"YulIdentifier","src":"2803:3:10"},"nativeSrc":"2803:18:10","nodeType":"YulFunctionCall","src":"2803:18:10"},"variableNames":[{"name":"tail","nativeSrc":"2795:4:10","nodeType":"YulIdentifier","src":"2795:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2869:6:10","nodeType":"YulIdentifier","src":"2869:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"2882:9:10","nodeType":"YulIdentifier","src":"2882:9:10"},{"kind":"number","nativeSrc":"2893:1:10","nodeType":"YulLiteral","src":"2893:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2878:3:10","nodeType":"YulIdentifier","src":"2878:3:10"},"nativeSrc":"2878:17:10","nodeType":"YulFunctionCall","src":"2878:17:10"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"2831:37:10","nodeType":"YulIdentifier","src":"2831:37:10"},"nativeSrc":"2831:65:10","nodeType":"YulFunctionCall","src":"2831:65:10"},"nativeSrc":"2831:65:10","nodeType":"YulExpressionStatement","src":"2831:65:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2917:9:10","nodeType":"YulIdentifier","src":"2917:9:10"},{"kind":"number","nativeSrc":"2928:2:10","nodeType":"YulLiteral","src":"2928:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2913:3:10","nodeType":"YulIdentifier","src":"2913:3:10"},"nativeSrc":"2913:18:10","nodeType":"YulFunctionCall","src":"2913:18:10"},{"arguments":[{"name":"tail","nativeSrc":"2937:4:10","nodeType":"YulIdentifier","src":"2937:4:10"},{"name":"headStart","nativeSrc":"2943:9:10","nodeType":"YulIdentifier","src":"2943:9:10"}],"functionName":{"name":"sub","nativeSrc":"2933:3:10","nodeType":"YulIdentifier","src":"2933:3:10"},"nativeSrc":"2933:20:10","nodeType":"YulFunctionCall","src":"2933:20:10"}],"functionName":{"name":"mstore","nativeSrc":"2906:6:10","nodeType":"YulIdentifier","src":"2906:6:10"},"nativeSrc":"2906:48:10","nodeType":"YulFunctionCall","src":"2906:48:10"},"nativeSrc":"2906:48:10","nodeType":"YulExpressionStatement","src":"2906:48:10"},{"nativeSrc":"2963:86:10","nodeType":"YulAssignment","src":"2963:86:10","value":{"arguments":[{"name":"value1","nativeSrc":"3035:6:10","nodeType":"YulIdentifier","src":"3035:6:10"},{"name":"tail","nativeSrc":"3044:4:10","nodeType":"YulIdentifier","src":"3044:4:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2971:63:10","nodeType":"YulIdentifier","src":"2971:63:10"},"nativeSrc":"2971:78:10","nodeType":"YulFunctionCall","src":"2971:78:10"},"variableNames":[{"name":"tail","nativeSrc":"2963:4:10","nodeType":"YulIdentifier","src":"2963:4:10"}]},{"expression":{"arguments":[{"name":"value2","nativeSrc":"3103:6:10","nodeType":"YulIdentifier","src":"3103:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"3116:9:10","nodeType":"YulIdentifier","src":"3116:9:10"},{"kind":"number","nativeSrc":"3127:2:10","nodeType":"YulLiteral","src":"3127:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3112:3:10","nodeType":"YulIdentifier","src":"3112:3:10"},"nativeSrc":"3112:18:10","nodeType":"YulFunctionCall","src":"3112:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3059:43:10","nodeType":"YulIdentifier","src":"3059:43:10"},"nativeSrc":"3059:72:10","nodeType":"YulFunctionCall","src":"3059:72:10"},"nativeSrc":"3059:72:10","nodeType":"YulExpressionStatement","src":"3059:72:10"}]},"name":"abi_encode_tuple_t_bool_t_string_memory_ptr_t_uint256__to_t_bool_t_string_memory_ptr_t_uint256__fromStack_reversed","nativeSrc":"2617:521:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2741:9:10","nodeType":"YulTypedName","src":"2741:9:10","type":""},{"name":"value2","nativeSrc":"2753:6:10","nodeType":"YulTypedName","src":"2753:6:10","type":""},{"name":"value1","nativeSrc":"2761:6:10","nodeType":"YulTypedName","src":"2761:6:10","type":""},{"name":"value0","nativeSrc":"2769:6:10","nodeType":"YulTypedName","src":"2769:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2780:4:10","nodeType":"YulTypedName","src":"2780:4:10","type":""}],"src":"2617:521:10"},{"body":{"nativeSrc":"3209:53:10","nodeType":"YulBlock","src":"3209:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3226:3:10","nodeType":"YulIdentifier","src":"3226:3:10"},{"arguments":[{"name":"value","nativeSrc":"3249:5:10","nodeType":"YulIdentifier","src":"3249:5:10"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3231:17:10","nodeType":"YulIdentifier","src":"3231:17:10"},"nativeSrc":"3231:24:10","nodeType":"YulFunctionCall","src":"3231:24:10"}],"functionName":{"name":"mstore","nativeSrc":"3219:6:10","nodeType":"YulIdentifier","src":"3219:6:10"},"nativeSrc":"3219:37:10","nodeType":"YulFunctionCall","src":"3219:37:10"},"nativeSrc":"3219:37:10","nodeType":"YulExpressionStatement","src":"3219:37:10"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3144:118:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3197:5:10","nodeType":"YulTypedName","src":"3197:5:10","type":""},{"name":"pos","nativeSrc":"3204:3:10","nodeType":"YulTypedName","src":"3204:3:10","type":""}],"src":"3144:118:10"},{"body":{"nativeSrc":"3366:124:10","nodeType":"YulBlock","src":"3366:124:10","statements":[{"nativeSrc":"3376:26:10","nodeType":"YulAssignment","src":"3376:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"3388:9:10","nodeType":"YulIdentifier","src":"3388:9:10"},{"kind":"number","nativeSrc":"3399:2:10","nodeType":"YulLiteral","src":"3399:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3384:3:10","nodeType":"YulIdentifier","src":"3384:3:10"},"nativeSrc":"3384:18:10","nodeType":"YulFunctionCall","src":"3384:18:10"},"variableNames":[{"name":"tail","nativeSrc":"3376:4:10","nodeType":"YulIdentifier","src":"3376:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3456:6:10","nodeType":"YulIdentifier","src":"3456:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"3469:9:10","nodeType":"YulIdentifier","src":"3469:9:10"},{"kind":"number","nativeSrc":"3480:1:10","nodeType":"YulLiteral","src":"3480:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3465:3:10","nodeType":"YulIdentifier","src":"3465:3:10"},"nativeSrc":"3465:17:10","nodeType":"YulFunctionCall","src":"3465:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3412:43:10","nodeType":"YulIdentifier","src":"3412:43:10"},"nativeSrc":"3412:71:10","nodeType":"YulFunctionCall","src":"3412:71:10"},"nativeSrc":"3412:71:10","nodeType":"YulExpressionStatement","src":"3412:71:10"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3268:222:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3338:9:10","nodeType":"YulTypedName","src":"3338:9:10","type":""},{"name":"value0","nativeSrc":"3350:6:10","nodeType":"YulTypedName","src":"3350:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3361:4:10","nodeType":"YulTypedName","src":"3361:4:10","type":""}],"src":"3268:222:10"},{"body":{"nativeSrc":"3585:28:10","nodeType":"YulBlock","src":"3585:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3602:1:10","nodeType":"YulLiteral","src":"3602:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"3605:1:10","nodeType":"YulLiteral","src":"3605:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3595:6:10","nodeType":"YulIdentifier","src":"3595:6:10"},"nativeSrc":"3595:12:10","nodeType":"YulFunctionCall","src":"3595:12:10"},"nativeSrc":"3595:12:10","nodeType":"YulExpressionStatement","src":"3595:12:10"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"3496:117:10","nodeType":"YulFunctionDefinition","src":"3496:117:10"},{"body":{"nativeSrc":"3708:28:10","nodeType":"YulBlock","src":"3708:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3725:1:10","nodeType":"YulLiteral","src":"3725:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"3728:1:10","nodeType":"YulLiteral","src":"3728:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3718:6:10","nodeType":"YulIdentifier","src":"3718:6:10"},"nativeSrc":"3718:12:10","nodeType":"YulFunctionCall","src":"3718:12:10"},"nativeSrc":"3718:12:10","nodeType":"YulExpressionStatement","src":"3718:12:10"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"3619:117:10","nodeType":"YulFunctionDefinition","src":"3619:117:10"},{"body":{"nativeSrc":"3770:152:10","nodeType":"YulBlock","src":"3770:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3787:1:10","nodeType":"YulLiteral","src":"3787:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"3790:77:10","nodeType":"YulLiteral","src":"3790:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"3780:6:10","nodeType":"YulIdentifier","src":"3780:6:10"},"nativeSrc":"3780:88:10","nodeType":"YulFunctionCall","src":"3780:88:10"},"nativeSrc":"3780:88:10","nodeType":"YulExpressionStatement","src":"3780:88:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3884:1:10","nodeType":"YulLiteral","src":"3884:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"3887:4:10","nodeType":"YulLiteral","src":"3887:4:10","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"3877:6:10","nodeType":"YulIdentifier","src":"3877:6:10"},"nativeSrc":"3877:15:10","nodeType":"YulFunctionCall","src":"3877:15:10"},"nativeSrc":"3877:15:10","nodeType":"YulExpressionStatement","src":"3877:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3908:1:10","nodeType":"YulLiteral","src":"3908:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"3911:4:10","nodeType":"YulLiteral","src":"3911:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3901:6:10","nodeType":"YulIdentifier","src":"3901:6:10"},"nativeSrc":"3901:15:10","nodeType":"YulFunctionCall","src":"3901:15:10"},"nativeSrc":"3901:15:10","nodeType":"YulExpressionStatement","src":"3901:15:10"}]},"name":"panic_error_0x41","nativeSrc":"3742:180:10","nodeType":"YulFunctionDefinition","src":"3742:180:10"},{"body":{"nativeSrc":"3971:238:10","nodeType":"YulBlock","src":"3971:238:10","statements":[{"nativeSrc":"3981:58:10","nodeType":"YulVariableDeclaration","src":"3981:58:10","value":{"arguments":[{"name":"memPtr","nativeSrc":"4003:6:10","nodeType":"YulIdentifier","src":"4003:6:10"},{"arguments":[{"name":"size","nativeSrc":"4033:4:10","nodeType":"YulIdentifier","src":"4033:4:10"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"4011:21:10","nodeType":"YulIdentifier","src":"4011:21:10"},"nativeSrc":"4011:27:10","nodeType":"YulFunctionCall","src":"4011:27:10"}],"functionName":{"name":"add","nativeSrc":"3999:3:10","nodeType":"YulIdentifier","src":"3999:3:10"},"nativeSrc":"3999:40:10","nodeType":"YulFunctionCall","src":"3999:40:10"},"variables":[{"name":"newFreePtr","nativeSrc":"3985:10:10","nodeType":"YulTypedName","src":"3985:10:10","type":""}]},{"body":{"nativeSrc":"4150:22:10","nodeType":"YulBlock","src":"4150:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4152:16:10","nodeType":"YulIdentifier","src":"4152:16:10"},"nativeSrc":"4152:18:10","nodeType":"YulFunctionCall","src":"4152:18:10"},"nativeSrc":"4152:18:10","nodeType":"YulExpressionStatement","src":"4152:18:10"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"4093:10:10","nodeType":"YulIdentifier","src":"4093:10:10"},{"kind":"number","nativeSrc":"4105:18:10","nodeType":"YulLiteral","src":"4105:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4090:2:10","nodeType":"YulIdentifier","src":"4090:2:10"},"nativeSrc":"4090:34:10","nodeType":"YulFunctionCall","src":"4090:34:10"},{"arguments":[{"name":"newFreePtr","nativeSrc":"4129:10:10","nodeType":"YulIdentifier","src":"4129:10:10"},{"name":"memPtr","nativeSrc":"4141:6:10","nodeType":"YulIdentifier","src":"4141:6:10"}],"functionName":{"name":"lt","nativeSrc":"4126:2:10","nodeType":"YulIdentifier","src":"4126:2:10"},"nativeSrc":"4126:22:10","nodeType":"YulFunctionCall","src":"4126:22:10"}],"functionName":{"name":"or","nativeSrc":"4087:2:10","nodeType":"YulIdentifier","src":"4087:2:10"},"nativeSrc":"4087:62:10","nodeType":"YulFunctionCall","src":"4087:62:10"},"nativeSrc":"4084:88:10","nodeType":"YulIf","src":"4084:88:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4188:2:10","nodeType":"YulLiteral","src":"4188:2:10","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"4192:10:10","nodeType":"YulIdentifier","src":"4192:10:10"}],"functionName":{"name":"mstore","nativeSrc":"4181:6:10","nodeType":"YulIdentifier","src":"4181:6:10"},"nativeSrc":"4181:22:10","nodeType":"YulFunctionCall","src":"4181:22:10"},"nativeSrc":"4181:22:10","nodeType":"YulExpressionStatement","src":"4181:22:10"}]},"name":"finalize_allocation","nativeSrc":"3928:281:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"3957:6:10","nodeType":"YulTypedName","src":"3957:6:10","type":""},{"name":"size","nativeSrc":"3965:4:10","nodeType":"YulTypedName","src":"3965:4:10","type":""}],"src":"3928:281:10"},{"body":{"nativeSrc":"4256:88:10","nodeType":"YulBlock","src":"4256:88:10","statements":[{"nativeSrc":"4266:30:10","nodeType":"YulAssignment","src":"4266:30:10","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"4276:18:10","nodeType":"YulIdentifier","src":"4276:18:10"},"nativeSrc":"4276:20:10","nodeType":"YulFunctionCall","src":"4276:20:10"},"variableNames":[{"name":"memPtr","nativeSrc":"4266:6:10","nodeType":"YulIdentifier","src":"4266:6:10"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"4325:6:10","nodeType":"YulIdentifier","src":"4325:6:10"},{"name":"size","nativeSrc":"4333:4:10","nodeType":"YulIdentifier","src":"4333:4:10"}],"functionName":{"name":"finalize_allocation","nativeSrc":"4305:19:10","nodeType":"YulIdentifier","src":"4305:19:10"},"nativeSrc":"4305:33:10","nodeType":"YulFunctionCall","src":"4305:33:10"},"nativeSrc":"4305:33:10","nodeType":"YulExpressionStatement","src":"4305:33:10"}]},"name":"allocate_memory","nativeSrc":"4215:129:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"4240:4:10","nodeType":"YulTypedName","src":"4240:4:10","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"4249:6:10","nodeType":"YulTypedName","src":"4249:6:10","type":""}],"src":"4215:129:10"},{"body":{"nativeSrc":"4417:241:10","nodeType":"YulBlock","src":"4417:241:10","statements":[{"body":{"nativeSrc":"4522:22:10","nodeType":"YulBlock","src":"4522:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4524:16:10","nodeType":"YulIdentifier","src":"4524:16:10"},"nativeSrc":"4524:18:10","nodeType":"YulFunctionCall","src":"4524:18:10"},"nativeSrc":"4524:18:10","nodeType":"YulExpressionStatement","src":"4524:18:10"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"4494:6:10","nodeType":"YulIdentifier","src":"4494:6:10"},{"kind":"number","nativeSrc":"4502:18:10","nodeType":"YulLiteral","src":"4502:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4491:2:10","nodeType":"YulIdentifier","src":"4491:2:10"},"nativeSrc":"4491:30:10","nodeType":"YulFunctionCall","src":"4491:30:10"},"nativeSrc":"4488:56:10","nodeType":"YulIf","src":"4488:56:10"},{"nativeSrc":"4554:37:10","nodeType":"YulAssignment","src":"4554:37:10","value":{"arguments":[{"name":"length","nativeSrc":"4584:6:10","nodeType":"YulIdentifier","src":"4584:6:10"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"4562:21:10","nodeType":"YulIdentifier","src":"4562:21:10"},"nativeSrc":"4562:29:10","nodeType":"YulFunctionCall","src":"4562:29:10"},"variableNames":[{"name":"size","nativeSrc":"4554:4:10","nodeType":"YulIdentifier","src":"4554:4:10"}]},{"nativeSrc":"4628:23:10","nodeType":"YulAssignment","src":"4628:23:10","value":{"arguments":[{"name":"size","nativeSrc":"4640:4:10","nodeType":"YulIdentifier","src":"4640:4:10"},{"kind":"number","nativeSrc":"4646:4:10","nodeType":"YulLiteral","src":"4646:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4636:3:10","nodeType":"YulIdentifier","src":"4636:3:10"},"nativeSrc":"4636:15:10","nodeType":"YulFunctionCall","src":"4636:15:10"},"variableNames":[{"name":"size","nativeSrc":"4628:4:10","nodeType":"YulIdentifier","src":"4628:4:10"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"4350:308:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"4401:6:10","nodeType":"YulTypedName","src":"4401:6:10","type":""}],"returnVariables":[{"name":"size","nativeSrc":"4412:4:10","nodeType":"YulTypedName","src":"4412:4:10","type":""}],"src":"4350:308:10"},{"body":{"nativeSrc":"4728:82:10","nodeType":"YulBlock","src":"4728:82:10","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"4751:3:10","nodeType":"YulIdentifier","src":"4751:3:10"},{"name":"src","nativeSrc":"4756:3:10","nodeType":"YulIdentifier","src":"4756:3:10"},{"name":"length","nativeSrc":"4761:6:10","nodeType":"YulIdentifier","src":"4761:6:10"}],"functionName":{"name":"calldatacopy","nativeSrc":"4738:12:10","nodeType":"YulIdentifier","src":"4738:12:10"},"nativeSrc":"4738:30:10","nodeType":"YulFunctionCall","src":"4738:30:10"},"nativeSrc":"4738:30:10","nodeType":"YulExpressionStatement","src":"4738:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"4788:3:10","nodeType":"YulIdentifier","src":"4788:3:10"},{"name":"length","nativeSrc":"4793:6:10","nodeType":"YulIdentifier","src":"4793:6:10"}],"functionName":{"name":"add","nativeSrc":"4784:3:10","nodeType":"YulIdentifier","src":"4784:3:10"},"nativeSrc":"4784:16:10","nodeType":"YulFunctionCall","src":"4784:16:10"},{"kind":"number","nativeSrc":"4802:1:10","nodeType":"YulLiteral","src":"4802:1:10","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4777:6:10","nodeType":"YulIdentifier","src":"4777:6:10"},"nativeSrc":"4777:27:10","nodeType":"YulFunctionCall","src":"4777:27:10"},"nativeSrc":"4777:27:10","nodeType":"YulExpressionStatement","src":"4777:27:10"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"4664:146:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"4710:3:10","nodeType":"YulTypedName","src":"4710:3:10","type":""},{"name":"dst","nativeSrc":"4715:3:10","nodeType":"YulTypedName","src":"4715:3:10","type":""},{"name":"length","nativeSrc":"4720:6:10","nodeType":"YulTypedName","src":"4720:6:10","type":""}],"src":"4664:146:10"},{"body":{"nativeSrc":"4900:341:10","nodeType":"YulBlock","src":"4900:341:10","statements":[{"nativeSrc":"4910:75:10","nodeType":"YulAssignment","src":"4910:75:10","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"4977:6:10","nodeType":"YulIdentifier","src":"4977:6:10"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"4935:41:10","nodeType":"YulIdentifier","src":"4935:41:10"},"nativeSrc":"4935:49:10","nodeType":"YulFunctionCall","src":"4935:49:10"}],"functionName":{"name":"allocate_memory","nativeSrc":"4919:15:10","nodeType":"YulIdentifier","src":"4919:15:10"},"nativeSrc":"4919:66:10","nodeType":"YulFunctionCall","src":"4919:66:10"},"variableNames":[{"name":"array","nativeSrc":"4910:5:10","nodeType":"YulIdentifier","src":"4910:5:10"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"5001:5:10","nodeType":"YulIdentifier","src":"5001:5:10"},{"name":"length","nativeSrc":"5008:6:10","nodeType":"YulIdentifier","src":"5008:6:10"}],"functionName":{"name":"mstore","nativeSrc":"4994:6:10","nodeType":"YulIdentifier","src":"4994:6:10"},"nativeSrc":"4994:21:10","nodeType":"YulFunctionCall","src":"4994:21:10"},"nativeSrc":"4994:21:10","nodeType":"YulExpressionStatement","src":"4994:21:10"},{"nativeSrc":"5024:27:10","nodeType":"YulVariableDeclaration","src":"5024:27:10","value":{"arguments":[{"name":"array","nativeSrc":"5039:5:10","nodeType":"YulIdentifier","src":"5039:5:10"},{"kind":"number","nativeSrc":"5046:4:10","nodeType":"YulLiteral","src":"5046:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5035:3:10","nodeType":"YulIdentifier","src":"5035:3:10"},"nativeSrc":"5035:16:10","nodeType":"YulFunctionCall","src":"5035:16:10"},"variables":[{"name":"dst","nativeSrc":"5028:3:10","nodeType":"YulTypedName","src":"5028:3:10","type":""}]},{"body":{"nativeSrc":"5089:83:10","nodeType":"YulBlock","src":"5089:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"5091:77:10","nodeType":"YulIdentifier","src":"5091:77:10"},"nativeSrc":"5091:79:10","nodeType":"YulFunctionCall","src":"5091:79:10"},"nativeSrc":"5091:79:10","nodeType":"YulExpressionStatement","src":"5091:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5070:3:10","nodeType":"YulIdentifier","src":"5070:3:10"},{"name":"length","nativeSrc":"5075:6:10","nodeType":"YulIdentifier","src":"5075:6:10"}],"functionName":{"name":"add","nativeSrc":"5066:3:10","nodeType":"YulIdentifier","src":"5066:3:10"},"nativeSrc":"5066:16:10","nodeType":"YulFunctionCall","src":"5066:16:10"},{"name":"end","nativeSrc":"5084:3:10","nodeType":"YulIdentifier","src":"5084:3:10"}],"functionName":{"name":"gt","nativeSrc":"5063:2:10","nodeType":"YulIdentifier","src":"5063:2:10"},"nativeSrc":"5063:25:10","nodeType":"YulFunctionCall","src":"5063:25:10"},"nativeSrc":"5060:112:10","nodeType":"YulIf","src":"5060:112:10"},{"expression":{"arguments":[{"name":"src","nativeSrc":"5218:3:10","nodeType":"YulIdentifier","src":"5218:3:10"},{"name":"dst","nativeSrc":"5223:3:10","nodeType":"YulIdentifier","src":"5223:3:10"},{"name":"length","nativeSrc":"5228:6:10","nodeType":"YulIdentifier","src":"5228:6:10"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"5181:36:10","nodeType":"YulIdentifier","src":"5181:36:10"},"nativeSrc":"5181:54:10","nodeType":"YulFunctionCall","src":"5181:54:10"},"nativeSrc":"5181:54:10","nodeType":"YulExpressionStatement","src":"5181:54:10"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"4816:425:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"4873:3:10","nodeType":"YulTypedName","src":"4873:3:10","type":""},{"name":"length","nativeSrc":"4878:6:10","nodeType":"YulTypedName","src":"4878:6:10","type":""},{"name":"end","nativeSrc":"4886:3:10","nodeType":"YulTypedName","src":"4886:3:10","type":""}],"returnVariables":[{"name":"array","nativeSrc":"4894:5:10","nodeType":"YulTypedName","src":"4894:5:10","type":""}],"src":"4816:425:10"},{"body":{"nativeSrc":"5323:278:10","nodeType":"YulBlock","src":"5323:278:10","statements":[{"body":{"nativeSrc":"5372:83:10","nodeType":"YulBlock","src":"5372:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"5374:77:10","nodeType":"YulIdentifier","src":"5374:77:10"},"nativeSrc":"5374:79:10","nodeType":"YulFunctionCall","src":"5374:79:10"},"nativeSrc":"5374:79:10","nodeType":"YulExpressionStatement","src":"5374:79:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"5351:6:10","nodeType":"YulIdentifier","src":"5351:6:10"},{"kind":"number","nativeSrc":"5359:4:10","nodeType":"YulLiteral","src":"5359:4:10","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"5347:3:10","nodeType":"YulIdentifier","src":"5347:3:10"},"nativeSrc":"5347:17:10","nodeType":"YulFunctionCall","src":"5347:17:10"},{"name":"end","nativeSrc":"5366:3:10","nodeType":"YulIdentifier","src":"5366:3:10"}],"functionName":{"name":"slt","nativeSrc":"5343:3:10","nodeType":"YulIdentifier","src":"5343:3:10"},"nativeSrc":"5343:27:10","nodeType":"YulFunctionCall","src":"5343:27:10"}],"functionName":{"name":"iszero","nativeSrc":"5336:6:10","nodeType":"YulIdentifier","src":"5336:6:10"},"nativeSrc":"5336:35:10","nodeType":"YulFunctionCall","src":"5336:35:10"},"nativeSrc":"5333:122:10","nodeType":"YulIf","src":"5333:122:10"},{"nativeSrc":"5464:34:10","nodeType":"YulVariableDeclaration","src":"5464:34:10","value":{"arguments":[{"name":"offset","nativeSrc":"5491:6:10","nodeType":"YulIdentifier","src":"5491:6:10"}],"functionName":{"name":"calldataload","nativeSrc":"5478:12:10","nodeType":"YulIdentifier","src":"5478:12:10"},"nativeSrc":"5478:20:10","nodeType":"YulFunctionCall","src":"5478:20:10"},"variables":[{"name":"length","nativeSrc":"5468:6:10","nodeType":"YulTypedName","src":"5468:6:10","type":""}]},{"nativeSrc":"5507:88:10","nodeType":"YulAssignment","src":"5507:88:10","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"5568:6:10","nodeType":"YulIdentifier","src":"5568:6:10"},{"kind":"number","nativeSrc":"5576:4:10","nodeType":"YulLiteral","src":"5576:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5564:3:10","nodeType":"YulIdentifier","src":"5564:3:10"},"nativeSrc":"5564:17:10","nodeType":"YulFunctionCall","src":"5564:17:10"},{"name":"length","nativeSrc":"5583:6:10","nodeType":"YulIdentifier","src":"5583:6:10"},{"name":"end","nativeSrc":"5591:3:10","nodeType":"YulIdentifier","src":"5591:3:10"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"5516:47:10","nodeType":"YulIdentifier","src":"5516:47:10"},"nativeSrc":"5516:79:10","nodeType":"YulFunctionCall","src":"5516:79:10"},"variableNames":[{"name":"array","nativeSrc":"5507:5:10","nodeType":"YulIdentifier","src":"5507:5:10"}]}]},"name":"abi_decode_t_string_memory_ptr","nativeSrc":"5261:340:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5301:6:10","nodeType":"YulTypedName","src":"5301:6:10","type":""},{"name":"end","nativeSrc":"5309:3:10","nodeType":"YulTypedName","src":"5309:3:10","type":""}],"returnVariables":[{"name":"array","nativeSrc":"5317:5:10","nodeType":"YulTypedName","src":"5317:5:10","type":""}],"src":"5261:340:10"},{"body":{"nativeSrc":"5650:79:10","nodeType":"YulBlock","src":"5650:79:10","statements":[{"body":{"nativeSrc":"5707:16:10","nodeType":"YulBlock","src":"5707:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5716:1:10","nodeType":"YulLiteral","src":"5716:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"5719:1:10","nodeType":"YulLiteral","src":"5719:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5709:6:10","nodeType":"YulIdentifier","src":"5709:6:10"},"nativeSrc":"5709:12:10","nodeType":"YulFunctionCall","src":"5709:12:10"},"nativeSrc":"5709:12:10","nodeType":"YulExpressionStatement","src":"5709:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5673:5:10","nodeType":"YulIdentifier","src":"5673:5:10"},{"arguments":[{"name":"value","nativeSrc":"5698:5:10","nodeType":"YulIdentifier","src":"5698:5:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5680:17:10","nodeType":"YulIdentifier","src":"5680:17:10"},"nativeSrc":"5680:24:10","nodeType":"YulFunctionCall","src":"5680:24:10"}],"functionName":{"name":"eq","nativeSrc":"5670:2:10","nodeType":"YulIdentifier","src":"5670:2:10"},"nativeSrc":"5670:35:10","nodeType":"YulFunctionCall","src":"5670:35:10"}],"functionName":{"name":"iszero","nativeSrc":"5663:6:10","nodeType":"YulIdentifier","src":"5663:6:10"},"nativeSrc":"5663:43:10","nodeType":"YulFunctionCall","src":"5663:43:10"},"nativeSrc":"5660:63:10","nodeType":"YulIf","src":"5660:63:10"}]},"name":"validator_revert_t_uint256","nativeSrc":"5607:122:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5643:5:10","nodeType":"YulTypedName","src":"5643:5:10","type":""}],"src":"5607:122:10"},{"body":{"nativeSrc":"5787:87:10","nodeType":"YulBlock","src":"5787:87:10","statements":[{"nativeSrc":"5797:29:10","nodeType":"YulAssignment","src":"5797:29:10","value":{"arguments":[{"name":"offset","nativeSrc":"5819:6:10","nodeType":"YulIdentifier","src":"5819:6:10"}],"functionName":{"name":"calldataload","nativeSrc":"5806:12:10","nodeType":"YulIdentifier","src":"5806:12:10"},"nativeSrc":"5806:20:10","nodeType":"YulFunctionCall","src":"5806:20:10"},"variableNames":[{"name":"value","nativeSrc":"5797:5:10","nodeType":"YulIdentifier","src":"5797:5:10"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5862:5:10","nodeType":"YulIdentifier","src":"5862:5:10"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"5835:26:10","nodeType":"YulIdentifier","src":"5835:26:10"},"nativeSrc":"5835:33:10","nodeType":"YulFunctionCall","src":"5835:33:10"},"nativeSrc":"5835:33:10","nodeType":"YulExpressionStatement","src":"5835:33:10"}]},"name":"abi_decode_t_uint256","nativeSrc":"5735:139:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5765:6:10","nodeType":"YulTypedName","src":"5765:6:10","type":""},{"name":"end","nativeSrc":"5773:3:10","nodeType":"YulTypedName","src":"5773:3:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"5781:5:10","nodeType":"YulTypedName","src":"5781:5:10","type":""}],"src":"5735:139:10"},{"body":{"nativeSrc":"5990:689:10","nodeType":"YulBlock","src":"5990:689:10","statements":[{"body":{"nativeSrc":"6036:83:10","nodeType":"YulBlock","src":"6036:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6038:77:10","nodeType":"YulIdentifier","src":"6038:77:10"},"nativeSrc":"6038:79:10","nodeType":"YulFunctionCall","src":"6038:79:10"},"nativeSrc":"6038:79:10","nodeType":"YulExpressionStatement","src":"6038:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6011:7:10","nodeType":"YulIdentifier","src":"6011:7:10"},{"name":"headStart","nativeSrc":"6020:9:10","nodeType":"YulIdentifier","src":"6020:9:10"}],"functionName":{"name":"sub","nativeSrc":"6007:3:10","nodeType":"YulIdentifier","src":"6007:3:10"},"nativeSrc":"6007:23:10","nodeType":"YulFunctionCall","src":"6007:23:10"},{"kind":"number","nativeSrc":"6032:2:10","nodeType":"YulLiteral","src":"6032:2:10","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"6003:3:10","nodeType":"YulIdentifier","src":"6003:3:10"},"nativeSrc":"6003:32:10","nodeType":"YulFunctionCall","src":"6003:32:10"},"nativeSrc":"6000:119:10","nodeType":"YulIf","src":"6000:119:10"},{"nativeSrc":"6129:117:10","nodeType":"YulBlock","src":"6129:117:10","statements":[{"nativeSrc":"6144:15:10","nodeType":"YulVariableDeclaration","src":"6144:15:10","value":{"kind":"number","nativeSrc":"6158:1:10","nodeType":"YulLiteral","src":"6158:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6148:6:10","nodeType":"YulTypedName","src":"6148:6:10","type":""}]},{"nativeSrc":"6173:63:10","nodeType":"YulAssignment","src":"6173:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6208:9:10","nodeType":"YulIdentifier","src":"6208:9:10"},{"name":"offset","nativeSrc":"6219:6:10","nodeType":"YulIdentifier","src":"6219:6:10"}],"functionName":{"name":"add","nativeSrc":"6204:3:10","nodeType":"YulIdentifier","src":"6204:3:10"},"nativeSrc":"6204:22:10","nodeType":"YulFunctionCall","src":"6204:22:10"},{"name":"dataEnd","nativeSrc":"6228:7:10","nodeType":"YulIdentifier","src":"6228:7:10"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6183:20:10","nodeType":"YulIdentifier","src":"6183:20:10"},"nativeSrc":"6183:53:10","nodeType":"YulFunctionCall","src":"6183:53:10"},"variableNames":[{"name":"value0","nativeSrc":"6173:6:10","nodeType":"YulIdentifier","src":"6173:6:10"}]}]},{"nativeSrc":"6256:288:10","nodeType":"YulBlock","src":"6256:288:10","statements":[{"nativeSrc":"6271:46:10","nodeType":"YulVariableDeclaration","src":"6271:46:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6302:9:10","nodeType":"YulIdentifier","src":"6302:9:10"},{"kind":"number","nativeSrc":"6313:2:10","nodeType":"YulLiteral","src":"6313:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6298:3:10","nodeType":"YulIdentifier","src":"6298:3:10"},"nativeSrc":"6298:18:10","nodeType":"YulFunctionCall","src":"6298:18:10"}],"functionName":{"name":"calldataload","nativeSrc":"6285:12:10","nodeType":"YulIdentifier","src":"6285:12:10"},"nativeSrc":"6285:32:10","nodeType":"YulFunctionCall","src":"6285:32:10"},"variables":[{"name":"offset","nativeSrc":"6275:6:10","nodeType":"YulTypedName","src":"6275:6:10","type":""}]},{"body":{"nativeSrc":"6364:83:10","nodeType":"YulBlock","src":"6364:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"6366:77:10","nodeType":"YulIdentifier","src":"6366:77:10"},"nativeSrc":"6366:79:10","nodeType":"YulFunctionCall","src":"6366:79:10"},"nativeSrc":"6366:79:10","nodeType":"YulExpressionStatement","src":"6366:79:10"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"6336:6:10","nodeType":"YulIdentifier","src":"6336:6:10"},{"kind":"number","nativeSrc":"6344:18:10","nodeType":"YulLiteral","src":"6344:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6333:2:10","nodeType":"YulIdentifier","src":"6333:2:10"},"nativeSrc":"6333:30:10","nodeType":"YulFunctionCall","src":"6333:30:10"},"nativeSrc":"6330:117:10","nodeType":"YulIf","src":"6330:117:10"},{"nativeSrc":"6461:73:10","nodeType":"YulAssignment","src":"6461:73:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6506:9:10","nodeType":"YulIdentifier","src":"6506:9:10"},{"name":"offset","nativeSrc":"6517:6:10","nodeType":"YulIdentifier","src":"6517:6:10"}],"functionName":{"name":"add","nativeSrc":"6502:3:10","nodeType":"YulIdentifier","src":"6502:3:10"},"nativeSrc":"6502:22:10","nodeType":"YulFunctionCall","src":"6502:22:10"},{"name":"dataEnd","nativeSrc":"6526:7:10","nodeType":"YulIdentifier","src":"6526:7:10"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"6471:30:10","nodeType":"YulIdentifier","src":"6471:30:10"},"nativeSrc":"6471:63:10","nodeType":"YulFunctionCall","src":"6471:63:10"},"variableNames":[{"name":"value1","nativeSrc":"6461:6:10","nodeType":"YulIdentifier","src":"6461:6:10"}]}]},{"nativeSrc":"6554:118:10","nodeType":"YulBlock","src":"6554:118:10","statements":[{"nativeSrc":"6569:16:10","nodeType":"YulVariableDeclaration","src":"6569:16:10","value":{"kind":"number","nativeSrc":"6583:2:10","nodeType":"YulLiteral","src":"6583:2:10","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"6573:6:10","nodeType":"YulTypedName","src":"6573:6:10","type":""}]},{"nativeSrc":"6599:63:10","nodeType":"YulAssignment","src":"6599:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6634:9:10","nodeType":"YulIdentifier","src":"6634:9:10"},{"name":"offset","nativeSrc":"6645:6:10","nodeType":"YulIdentifier","src":"6645:6:10"}],"functionName":{"name":"add","nativeSrc":"6630:3:10","nodeType":"YulIdentifier","src":"6630:3:10"},"nativeSrc":"6630:22:10","nodeType":"YulFunctionCall","src":"6630:22:10"},{"name":"dataEnd","nativeSrc":"6654:7:10","nodeType":"YulIdentifier","src":"6654:7:10"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"6609:20:10","nodeType":"YulIdentifier","src":"6609:20:10"},"nativeSrc":"6609:53:10","nodeType":"YulFunctionCall","src":"6609:53:10"},"variableNames":[{"name":"value2","nativeSrc":"6599:6:10","nodeType":"YulIdentifier","src":"6599:6:10"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptrt_uint256","nativeSrc":"5880:799:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5944:9:10","nodeType":"YulTypedName","src":"5944:9:10","type":""},{"name":"dataEnd","nativeSrc":"5955:7:10","nodeType":"YulTypedName","src":"5955:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5967:6:10","nodeType":"YulTypedName","src":"5967:6:10","type":""},{"name":"value1","nativeSrc":"5975:6:10","nodeType":"YulTypedName","src":"5975:6:10","type":""},{"name":"value2","nativeSrc":"5983:6:10","nodeType":"YulTypedName","src":"5983:6:10","type":""}],"src":"5880:799:10"},{"body":{"nativeSrc":"6729:57:10","nodeType":"YulBlock","src":"6729:57:10","statements":[{"nativeSrc":"6739:41:10","nodeType":"YulAssignment","src":"6739:41:10","value":{"arguments":[{"name":"value","nativeSrc":"6754:5:10","nodeType":"YulIdentifier","src":"6754:5:10"},{"kind":"number","nativeSrc":"6761:18:10","nodeType":"YulLiteral","src":"6761:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"6750:3:10","nodeType":"YulIdentifier","src":"6750:3:10"},"nativeSrc":"6750:30:10","nodeType":"YulFunctionCall","src":"6750:30:10"},"variableNames":[{"name":"cleaned","nativeSrc":"6739:7:10","nodeType":"YulIdentifier","src":"6739:7:10"}]}]},"name":"cleanup_t_uint64","nativeSrc":"6685:101:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6711:5:10","nodeType":"YulTypedName","src":"6711:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6721:7:10","nodeType":"YulTypedName","src":"6721:7:10","type":""}],"src":"6685:101:10"},{"body":{"nativeSrc":"6855:52:10","nodeType":"YulBlock","src":"6855:52:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6872:3:10","nodeType":"YulIdentifier","src":"6872:3:10"},{"arguments":[{"name":"value","nativeSrc":"6894:5:10","nodeType":"YulIdentifier","src":"6894:5:10"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"6877:16:10","nodeType":"YulIdentifier","src":"6877:16:10"},"nativeSrc":"6877:23:10","nodeType":"YulFunctionCall","src":"6877:23:10"}],"functionName":{"name":"mstore","nativeSrc":"6865:6:10","nodeType":"YulIdentifier","src":"6865:6:10"},"nativeSrc":"6865:36:10","nodeType":"YulFunctionCall","src":"6865:36:10"},"nativeSrc":"6865:36:10","nodeType":"YulExpressionStatement","src":"6865:36:10"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"6792:115:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6843:5:10","nodeType":"YulTypedName","src":"6843:5:10","type":""},{"name":"pos","nativeSrc":"6850:3:10","nodeType":"YulTypedName","src":"6850:3:10","type":""}],"src":"6792:115:10"},{"body":{"nativeSrc":"7009:122:10","nodeType":"YulBlock","src":"7009:122:10","statements":[{"nativeSrc":"7019:26:10","nodeType":"YulAssignment","src":"7019:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"7031:9:10","nodeType":"YulIdentifier","src":"7031:9:10"},{"kind":"number","nativeSrc":"7042:2:10","nodeType":"YulLiteral","src":"7042:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7027:3:10","nodeType":"YulIdentifier","src":"7027:3:10"},"nativeSrc":"7027:18:10","nodeType":"YulFunctionCall","src":"7027:18:10"},"variableNames":[{"name":"tail","nativeSrc":"7019:4:10","nodeType":"YulIdentifier","src":"7019:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7097:6:10","nodeType":"YulIdentifier","src":"7097:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"7110:9:10","nodeType":"YulIdentifier","src":"7110:9:10"},{"kind":"number","nativeSrc":"7121:1:10","nodeType":"YulLiteral","src":"7121:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7106:3:10","nodeType":"YulIdentifier","src":"7106:3:10"},"nativeSrc":"7106:17:10","nodeType":"YulFunctionCall","src":"7106:17:10"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"7055:41:10","nodeType":"YulIdentifier","src":"7055:41:10"},"nativeSrc":"7055:69:10","nodeType":"YulFunctionCall","src":"7055:69:10"},"nativeSrc":"7055:69:10","nodeType":"YulExpressionStatement","src":"7055:69:10"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nativeSrc":"6913:218:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6981:9:10","nodeType":"YulTypedName","src":"6981:9:10","type":""},{"name":"value0","nativeSrc":"6993:6:10","nodeType":"YulTypedName","src":"6993:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7004:4:10","nodeType":"YulTypedName","src":"7004:4:10","type":""}],"src":"6913:218:10"},{"body":{"nativeSrc":"7169:28:10","nodeType":"YulBlock","src":"7169:28:10","statements":[{"nativeSrc":"7179:12:10","nodeType":"YulAssignment","src":"7179:12:10","value":{"name":"value","nativeSrc":"7186:5:10","nodeType":"YulIdentifier","src":"7186:5:10"},"variableNames":[{"name":"ret","nativeSrc":"7179:3:10","nodeType":"YulIdentifier","src":"7179:3:10"}]}]},"name":"identity","nativeSrc":"7137:60:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7155:5:10","nodeType":"YulTypedName","src":"7155:5:10","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"7165:3:10","nodeType":"YulTypedName","src":"7165:3:10","type":""}],"src":"7137:60:10"},{"body":{"nativeSrc":"7263:82:10","nodeType":"YulBlock","src":"7263:82:10","statements":[{"nativeSrc":"7273:66:10","nodeType":"YulAssignment","src":"7273:66:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7331:5:10","nodeType":"YulIdentifier","src":"7331:5:10"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"7313:17:10","nodeType":"YulIdentifier","src":"7313:17:10"},"nativeSrc":"7313:24:10","nodeType":"YulFunctionCall","src":"7313:24:10"}],"functionName":{"name":"identity","nativeSrc":"7304:8:10","nodeType":"YulIdentifier","src":"7304:8:10"},"nativeSrc":"7304:34:10","nodeType":"YulFunctionCall","src":"7304:34:10"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"7286:17:10","nodeType":"YulIdentifier","src":"7286:17:10"},"nativeSrc":"7286:53:10","nodeType":"YulFunctionCall","src":"7286:53:10"},"variableNames":[{"name":"converted","nativeSrc":"7273:9:10","nodeType":"YulIdentifier","src":"7273:9:10"}]}]},"name":"convert_t_uint160_to_t_uint160","nativeSrc":"7203:142:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7243:5:10","nodeType":"YulTypedName","src":"7243:5:10","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"7253:9:10","nodeType":"YulTypedName","src":"7253:9:10","type":""}],"src":"7203:142:10"},{"body":{"nativeSrc":"7411:66:10","nodeType":"YulBlock","src":"7411:66:10","statements":[{"nativeSrc":"7421:50:10","nodeType":"YulAssignment","src":"7421:50:10","value":{"arguments":[{"name":"value","nativeSrc":"7465:5:10","nodeType":"YulIdentifier","src":"7465:5:10"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nativeSrc":"7434:30:10","nodeType":"YulIdentifier","src":"7434:30:10"},"nativeSrc":"7434:37:10","nodeType":"YulFunctionCall","src":"7434:37:10"},"variableNames":[{"name":"converted","nativeSrc":"7421:9:10","nodeType":"YulIdentifier","src":"7421:9:10"}]}]},"name":"convert_t_uint160_to_t_address","nativeSrc":"7351:126:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7391:5:10","nodeType":"YulTypedName","src":"7391:5:10","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"7401:9:10","nodeType":"YulTypedName","src":"7401:9:10","type":""}],"src":"7351:126:10"},{"body":{"nativeSrc":"7554:66:10","nodeType":"YulBlock","src":"7554:66:10","statements":[{"nativeSrc":"7564:50:10","nodeType":"YulAssignment","src":"7564:50:10","value":{"arguments":[{"name":"value","nativeSrc":"7608:5:10","nodeType":"YulIdentifier","src":"7608:5:10"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"7577:30:10","nodeType":"YulIdentifier","src":"7577:30:10"},"nativeSrc":"7577:37:10","nodeType":"YulFunctionCall","src":"7577:37:10"},"variableNames":[{"name":"converted","nativeSrc":"7564:9:10","nodeType":"YulIdentifier","src":"7564:9:10"}]}]},"name":"convert_t_contract$_ISP_$495_to_t_address","nativeSrc":"7483:137:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7534:5:10","nodeType":"YulTypedName","src":"7534:5:10","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"7544:9:10","nodeType":"YulTypedName","src":"7544:9:10","type":""}],"src":"7483:137:10"},{"body":{"nativeSrc":"7702:77:10","nodeType":"YulBlock","src":"7702:77:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7719:3:10","nodeType":"YulIdentifier","src":"7719:3:10"},{"arguments":[{"name":"value","nativeSrc":"7766:5:10","nodeType":"YulIdentifier","src":"7766:5:10"}],"functionName":{"name":"convert_t_contract$_ISP_$495_to_t_address","nativeSrc":"7724:41:10","nodeType":"YulIdentifier","src":"7724:41:10"},"nativeSrc":"7724:48:10","nodeType":"YulFunctionCall","src":"7724:48:10"}],"functionName":{"name":"mstore","nativeSrc":"7712:6:10","nodeType":"YulIdentifier","src":"7712:6:10"},"nativeSrc":"7712:61:10","nodeType":"YulFunctionCall","src":"7712:61:10"},"nativeSrc":"7712:61:10","nodeType":"YulExpressionStatement","src":"7712:61:10"}]},"name":"abi_encode_t_contract$_ISP_$495_to_t_address_fromStack","nativeSrc":"7626:153:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7690:5:10","nodeType":"YulTypedName","src":"7690:5:10","type":""},{"name":"pos","nativeSrc":"7697:3:10","nodeType":"YulTypedName","src":"7697:3:10","type":""}],"src":"7626:153:10"},{"body":{"nativeSrc":"7894:135:10","nodeType":"YulBlock","src":"7894:135:10","statements":[{"nativeSrc":"7904:26:10","nodeType":"YulAssignment","src":"7904:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"7916:9:10","nodeType":"YulIdentifier","src":"7916:9:10"},{"kind":"number","nativeSrc":"7927:2:10","nodeType":"YulLiteral","src":"7927:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7912:3:10","nodeType":"YulIdentifier","src":"7912:3:10"},"nativeSrc":"7912:18:10","nodeType":"YulFunctionCall","src":"7912:18:10"},"variableNames":[{"name":"tail","nativeSrc":"7904:4:10","nodeType":"YulIdentifier","src":"7904:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7995:6:10","nodeType":"YulIdentifier","src":"7995:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"8008:9:10","nodeType":"YulIdentifier","src":"8008:9:10"},{"kind":"number","nativeSrc":"8019:1:10","nodeType":"YulLiteral","src":"8019:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8004:3:10","nodeType":"YulIdentifier","src":"8004:3:10"},"nativeSrc":"8004:17:10","nodeType":"YulFunctionCall","src":"8004:17:10"}],"functionName":{"name":"abi_encode_t_contract$_ISP_$495_to_t_address_fromStack","nativeSrc":"7940:54:10","nodeType":"YulIdentifier","src":"7940:54:10"},"nativeSrc":"7940:82:10","nodeType":"YulFunctionCall","src":"7940:82:10"},"nativeSrc":"7940:82:10","nodeType":"YulExpressionStatement","src":"7940:82:10"}]},"name":"abi_encode_tuple_t_contract$_ISP_$495__to_t_address__fromStack_reversed","nativeSrc":"7785:244:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7866:9:10","nodeType":"YulTypedName","src":"7866:9:10","type":""},{"name":"value0","nativeSrc":"7878:6:10","nodeType":"YulTypedName","src":"7878:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7889:4:10","nodeType":"YulTypedName","src":"7889:4:10","type":""}],"src":"7785:244:10"},{"body":{"nativeSrc":"8077:78:10","nodeType":"YulBlock","src":"8077:78:10","statements":[{"body":{"nativeSrc":"8133:16:10","nodeType":"YulBlock","src":"8133:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8142:1:10","nodeType":"YulLiteral","src":"8142:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"8145:1:10","nodeType":"YulLiteral","src":"8145:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8135:6:10","nodeType":"YulIdentifier","src":"8135:6:10"},"nativeSrc":"8135:12:10","nodeType":"YulFunctionCall","src":"8135:12:10"},"nativeSrc":"8135:12:10","nodeType":"YulExpressionStatement","src":"8135:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8100:5:10","nodeType":"YulIdentifier","src":"8100:5:10"},{"arguments":[{"name":"value","nativeSrc":"8124:5:10","nodeType":"YulIdentifier","src":"8124:5:10"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"8107:16:10","nodeType":"YulIdentifier","src":"8107:16:10"},"nativeSrc":"8107:23:10","nodeType":"YulFunctionCall","src":"8107:23:10"}],"functionName":{"name":"eq","nativeSrc":"8097:2:10","nodeType":"YulIdentifier","src":"8097:2:10"},"nativeSrc":"8097:34:10","nodeType":"YulFunctionCall","src":"8097:34:10"}],"functionName":{"name":"iszero","nativeSrc":"8090:6:10","nodeType":"YulIdentifier","src":"8090:6:10"},"nativeSrc":"8090:42:10","nodeType":"YulFunctionCall","src":"8090:42:10"},"nativeSrc":"8087:62:10","nodeType":"YulIf","src":"8087:62:10"}]},"name":"validator_revert_t_uint64","nativeSrc":"8035:120:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8070:5:10","nodeType":"YulTypedName","src":"8070:5:10","type":""}],"src":"8035:120:10"},{"body":{"nativeSrc":"8212:86:10","nodeType":"YulBlock","src":"8212:86:10","statements":[{"nativeSrc":"8222:29:10","nodeType":"YulAssignment","src":"8222:29:10","value":{"arguments":[{"name":"offset","nativeSrc":"8244:6:10","nodeType":"YulIdentifier","src":"8244:6:10"}],"functionName":{"name":"calldataload","nativeSrc":"8231:12:10","nodeType":"YulIdentifier","src":"8231:12:10"},"nativeSrc":"8231:20:10","nodeType":"YulFunctionCall","src":"8231:20:10"},"variableNames":[{"name":"value","nativeSrc":"8222:5:10","nodeType":"YulIdentifier","src":"8222:5:10"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"8286:5:10","nodeType":"YulIdentifier","src":"8286:5:10"}],"functionName":{"name":"validator_revert_t_uint64","nativeSrc":"8260:25:10","nodeType":"YulIdentifier","src":"8260:25:10"},"nativeSrc":"8260:32:10","nodeType":"YulFunctionCall","src":"8260:32:10"},"nativeSrc":"8260:32:10","nodeType":"YulExpressionStatement","src":"8260:32:10"}]},"name":"abi_decode_t_uint64","nativeSrc":"8161:137:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"8190:6:10","nodeType":"YulTypedName","src":"8190:6:10","type":""},{"name":"end","nativeSrc":"8198:3:10","nodeType":"YulTypedName","src":"8198:3:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"8206:5:10","nodeType":"YulTypedName","src":"8206:5:10","type":""}],"src":"8161:137:10"},{"body":{"nativeSrc":"8369:262:10","nodeType":"YulBlock","src":"8369:262:10","statements":[{"body":{"nativeSrc":"8415:83:10","nodeType":"YulBlock","src":"8415:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8417:77:10","nodeType":"YulIdentifier","src":"8417:77:10"},"nativeSrc":"8417:79:10","nodeType":"YulFunctionCall","src":"8417:79:10"},"nativeSrc":"8417:79:10","nodeType":"YulExpressionStatement","src":"8417:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8390:7:10","nodeType":"YulIdentifier","src":"8390:7:10"},{"name":"headStart","nativeSrc":"8399:9:10","nodeType":"YulIdentifier","src":"8399:9:10"}],"functionName":{"name":"sub","nativeSrc":"8386:3:10","nodeType":"YulIdentifier","src":"8386:3:10"},"nativeSrc":"8386:23:10","nodeType":"YulFunctionCall","src":"8386:23:10"},{"kind":"number","nativeSrc":"8411:2:10","nodeType":"YulLiteral","src":"8411:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"8382:3:10","nodeType":"YulIdentifier","src":"8382:3:10"},"nativeSrc":"8382:32:10","nodeType":"YulFunctionCall","src":"8382:32:10"},"nativeSrc":"8379:119:10","nodeType":"YulIf","src":"8379:119:10"},{"nativeSrc":"8508:116:10","nodeType":"YulBlock","src":"8508:116:10","statements":[{"nativeSrc":"8523:15:10","nodeType":"YulVariableDeclaration","src":"8523:15:10","value":{"kind":"number","nativeSrc":"8537:1:10","nodeType":"YulLiteral","src":"8537:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8527:6:10","nodeType":"YulTypedName","src":"8527:6:10","type":""}]},{"nativeSrc":"8552:62:10","nodeType":"YulAssignment","src":"8552:62:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8586:9:10","nodeType":"YulIdentifier","src":"8586:9:10"},{"name":"offset","nativeSrc":"8597:6:10","nodeType":"YulIdentifier","src":"8597:6:10"}],"functionName":{"name":"add","nativeSrc":"8582:3:10","nodeType":"YulIdentifier","src":"8582:3:10"},"nativeSrc":"8582:22:10","nodeType":"YulFunctionCall","src":"8582:22:10"},{"name":"dataEnd","nativeSrc":"8606:7:10","nodeType":"YulIdentifier","src":"8606:7:10"}],"functionName":{"name":"abi_decode_t_uint64","nativeSrc":"8562:19:10","nodeType":"YulIdentifier","src":"8562:19:10"},"nativeSrc":"8562:52:10","nodeType":"YulFunctionCall","src":"8562:52:10"},"variableNames":[{"name":"value0","nativeSrc":"8552:6:10","nodeType":"YulIdentifier","src":"8552:6:10"}]}]}]},"name":"abi_decode_tuple_t_uint64","nativeSrc":"8304:327:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8339:9:10","nodeType":"YulTypedName","src":"8339:9:10","type":""},{"name":"dataEnd","nativeSrc":"8350:7:10","nodeType":"YulTypedName","src":"8350:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8362:6:10","nodeType":"YulTypedName","src":"8362:6:10","type":""}],"src":"8304:327:10"},{"body":{"nativeSrc":"8726:28:10","nodeType":"YulBlock","src":"8726:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8743:1:10","nodeType":"YulLiteral","src":"8743:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"8746:1:10","nodeType":"YulLiteral","src":"8746:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8736:6:10","nodeType":"YulIdentifier","src":"8736:6:10"},"nativeSrc":"8736:12:10","nodeType":"YulFunctionCall","src":"8736:12:10"},"nativeSrc":"8736:12:10","nodeType":"YulExpressionStatement","src":"8736:12:10"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"8637:117:10","nodeType":"YulFunctionDefinition","src":"8637:117:10"},{"body":{"nativeSrc":"8849:28:10","nodeType":"YulBlock","src":"8849:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8866:1:10","nodeType":"YulLiteral","src":"8866:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"8869:1:10","nodeType":"YulLiteral","src":"8869:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8859:6:10","nodeType":"YulIdentifier","src":"8859:6:10"},"nativeSrc":"8859:12:10","nodeType":"YulFunctionCall","src":"8859:12:10"},"nativeSrc":"8859:12:10","nodeType":"YulExpressionStatement","src":"8859:12:10"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"8760:117:10","nodeType":"YulFunctionDefinition","src":"8760:117:10"},{"body":{"nativeSrc":"8970:478:10","nodeType":"YulBlock","src":"8970:478:10","statements":[{"body":{"nativeSrc":"9019:83:10","nodeType":"YulBlock","src":"9019:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"9021:77:10","nodeType":"YulIdentifier","src":"9021:77:10"},"nativeSrc":"9021:79:10","nodeType":"YulFunctionCall","src":"9021:79:10"},"nativeSrc":"9021:79:10","nodeType":"YulExpressionStatement","src":"9021:79:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"8998:6:10","nodeType":"YulIdentifier","src":"8998:6:10"},{"kind":"number","nativeSrc":"9006:4:10","nodeType":"YulLiteral","src":"9006:4:10","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"8994:3:10","nodeType":"YulIdentifier","src":"8994:3:10"},"nativeSrc":"8994:17:10","nodeType":"YulFunctionCall","src":"8994:17:10"},{"name":"end","nativeSrc":"9013:3:10","nodeType":"YulIdentifier","src":"9013:3:10"}],"functionName":{"name":"slt","nativeSrc":"8990:3:10","nodeType":"YulIdentifier","src":"8990:3:10"},"nativeSrc":"8990:27:10","nodeType":"YulFunctionCall","src":"8990:27:10"}],"functionName":{"name":"iszero","nativeSrc":"8983:6:10","nodeType":"YulIdentifier","src":"8983:6:10"},"nativeSrc":"8983:35:10","nodeType":"YulFunctionCall","src":"8983:35:10"},"nativeSrc":"8980:122:10","nodeType":"YulIf","src":"8980:122:10"},{"nativeSrc":"9111:30:10","nodeType":"YulAssignment","src":"9111:30:10","value":{"arguments":[{"name":"offset","nativeSrc":"9134:6:10","nodeType":"YulIdentifier","src":"9134:6:10"}],"functionName":{"name":"calldataload","nativeSrc":"9121:12:10","nodeType":"YulIdentifier","src":"9121:12:10"},"nativeSrc":"9121:20:10","nodeType":"YulFunctionCall","src":"9121:20:10"},"variableNames":[{"name":"length","nativeSrc":"9111:6:10","nodeType":"YulIdentifier","src":"9111:6:10"}]},{"body":{"nativeSrc":"9184:83:10","nodeType":"YulBlock","src":"9184:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"9186:77:10","nodeType":"YulIdentifier","src":"9186:77:10"},"nativeSrc":"9186:79:10","nodeType":"YulFunctionCall","src":"9186:79:10"},"nativeSrc":"9186:79:10","nodeType":"YulExpressionStatement","src":"9186:79:10"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"9156:6:10","nodeType":"YulIdentifier","src":"9156:6:10"},{"kind":"number","nativeSrc":"9164:18:10","nodeType":"YulLiteral","src":"9164:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9153:2:10","nodeType":"YulIdentifier","src":"9153:2:10"},"nativeSrc":"9153:30:10","nodeType":"YulFunctionCall","src":"9153:30:10"},"nativeSrc":"9150:117:10","nodeType":"YulIf","src":"9150:117:10"},{"nativeSrc":"9276:29:10","nodeType":"YulAssignment","src":"9276:29:10","value":{"arguments":[{"name":"offset","nativeSrc":"9292:6:10","nodeType":"YulIdentifier","src":"9292:6:10"},{"kind":"number","nativeSrc":"9300:4:10","nodeType":"YulLiteral","src":"9300:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9288:3:10","nodeType":"YulIdentifier","src":"9288:3:10"},"nativeSrc":"9288:17:10","nodeType":"YulFunctionCall","src":"9288:17:10"},"variableNames":[{"name":"arrayPos","nativeSrc":"9276:8:10","nodeType":"YulIdentifier","src":"9276:8:10"}]},{"body":{"nativeSrc":"9359:83:10","nodeType":"YulBlock","src":"9359:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"9361:77:10","nodeType":"YulIdentifier","src":"9361:77:10"},"nativeSrc":"9361:79:10","nodeType":"YulFunctionCall","src":"9361:79:10"},"nativeSrc":"9361:79:10","nodeType":"YulExpressionStatement","src":"9361:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"9324:8:10","nodeType":"YulIdentifier","src":"9324:8:10"},{"arguments":[{"name":"length","nativeSrc":"9338:6:10","nodeType":"YulIdentifier","src":"9338:6:10"},{"kind":"number","nativeSrc":"9346:4:10","nodeType":"YulLiteral","src":"9346:4:10","type":"","value":"0x01"}],"functionName":{"name":"mul","nativeSrc":"9334:3:10","nodeType":"YulIdentifier","src":"9334:3:10"},"nativeSrc":"9334:17:10","nodeType":"YulFunctionCall","src":"9334:17:10"}],"functionName":{"name":"add","nativeSrc":"9320:3:10","nodeType":"YulIdentifier","src":"9320:3:10"},"nativeSrc":"9320:32:10","nodeType":"YulFunctionCall","src":"9320:32:10"},{"name":"end","nativeSrc":"9354:3:10","nodeType":"YulIdentifier","src":"9354:3:10"}],"functionName":{"name":"gt","nativeSrc":"9317:2:10","nodeType":"YulIdentifier","src":"9317:2:10"},"nativeSrc":"9317:41:10","nodeType":"YulFunctionCall","src":"9317:41:10"},"nativeSrc":"9314:128:10","nodeType":"YulIf","src":"9314:128:10"}]},"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"8896:552:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"8937:6:10","nodeType":"YulTypedName","src":"8937:6:10","type":""},{"name":"end","nativeSrc":"8945:3:10","nodeType":"YulTypedName","src":"8945:3:10","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"8953:8:10","nodeType":"YulTypedName","src":"8953:8:10","type":""},{"name":"length","nativeSrc":"8963:6:10","nodeType":"YulTypedName","src":"8963:6:10","type":""}],"src":"8896:552:10"},{"body":{"nativeSrc":"9570:478:10","nodeType":"YulBlock","src":"9570:478:10","statements":[{"body":{"nativeSrc":"9619:83:10","nodeType":"YulBlock","src":"9619:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"9621:77:10","nodeType":"YulIdentifier","src":"9621:77:10"},"nativeSrc":"9621:79:10","nodeType":"YulFunctionCall","src":"9621:79:10"},"nativeSrc":"9621:79:10","nodeType":"YulExpressionStatement","src":"9621:79:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"9598:6:10","nodeType":"YulIdentifier","src":"9598:6:10"},{"kind":"number","nativeSrc":"9606:4:10","nodeType":"YulLiteral","src":"9606:4:10","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"9594:3:10","nodeType":"YulIdentifier","src":"9594:3:10"},"nativeSrc":"9594:17:10","nodeType":"YulFunctionCall","src":"9594:17:10"},{"name":"end","nativeSrc":"9613:3:10","nodeType":"YulIdentifier","src":"9613:3:10"}],"functionName":{"name":"slt","nativeSrc":"9590:3:10","nodeType":"YulIdentifier","src":"9590:3:10"},"nativeSrc":"9590:27:10","nodeType":"YulFunctionCall","src":"9590:27:10"}],"functionName":{"name":"iszero","nativeSrc":"9583:6:10","nodeType":"YulIdentifier","src":"9583:6:10"},"nativeSrc":"9583:35:10","nodeType":"YulFunctionCall","src":"9583:35:10"},"nativeSrc":"9580:122:10","nodeType":"YulIf","src":"9580:122:10"},{"nativeSrc":"9711:30:10","nodeType":"YulAssignment","src":"9711:30:10","value":{"arguments":[{"name":"offset","nativeSrc":"9734:6:10","nodeType":"YulIdentifier","src":"9734:6:10"}],"functionName":{"name":"calldataload","nativeSrc":"9721:12:10","nodeType":"YulIdentifier","src":"9721:12:10"},"nativeSrc":"9721:20:10","nodeType":"YulFunctionCall","src":"9721:20:10"},"variableNames":[{"name":"length","nativeSrc":"9711:6:10","nodeType":"YulIdentifier","src":"9711:6:10"}]},{"body":{"nativeSrc":"9784:83:10","nodeType":"YulBlock","src":"9784:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"9786:77:10","nodeType":"YulIdentifier","src":"9786:77:10"},"nativeSrc":"9786:79:10","nodeType":"YulFunctionCall","src":"9786:79:10"},"nativeSrc":"9786:79:10","nodeType":"YulExpressionStatement","src":"9786:79:10"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"9756:6:10","nodeType":"YulIdentifier","src":"9756:6:10"},{"kind":"number","nativeSrc":"9764:18:10","nodeType":"YulLiteral","src":"9764:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9753:2:10","nodeType":"YulIdentifier","src":"9753:2:10"},"nativeSrc":"9753:30:10","nodeType":"YulFunctionCall","src":"9753:30:10"},"nativeSrc":"9750:117:10","nodeType":"YulIf","src":"9750:117:10"},{"nativeSrc":"9876:29:10","nodeType":"YulAssignment","src":"9876:29:10","value":{"arguments":[{"name":"offset","nativeSrc":"9892:6:10","nodeType":"YulIdentifier","src":"9892:6:10"},{"kind":"number","nativeSrc":"9900:4:10","nodeType":"YulLiteral","src":"9900:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9888:3:10","nodeType":"YulIdentifier","src":"9888:3:10"},"nativeSrc":"9888:17:10","nodeType":"YulFunctionCall","src":"9888:17:10"},"variableNames":[{"name":"arrayPos","nativeSrc":"9876:8:10","nodeType":"YulIdentifier","src":"9876:8:10"}]},{"body":{"nativeSrc":"9959:83:10","nodeType":"YulBlock","src":"9959:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"9961:77:10","nodeType":"YulIdentifier","src":"9961:77:10"},"nativeSrc":"9961:79:10","nodeType":"YulFunctionCall","src":"9961:79:10"},"nativeSrc":"9961:79:10","nodeType":"YulExpressionStatement","src":"9961:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"9924:8:10","nodeType":"YulIdentifier","src":"9924:8:10"},{"arguments":[{"name":"length","nativeSrc":"9938:6:10","nodeType":"YulIdentifier","src":"9938:6:10"},{"kind":"number","nativeSrc":"9946:4:10","nodeType":"YulLiteral","src":"9946:4:10","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"9934:3:10","nodeType":"YulIdentifier","src":"9934:3:10"},"nativeSrc":"9934:17:10","nodeType":"YulFunctionCall","src":"9934:17:10"}],"functionName":{"name":"add","nativeSrc":"9920:3:10","nodeType":"YulIdentifier","src":"9920:3:10"},"nativeSrc":"9920:32:10","nodeType":"YulFunctionCall","src":"9920:32:10"},{"name":"end","nativeSrc":"9954:3:10","nodeType":"YulIdentifier","src":"9954:3:10"}],"functionName":{"name":"gt","nativeSrc":"9917:2:10","nodeType":"YulIdentifier","src":"9917:2:10"},"nativeSrc":"9917:41:10","nodeType":"YulFunctionCall","src":"9917:41:10"},"nativeSrc":"9914:128:10","nodeType":"YulIf","src":"9914:128:10"}]},"name":"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nativeSrc":"9469:579:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"9537:6:10","nodeType":"YulTypedName","src":"9537:6:10","type":""},{"name":"end","nativeSrc":"9545:3:10","nodeType":"YulTypedName","src":"9545:3:10","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"9553:8:10","nodeType":"YulTypedName","src":"9553:8:10","type":""},{"name":"length","nativeSrc":"9563:6:10","nodeType":"YulTypedName","src":"9563:6:10","type":""}],"src":"9469:579:10"},{"body":{"nativeSrc":"10218:903:10","nodeType":"YulBlock","src":"10218:903:10","statements":[{"body":{"nativeSrc":"10264:83:10","nodeType":"YulBlock","src":"10264:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10266:77:10","nodeType":"YulIdentifier","src":"10266:77:10"},"nativeSrc":"10266:79:10","nodeType":"YulFunctionCall","src":"10266:79:10"},"nativeSrc":"10266:79:10","nodeType":"YulExpressionStatement","src":"10266:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10239:7:10","nodeType":"YulIdentifier","src":"10239:7:10"},{"name":"headStart","nativeSrc":"10248:9:10","nodeType":"YulIdentifier","src":"10248:9:10"}],"functionName":{"name":"sub","nativeSrc":"10235:3:10","nodeType":"YulIdentifier","src":"10235:3:10"},"nativeSrc":"10235:23:10","nodeType":"YulFunctionCall","src":"10235:23:10"},{"kind":"number","nativeSrc":"10260:2:10","nodeType":"YulLiteral","src":"10260:2:10","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"10231:3:10","nodeType":"YulIdentifier","src":"10231:3:10"},"nativeSrc":"10231:32:10","nodeType":"YulFunctionCall","src":"10231:32:10"},"nativeSrc":"10228:119:10","nodeType":"YulIf","src":"10228:119:10"},{"nativeSrc":"10357:116:10","nodeType":"YulBlock","src":"10357:116:10","statements":[{"nativeSrc":"10372:15:10","nodeType":"YulVariableDeclaration","src":"10372:15:10","value":{"kind":"number","nativeSrc":"10386:1:10","nodeType":"YulLiteral","src":"10386:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"10376:6:10","nodeType":"YulTypedName","src":"10376:6:10","type":""}]},{"nativeSrc":"10401:62:10","nodeType":"YulAssignment","src":"10401:62:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10435:9:10","nodeType":"YulIdentifier","src":"10435:9:10"},{"name":"offset","nativeSrc":"10446:6:10","nodeType":"YulIdentifier","src":"10446:6:10"}],"functionName":{"name":"add","nativeSrc":"10431:3:10","nodeType":"YulIdentifier","src":"10431:3:10"},"nativeSrc":"10431:22:10","nodeType":"YulFunctionCall","src":"10431:22:10"},{"name":"dataEnd","nativeSrc":"10455:7:10","nodeType":"YulIdentifier","src":"10455:7:10"}],"functionName":{"name":"abi_decode_t_uint64","nativeSrc":"10411:19:10","nodeType":"YulIdentifier","src":"10411:19:10"},"nativeSrc":"10411:52:10","nodeType":"YulFunctionCall","src":"10411:52:10"},"variableNames":[{"name":"value0","nativeSrc":"10401:6:10","nodeType":"YulIdentifier","src":"10401:6:10"}]}]},{"nativeSrc":"10483:297:10","nodeType":"YulBlock","src":"10483:297:10","statements":[{"nativeSrc":"10498:46:10","nodeType":"YulVariableDeclaration","src":"10498:46:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10529:9:10","nodeType":"YulIdentifier","src":"10529:9:10"},{"kind":"number","nativeSrc":"10540:2:10","nodeType":"YulLiteral","src":"10540:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10525:3:10","nodeType":"YulIdentifier","src":"10525:3:10"},"nativeSrc":"10525:18:10","nodeType":"YulFunctionCall","src":"10525:18:10"}],"functionName":{"name":"calldataload","nativeSrc":"10512:12:10","nodeType":"YulIdentifier","src":"10512:12:10"},"nativeSrc":"10512:32:10","nodeType":"YulFunctionCall","src":"10512:32:10"},"variables":[{"name":"offset","nativeSrc":"10502:6:10","nodeType":"YulTypedName","src":"10502:6:10","type":""}]},{"body":{"nativeSrc":"10591:83:10","nodeType":"YulBlock","src":"10591:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"10593:77:10","nodeType":"YulIdentifier","src":"10593:77:10"},"nativeSrc":"10593:79:10","nodeType":"YulFunctionCall","src":"10593:79:10"},"nativeSrc":"10593:79:10","nodeType":"YulExpressionStatement","src":"10593:79:10"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"10563:6:10","nodeType":"YulIdentifier","src":"10563:6:10"},{"kind":"number","nativeSrc":"10571:18:10","nodeType":"YulLiteral","src":"10571:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10560:2:10","nodeType":"YulIdentifier","src":"10560:2:10"},"nativeSrc":"10560:30:10","nodeType":"YulFunctionCall","src":"10560:30:10"},"nativeSrc":"10557:117:10","nodeType":"YulIf","src":"10557:117:10"},{"nativeSrc":"10688:82:10","nodeType":"YulAssignment","src":"10688:82:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10742:9:10","nodeType":"YulIdentifier","src":"10742:9:10"},{"name":"offset","nativeSrc":"10753:6:10","nodeType":"YulIdentifier","src":"10753:6:10"}],"functionName":{"name":"add","nativeSrc":"10738:3:10","nodeType":"YulIdentifier","src":"10738:3:10"},"nativeSrc":"10738:22:10","nodeType":"YulFunctionCall","src":"10738:22:10"},{"name":"dataEnd","nativeSrc":"10762:7:10","nodeType":"YulIdentifier","src":"10762:7:10"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"10706:31:10","nodeType":"YulIdentifier","src":"10706:31:10"},"nativeSrc":"10706:64:10","nodeType":"YulFunctionCall","src":"10706:64:10"},"variableNames":[{"name":"value1","nativeSrc":"10688:6:10","nodeType":"YulIdentifier","src":"10688:6:10"},{"name":"value2","nativeSrc":"10696:6:10","nodeType":"YulIdentifier","src":"10696:6:10"}]}]},{"nativeSrc":"10790:324:10","nodeType":"YulBlock","src":"10790:324:10","statements":[{"nativeSrc":"10805:46:10","nodeType":"YulVariableDeclaration","src":"10805:46:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10836:9:10","nodeType":"YulIdentifier","src":"10836:9:10"},{"kind":"number","nativeSrc":"10847:2:10","nodeType":"YulLiteral","src":"10847:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10832:3:10","nodeType":"YulIdentifier","src":"10832:3:10"},"nativeSrc":"10832:18:10","nodeType":"YulFunctionCall","src":"10832:18:10"}],"functionName":{"name":"calldataload","nativeSrc":"10819:12:10","nodeType":"YulIdentifier","src":"10819:12:10"},"nativeSrc":"10819:32:10","nodeType":"YulFunctionCall","src":"10819:32:10"},"variables":[{"name":"offset","nativeSrc":"10809:6:10","nodeType":"YulTypedName","src":"10809:6:10","type":""}]},{"body":{"nativeSrc":"10898:83:10","nodeType":"YulBlock","src":"10898:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"10900:77:10","nodeType":"YulIdentifier","src":"10900:77:10"},"nativeSrc":"10900:79:10","nodeType":"YulFunctionCall","src":"10900:79:10"},"nativeSrc":"10900:79:10","nodeType":"YulExpressionStatement","src":"10900:79:10"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"10870:6:10","nodeType":"YulIdentifier","src":"10870:6:10"},{"kind":"number","nativeSrc":"10878:18:10","nodeType":"YulLiteral","src":"10878:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10867:2:10","nodeType":"YulIdentifier","src":"10867:2:10"},"nativeSrc":"10867:30:10","nodeType":"YulFunctionCall","src":"10867:30:10"},"nativeSrc":"10864:117:10","nodeType":"YulIf","src":"10864:117:10"},{"nativeSrc":"10995:109:10","nodeType":"YulAssignment","src":"10995:109:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11076:9:10","nodeType":"YulIdentifier","src":"11076:9:10"},{"name":"offset","nativeSrc":"11087:6:10","nodeType":"YulIdentifier","src":"11087:6:10"}],"functionName":{"name":"add","nativeSrc":"11072:3:10","nodeType":"YulIdentifier","src":"11072:3:10"},"nativeSrc":"11072:22:10","nodeType":"YulFunctionCall","src":"11072:22:10"},{"name":"dataEnd","nativeSrc":"11096:7:10","nodeType":"YulIdentifier","src":"11096:7:10"}],"functionName":{"name":"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nativeSrc":"11013:58:10","nodeType":"YulIdentifier","src":"11013:58:10"},"nativeSrc":"11013:91:10","nodeType":"YulFunctionCall","src":"11013:91:10"},"variableNames":[{"name":"value3","nativeSrc":"10995:6:10","nodeType":"YulIdentifier","src":"10995:6:10"},{"name":"value4","nativeSrc":"11003:6:10","nodeType":"YulIdentifier","src":"11003:6:10"}]}]}]},"name":"abi_decode_tuple_t_uint64t_bytes_calldata_ptrt_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nativeSrc":"10054:1067:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10156:9:10","nodeType":"YulTypedName","src":"10156:9:10","type":""},{"name":"dataEnd","nativeSrc":"10167:7:10","nodeType":"YulTypedName","src":"10167:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10179:6:10","nodeType":"YulTypedName","src":"10179:6:10","type":""},{"name":"value1","nativeSrc":"10187:6:10","nodeType":"YulTypedName","src":"10187:6:10","type":""},{"name":"value2","nativeSrc":"10195:6:10","nodeType":"YulTypedName","src":"10195:6:10","type":""},{"name":"value3","nativeSrc":"10203:6:10","nodeType":"YulTypedName","src":"10203:6:10","type":""},{"name":"value4","nativeSrc":"10211:6:10","nodeType":"YulTypedName","src":"10211:6:10","type":""}],"src":"10054:1067:10"},{"body":{"nativeSrc":"11219:118:10","nodeType":"YulBlock","src":"11219:118:10","statements":[{"nativeSrc":"11229:26:10","nodeType":"YulAssignment","src":"11229:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"11241:9:10","nodeType":"YulIdentifier","src":"11241:9:10"},{"kind":"number","nativeSrc":"11252:2:10","nodeType":"YulLiteral","src":"11252:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11237:3:10","nodeType":"YulIdentifier","src":"11237:3:10"},"nativeSrc":"11237:18:10","nodeType":"YulFunctionCall","src":"11237:18:10"},"variableNames":[{"name":"tail","nativeSrc":"11229:4:10","nodeType":"YulIdentifier","src":"11229:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11303:6:10","nodeType":"YulIdentifier","src":"11303:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"11316:9:10","nodeType":"YulIdentifier","src":"11316:9:10"},{"kind":"number","nativeSrc":"11327:1:10","nodeType":"YulLiteral","src":"11327:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11312:3:10","nodeType":"YulIdentifier","src":"11312:3:10"},"nativeSrc":"11312:17:10","nodeType":"YulFunctionCall","src":"11312:17:10"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"11265:37:10","nodeType":"YulIdentifier","src":"11265:37:10"},"nativeSrc":"11265:65:10","nodeType":"YulFunctionCall","src":"11265:65:10"},"nativeSrc":"11265:65:10","nodeType":"YulExpressionStatement","src":"11265:65:10"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"11127:210:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11191:9:10","nodeType":"YulTypedName","src":"11191:9:10","type":""},{"name":"value0","nativeSrc":"11203:6:10","nodeType":"YulTypedName","src":"11203:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11214:4:10","nodeType":"YulTypedName","src":"11214:4:10","type":""}],"src":"11127:210:10"},{"body":{"nativeSrc":"11432:28:10","nodeType":"YulBlock","src":"11432:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11449:1:10","nodeType":"YulLiteral","src":"11449:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"11452:1:10","nodeType":"YulLiteral","src":"11452:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11442:6:10","nodeType":"YulIdentifier","src":"11442:6:10"},"nativeSrc":"11442:12:10","nodeType":"YulFunctionCall","src":"11442:12:10"},"nativeSrc":"11442:12:10","nodeType":"YulExpressionStatement","src":"11442:12:10"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nativeSrc":"11343:117:10","nodeType":"YulFunctionDefinition","src":"11343:117:10"},{"body":{"nativeSrc":"11555:28:10","nodeType":"YulBlock","src":"11555:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11572:1:10","nodeType":"YulLiteral","src":"11572:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"11575:1:10","nodeType":"YulLiteral","src":"11575:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11565:6:10","nodeType":"YulIdentifier","src":"11565:6:10"},"nativeSrc":"11565:12:10","nodeType":"YulFunctionCall","src":"11565:12:10"},"nativeSrc":"11565:12:10","nodeType":"YulExpressionStatement","src":"11565:12:10"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nativeSrc":"11466:117:10","nodeType":"YulFunctionDefinition","src":"11466:117:10"},{"body":{"nativeSrc":"11651:79:10","nodeType":"YulBlock","src":"11651:79:10","statements":[{"nativeSrc":"11661:22:10","nodeType":"YulAssignment","src":"11661:22:10","value":{"arguments":[{"name":"offset","nativeSrc":"11676:6:10","nodeType":"YulIdentifier","src":"11676:6:10"}],"functionName":{"name":"mload","nativeSrc":"11670:5:10","nodeType":"YulIdentifier","src":"11670:5:10"},"nativeSrc":"11670:13:10","nodeType":"YulFunctionCall","src":"11670:13:10"},"variableNames":[{"name":"value","nativeSrc":"11661:5:10","nodeType":"YulIdentifier","src":"11661:5:10"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"11718:5:10","nodeType":"YulIdentifier","src":"11718:5:10"}],"functionName":{"name":"validator_revert_t_uint64","nativeSrc":"11692:25:10","nodeType":"YulIdentifier","src":"11692:25:10"},"nativeSrc":"11692:32:10","nodeType":"YulFunctionCall","src":"11692:32:10"},"nativeSrc":"11692:32:10","nodeType":"YulExpressionStatement","src":"11692:32:10"}]},"name":"abi_decode_t_uint64_fromMemory","nativeSrc":"11589:141:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"11629:6:10","nodeType":"YulTypedName","src":"11629:6:10","type":""},{"name":"end","nativeSrc":"11637:3:10","nodeType":"YulTypedName","src":"11637:3:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"11645:5:10","nodeType":"YulTypedName","src":"11645:5:10","type":""}],"src":"11589:141:10"},{"body":{"nativeSrc":"11799:80:10","nodeType":"YulBlock","src":"11799:80:10","statements":[{"nativeSrc":"11809:22:10","nodeType":"YulAssignment","src":"11809:22:10","value":{"arguments":[{"name":"offset","nativeSrc":"11824:6:10","nodeType":"YulIdentifier","src":"11824:6:10"}],"functionName":{"name":"mload","nativeSrc":"11818:5:10","nodeType":"YulIdentifier","src":"11818:5:10"},"nativeSrc":"11818:13:10","nodeType":"YulFunctionCall","src":"11818:13:10"},"variableNames":[{"name":"value","nativeSrc":"11809:5:10","nodeType":"YulIdentifier","src":"11809:5:10"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"11867:5:10","nodeType":"YulIdentifier","src":"11867:5:10"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"11840:26:10","nodeType":"YulIdentifier","src":"11840:26:10"},"nativeSrc":"11840:33:10","nodeType":"YulFunctionCall","src":"11840:33:10"},"nativeSrc":"11840:33:10","nodeType":"YulExpressionStatement","src":"11840:33:10"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"11736:143:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"11777:6:10","nodeType":"YulTypedName","src":"11777:6:10","type":""},{"name":"end","nativeSrc":"11785:3:10","nodeType":"YulTypedName","src":"11785:3:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"11793:5:10","nodeType":"YulTypedName","src":"11793:5:10","type":""}],"src":"11736:143:10"},{"body":{"nativeSrc":"11944:56:10","nodeType":"YulBlock","src":"11944:56:10","statements":[{"body":{"nativeSrc":"11978:16:10","nodeType":"YulBlock","src":"11978:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11987:1:10","nodeType":"YulLiteral","src":"11987:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"11990:1:10","nodeType":"YulLiteral","src":"11990:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11980:6:10","nodeType":"YulIdentifier","src":"11980:6:10"},"nativeSrc":"11980:12:10","nodeType":"YulFunctionCall","src":"11980:12:10"},"nativeSrc":"11980:12:10","nodeType":"YulExpressionStatement","src":"11980:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11967:5:10","nodeType":"YulIdentifier","src":"11967:5:10"},{"kind":"number","nativeSrc":"11974:1:10","nodeType":"YulLiteral","src":"11974:1:10","type":"","value":"4"}],"functionName":{"name":"lt","nativeSrc":"11964:2:10","nodeType":"YulIdentifier","src":"11964:2:10"},"nativeSrc":"11964:12:10","nodeType":"YulFunctionCall","src":"11964:12:10"}],"functionName":{"name":"iszero","nativeSrc":"11957:6:10","nodeType":"YulIdentifier","src":"11957:6:10"},"nativeSrc":"11957:20:10","nodeType":"YulFunctionCall","src":"11957:20:10"},"nativeSrc":"11954:40:10","nodeType":"YulIf","src":"11954:40:10"}]},"name":"validator_revert_t_enum$_DataLocation_$606","nativeSrc":"11885:115:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11937:5:10","nodeType":"YulTypedName","src":"11937:5:10","type":""}],"src":"11885:115:10"},{"body":{"nativeSrc":"12085:96:10","nodeType":"YulBlock","src":"12085:96:10","statements":[{"nativeSrc":"12095:22:10","nodeType":"YulAssignment","src":"12095:22:10","value":{"arguments":[{"name":"offset","nativeSrc":"12110:6:10","nodeType":"YulIdentifier","src":"12110:6:10"}],"functionName":{"name":"mload","nativeSrc":"12104:5:10","nodeType":"YulIdentifier","src":"12104:5:10"},"nativeSrc":"12104:13:10","nodeType":"YulFunctionCall","src":"12104:13:10"},"variableNames":[{"name":"value","nativeSrc":"12095:5:10","nodeType":"YulIdentifier","src":"12095:5:10"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"12169:5:10","nodeType":"YulIdentifier","src":"12169:5:10"}],"functionName":{"name":"validator_revert_t_enum$_DataLocation_$606","nativeSrc":"12126:42:10","nodeType":"YulIdentifier","src":"12126:42:10"},"nativeSrc":"12126:49:10","nodeType":"YulFunctionCall","src":"12126:49:10"},"nativeSrc":"12126:49:10","nodeType":"YulExpressionStatement","src":"12126:49:10"}]},"name":"abi_decode_t_enum$_DataLocation_$606_fromMemory","nativeSrc":"12006:175:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"12063:6:10","nodeType":"YulTypedName","src":"12063:6:10","type":""},{"name":"end","nativeSrc":"12071:3:10","nodeType":"YulTypedName","src":"12071:3:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"12079:5:10","nodeType":"YulTypedName","src":"12079:5:10","type":""}],"src":"12006:175:10"},{"body":{"nativeSrc":"12227:76:10","nodeType":"YulBlock","src":"12227:76:10","statements":[{"body":{"nativeSrc":"12281:16:10","nodeType":"YulBlock","src":"12281:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12290:1:10","nodeType":"YulLiteral","src":"12290:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"12293:1:10","nodeType":"YulLiteral","src":"12293:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"12283:6:10","nodeType":"YulIdentifier","src":"12283:6:10"},"nativeSrc":"12283:12:10","nodeType":"YulFunctionCall","src":"12283:12:10"},"nativeSrc":"12283:12:10","nodeType":"YulExpressionStatement","src":"12283:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"12250:5:10","nodeType":"YulIdentifier","src":"12250:5:10"},{"arguments":[{"name":"value","nativeSrc":"12272:5:10","nodeType":"YulIdentifier","src":"12272:5:10"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"12257:14:10","nodeType":"YulIdentifier","src":"12257:14:10"},"nativeSrc":"12257:21:10","nodeType":"YulFunctionCall","src":"12257:21:10"}],"functionName":{"name":"eq","nativeSrc":"12247:2:10","nodeType":"YulIdentifier","src":"12247:2:10"},"nativeSrc":"12247:32:10","nodeType":"YulFunctionCall","src":"12247:32:10"}],"functionName":{"name":"iszero","nativeSrc":"12240:6:10","nodeType":"YulIdentifier","src":"12240:6:10"},"nativeSrc":"12240:40:10","nodeType":"YulFunctionCall","src":"12240:40:10"},"nativeSrc":"12237:60:10","nodeType":"YulIf","src":"12237:60:10"}]},"name":"validator_revert_t_bool","nativeSrc":"12187:116:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12220:5:10","nodeType":"YulTypedName","src":"12220:5:10","type":""}],"src":"12187:116:10"},{"body":{"nativeSrc":"12369:77:10","nodeType":"YulBlock","src":"12369:77:10","statements":[{"nativeSrc":"12379:22:10","nodeType":"YulAssignment","src":"12379:22:10","value":{"arguments":[{"name":"offset","nativeSrc":"12394:6:10","nodeType":"YulIdentifier","src":"12394:6:10"}],"functionName":{"name":"mload","nativeSrc":"12388:5:10","nodeType":"YulIdentifier","src":"12388:5:10"},"nativeSrc":"12388:13:10","nodeType":"YulFunctionCall","src":"12388:13:10"},"variableNames":[{"name":"value","nativeSrc":"12379:5:10","nodeType":"YulIdentifier","src":"12379:5:10"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"12434:5:10","nodeType":"YulIdentifier","src":"12434:5:10"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"12410:23:10","nodeType":"YulIdentifier","src":"12410:23:10"},"nativeSrc":"12410:30:10","nodeType":"YulFunctionCall","src":"12410:30:10"},"nativeSrc":"12410:30:10","nodeType":"YulExpressionStatement","src":"12410:30:10"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"12309:137:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"12347:6:10","nodeType":"YulTypedName","src":"12347:6:10","type":""},{"name":"end","nativeSrc":"12355:3:10","nodeType":"YulTypedName","src":"12355:3:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"12363:5:10","nodeType":"YulTypedName","src":"12363:5:10","type":""}],"src":"12309:137:10"},{"body":{"nativeSrc":"12543:229:10","nodeType":"YulBlock","src":"12543:229:10","statements":[{"body":{"nativeSrc":"12648:22:10","nodeType":"YulBlock","src":"12648:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"12650:16:10","nodeType":"YulIdentifier","src":"12650:16:10"},"nativeSrc":"12650:18:10","nodeType":"YulFunctionCall","src":"12650:18:10"},"nativeSrc":"12650:18:10","nodeType":"YulExpressionStatement","src":"12650:18:10"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"12620:6:10","nodeType":"YulIdentifier","src":"12620:6:10"},{"kind":"number","nativeSrc":"12628:18:10","nodeType":"YulLiteral","src":"12628:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"12617:2:10","nodeType":"YulIdentifier","src":"12617:2:10"},"nativeSrc":"12617:30:10","nodeType":"YulFunctionCall","src":"12617:30:10"},"nativeSrc":"12614:56:10","nodeType":"YulIf","src":"12614:56:10"},{"nativeSrc":"12680:25:10","nodeType":"YulAssignment","src":"12680:25:10","value":{"arguments":[{"name":"length","nativeSrc":"12692:6:10","nodeType":"YulIdentifier","src":"12692:6:10"},{"kind":"number","nativeSrc":"12700:4:10","nodeType":"YulLiteral","src":"12700:4:10","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"12688:3:10","nodeType":"YulIdentifier","src":"12688:3:10"},"nativeSrc":"12688:17:10","nodeType":"YulFunctionCall","src":"12688:17:10"},"variableNames":[{"name":"size","nativeSrc":"12680:4:10","nodeType":"YulIdentifier","src":"12680:4:10"}]},{"nativeSrc":"12742:23:10","nodeType":"YulAssignment","src":"12742:23:10","value":{"arguments":[{"name":"size","nativeSrc":"12754:4:10","nodeType":"YulIdentifier","src":"12754:4:10"},{"kind":"number","nativeSrc":"12760:4:10","nodeType":"YulLiteral","src":"12760:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"12750:3:10","nodeType":"YulIdentifier","src":"12750:3:10"},"nativeSrc":"12750:15:10","nodeType":"YulFunctionCall","src":"12750:15:10"},"variableNames":[{"name":"size","nativeSrc":"12742:4:10","nodeType":"YulIdentifier","src":"12742:4:10"}]}]},"name":"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nativeSrc":"12452:320:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"12527:6:10","nodeType":"YulTypedName","src":"12527:6:10","type":""}],"returnVariables":[{"name":"size","nativeSrc":"12538:4:10","nodeType":"YulTypedName","src":"12538:4:10","type":""}],"src":"12452:320:10"},{"body":{"nativeSrc":"12844:241:10","nodeType":"YulBlock","src":"12844:241:10","statements":[{"body":{"nativeSrc":"12949:22:10","nodeType":"YulBlock","src":"12949:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"12951:16:10","nodeType":"YulIdentifier","src":"12951:16:10"},"nativeSrc":"12951:18:10","nodeType":"YulFunctionCall","src":"12951:18:10"},"nativeSrc":"12951:18:10","nodeType":"YulExpressionStatement","src":"12951:18:10"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"12921:6:10","nodeType":"YulIdentifier","src":"12921:6:10"},{"kind":"number","nativeSrc":"12929:18:10","nodeType":"YulLiteral","src":"12929:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"12918:2:10","nodeType":"YulIdentifier","src":"12918:2:10"},"nativeSrc":"12918:30:10","nodeType":"YulFunctionCall","src":"12918:30:10"},"nativeSrc":"12915:56:10","nodeType":"YulIf","src":"12915:56:10"},{"nativeSrc":"12981:37:10","nodeType":"YulAssignment","src":"12981:37:10","value":{"arguments":[{"name":"length","nativeSrc":"13011:6:10","nodeType":"YulIdentifier","src":"13011:6:10"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"12989:21:10","nodeType":"YulIdentifier","src":"12989:21:10"},"nativeSrc":"12989:29:10","nodeType":"YulFunctionCall","src":"12989:29:10"},"variableNames":[{"name":"size","nativeSrc":"12981:4:10","nodeType":"YulIdentifier","src":"12981:4:10"}]},{"nativeSrc":"13055:23:10","nodeType":"YulAssignment","src":"13055:23:10","value":{"arguments":[{"name":"size","nativeSrc":"13067:4:10","nodeType":"YulIdentifier","src":"13067:4:10"},{"kind":"number","nativeSrc":"13073:4:10","nodeType":"YulLiteral","src":"13073:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13063:3:10","nodeType":"YulIdentifier","src":"13063:3:10"},"nativeSrc":"13063:15:10","nodeType":"YulFunctionCall","src":"13063:15:10"},"variableNames":[{"name":"size","nativeSrc":"13055:4:10","nodeType":"YulIdentifier","src":"13055:4:10"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"12778:307:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"12828:6:10","nodeType":"YulTypedName","src":"12828:6:10","type":""}],"returnVariables":[{"name":"size","nativeSrc":"12839:4:10","nodeType":"YulTypedName","src":"12839:4:10","type":""}],"src":"12778:307:10"},{"body":{"nativeSrc":"13185:338:10","nodeType":"YulBlock","src":"13185:338:10","statements":[{"nativeSrc":"13195:74:10","nodeType":"YulAssignment","src":"13195:74:10","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"13261:6:10","nodeType":"YulIdentifier","src":"13261:6:10"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"13220:40:10","nodeType":"YulIdentifier","src":"13220:40:10"},"nativeSrc":"13220:48:10","nodeType":"YulFunctionCall","src":"13220:48:10"}],"functionName":{"name":"allocate_memory","nativeSrc":"13204:15:10","nodeType":"YulIdentifier","src":"13204:15:10"},"nativeSrc":"13204:65:10","nodeType":"YulFunctionCall","src":"13204:65:10"},"variableNames":[{"name":"array","nativeSrc":"13195:5:10","nodeType":"YulIdentifier","src":"13195:5:10"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"13285:5:10","nodeType":"YulIdentifier","src":"13285:5:10"},{"name":"length","nativeSrc":"13292:6:10","nodeType":"YulIdentifier","src":"13292:6:10"}],"functionName":{"name":"mstore","nativeSrc":"13278:6:10","nodeType":"YulIdentifier","src":"13278:6:10"},"nativeSrc":"13278:21:10","nodeType":"YulFunctionCall","src":"13278:21:10"},"nativeSrc":"13278:21:10","nodeType":"YulExpressionStatement","src":"13278:21:10"},{"nativeSrc":"13308:27:10","nodeType":"YulVariableDeclaration","src":"13308:27:10","value":{"arguments":[{"name":"array","nativeSrc":"13323:5:10","nodeType":"YulIdentifier","src":"13323:5:10"},{"kind":"number","nativeSrc":"13330:4:10","nodeType":"YulLiteral","src":"13330:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13319:3:10","nodeType":"YulIdentifier","src":"13319:3:10"},"nativeSrc":"13319:16:10","nodeType":"YulFunctionCall","src":"13319:16:10"},"variables":[{"name":"dst","nativeSrc":"13312:3:10","nodeType":"YulTypedName","src":"13312:3:10","type":""}]},{"body":{"nativeSrc":"13373:83:10","nodeType":"YulBlock","src":"13373:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"13375:77:10","nodeType":"YulIdentifier","src":"13375:77:10"},"nativeSrc":"13375:79:10","nodeType":"YulFunctionCall","src":"13375:79:10"},"nativeSrc":"13375:79:10","nodeType":"YulExpressionStatement","src":"13375:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"13354:3:10","nodeType":"YulIdentifier","src":"13354:3:10"},{"name":"length","nativeSrc":"13359:6:10","nodeType":"YulIdentifier","src":"13359:6:10"}],"functionName":{"name":"add","nativeSrc":"13350:3:10","nodeType":"YulIdentifier","src":"13350:3:10"},"nativeSrc":"13350:16:10","nodeType":"YulFunctionCall","src":"13350:16:10"},{"name":"end","nativeSrc":"13368:3:10","nodeType":"YulIdentifier","src":"13368:3:10"}],"functionName":{"name":"gt","nativeSrc":"13347:2:10","nodeType":"YulIdentifier","src":"13347:2:10"},"nativeSrc":"13347:25:10","nodeType":"YulFunctionCall","src":"13347:25:10"},"nativeSrc":"13344:112:10","nodeType":"YulIf","src":"13344:112:10"},{"expression":{"arguments":[{"name":"src","nativeSrc":"13500:3:10","nodeType":"YulIdentifier","src":"13500:3:10"},{"name":"dst","nativeSrc":"13505:3:10","nodeType":"YulIdentifier","src":"13505:3:10"},{"name":"length","nativeSrc":"13510:6:10","nodeType":"YulIdentifier","src":"13510:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"13465:34:10","nodeType":"YulIdentifier","src":"13465:34:10"},"nativeSrc":"13465:52:10","nodeType":"YulFunctionCall","src":"13465:52:10"},"nativeSrc":"13465:52:10","nodeType":"YulExpressionStatement","src":"13465:52:10"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nativeSrc":"13091:432:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"13158:3:10","nodeType":"YulTypedName","src":"13158:3:10","type":""},{"name":"length","nativeSrc":"13163:6:10","nodeType":"YulTypedName","src":"13163:6:10","type":""},{"name":"end","nativeSrc":"13171:3:10","nodeType":"YulTypedName","src":"13171:3:10","type":""}],"returnVariables":[{"name":"array","nativeSrc":"13179:5:10","nodeType":"YulTypedName","src":"13179:5:10","type":""}],"src":"13091:432:10"},{"body":{"nativeSrc":"13614:281:10","nodeType":"YulBlock","src":"13614:281:10","statements":[{"body":{"nativeSrc":"13663:83:10","nodeType":"YulBlock","src":"13663:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"13665:77:10","nodeType":"YulIdentifier","src":"13665:77:10"},"nativeSrc":"13665:79:10","nodeType":"YulFunctionCall","src":"13665:79:10"},"nativeSrc":"13665:79:10","nodeType":"YulExpressionStatement","src":"13665:79:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"13642:6:10","nodeType":"YulIdentifier","src":"13642:6:10"},{"kind":"number","nativeSrc":"13650:4:10","nodeType":"YulLiteral","src":"13650:4:10","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"13638:3:10","nodeType":"YulIdentifier","src":"13638:3:10"},"nativeSrc":"13638:17:10","nodeType":"YulFunctionCall","src":"13638:17:10"},{"name":"end","nativeSrc":"13657:3:10","nodeType":"YulIdentifier","src":"13657:3:10"}],"functionName":{"name":"slt","nativeSrc":"13634:3:10","nodeType":"YulIdentifier","src":"13634:3:10"},"nativeSrc":"13634:27:10","nodeType":"YulFunctionCall","src":"13634:27:10"}],"functionName":{"name":"iszero","nativeSrc":"13627:6:10","nodeType":"YulIdentifier","src":"13627:6:10"},"nativeSrc":"13627:35:10","nodeType":"YulFunctionCall","src":"13627:35:10"},"nativeSrc":"13624:122:10","nodeType":"YulIf","src":"13624:122:10"},{"nativeSrc":"13755:27:10","nodeType":"YulVariableDeclaration","src":"13755:27:10","value":{"arguments":[{"name":"offset","nativeSrc":"13775:6:10","nodeType":"YulIdentifier","src":"13775:6:10"}],"functionName":{"name":"mload","nativeSrc":"13769:5:10","nodeType":"YulIdentifier","src":"13769:5:10"},"nativeSrc":"13769:13:10","nodeType":"YulFunctionCall","src":"13769:13:10"},"variables":[{"name":"length","nativeSrc":"13759:6:10","nodeType":"YulTypedName","src":"13759:6:10","type":""}]},{"nativeSrc":"13791:98:10","nodeType":"YulAssignment","src":"13791:98:10","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"13862:6:10","nodeType":"YulIdentifier","src":"13862:6:10"},{"kind":"number","nativeSrc":"13870:4:10","nodeType":"YulLiteral","src":"13870:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13858:3:10","nodeType":"YulIdentifier","src":"13858:3:10"},"nativeSrc":"13858:17:10","nodeType":"YulFunctionCall","src":"13858:17:10"},{"name":"length","nativeSrc":"13877:6:10","nodeType":"YulIdentifier","src":"13877:6:10"},{"name":"end","nativeSrc":"13885:3:10","nodeType":"YulIdentifier","src":"13885:3:10"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nativeSrc":"13800:57:10","nodeType":"YulIdentifier","src":"13800:57:10"},"nativeSrc":"13800:89:10","nodeType":"YulFunctionCall","src":"13800:89:10"},"variableNames":[{"name":"array","nativeSrc":"13791:5:10","nodeType":"YulIdentifier","src":"13791:5:10"}]}]},"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nativeSrc":"13542:353:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"13592:6:10","nodeType":"YulTypedName","src":"13592:6:10","type":""},{"name":"end","nativeSrc":"13600:3:10","nodeType":"YulTypedName","src":"13600:3:10","type":""}],"returnVariables":[{"name":"array","nativeSrc":"13608:5:10","nodeType":"YulTypedName","src":"13608:5:10","type":""}],"src":"13542:353:10"},{"body":{"nativeSrc":"14038:835:10","nodeType":"YulBlock","src":"14038:835:10","statements":[{"nativeSrc":"14048:99:10","nodeType":"YulAssignment","src":"14048:99:10","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"14139:6:10","nodeType":"YulIdentifier","src":"14139:6:10"}],"functionName":{"name":"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nativeSrc":"14073:65:10","nodeType":"YulIdentifier","src":"14073:65:10"},"nativeSrc":"14073:73:10","nodeType":"YulFunctionCall","src":"14073:73:10"}],"functionName":{"name":"allocate_memory","nativeSrc":"14057:15:10","nodeType":"YulIdentifier","src":"14057:15:10"},"nativeSrc":"14057:90:10","nodeType":"YulFunctionCall","src":"14057:90:10"},"variableNames":[{"name":"array","nativeSrc":"14048:5:10","nodeType":"YulIdentifier","src":"14048:5:10"}]},{"nativeSrc":"14156:16:10","nodeType":"YulVariableDeclaration","src":"14156:16:10","value":{"name":"array","nativeSrc":"14167:5:10","nodeType":"YulIdentifier","src":"14167:5:10"},"variables":[{"name":"dst","nativeSrc":"14160:3:10","nodeType":"YulTypedName","src":"14160:3:10","type":""}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"14189:5:10","nodeType":"YulIdentifier","src":"14189:5:10"},{"name":"length","nativeSrc":"14196:6:10","nodeType":"YulIdentifier","src":"14196:6:10"}],"functionName":{"name":"mstore","nativeSrc":"14182:6:10","nodeType":"YulIdentifier","src":"14182:6:10"},"nativeSrc":"14182:21:10","nodeType":"YulFunctionCall","src":"14182:21:10"},"nativeSrc":"14182:21:10","nodeType":"YulExpressionStatement","src":"14182:21:10"},{"nativeSrc":"14212:23:10","nodeType":"YulAssignment","src":"14212:23:10","value":{"arguments":[{"name":"array","nativeSrc":"14223:5:10","nodeType":"YulIdentifier","src":"14223:5:10"},{"kind":"number","nativeSrc":"14230:4:10","nodeType":"YulLiteral","src":"14230:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14219:3:10","nodeType":"YulIdentifier","src":"14219:3:10"},"nativeSrc":"14219:16:10","nodeType":"YulFunctionCall","src":"14219:16:10"},"variableNames":[{"name":"dst","nativeSrc":"14212:3:10","nodeType":"YulIdentifier","src":"14212:3:10"}]},{"nativeSrc":"14245:44:10","nodeType":"YulVariableDeclaration","src":"14245:44:10","value":{"arguments":[{"name":"offset","nativeSrc":"14263:6:10","nodeType":"YulIdentifier","src":"14263:6:10"},{"arguments":[{"name":"length","nativeSrc":"14275:6:10","nodeType":"YulIdentifier","src":"14275:6:10"},{"kind":"number","nativeSrc":"14283:4:10","nodeType":"YulLiteral","src":"14283:4:10","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"14271:3:10","nodeType":"YulIdentifier","src":"14271:3:10"},"nativeSrc":"14271:17:10","nodeType":"YulFunctionCall","src":"14271:17:10"}],"functionName":{"name":"add","nativeSrc":"14259:3:10","nodeType":"YulIdentifier","src":"14259:3:10"},"nativeSrc":"14259:30:10","nodeType":"YulFunctionCall","src":"14259:30:10"},"variables":[{"name":"srcEnd","nativeSrc":"14249:6:10","nodeType":"YulTypedName","src":"14249:6:10","type":""}]},{"body":{"nativeSrc":"14317:103:10","nodeType":"YulBlock","src":"14317:103:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"14331:77:10","nodeType":"YulIdentifier","src":"14331:77:10"},"nativeSrc":"14331:79:10","nodeType":"YulFunctionCall","src":"14331:79:10"},"nativeSrc":"14331:79:10","nodeType":"YulExpressionStatement","src":"14331:79:10"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"14304:6:10","nodeType":"YulIdentifier","src":"14304:6:10"},{"name":"end","nativeSrc":"14312:3:10","nodeType":"YulIdentifier","src":"14312:3:10"}],"functionName":{"name":"gt","nativeSrc":"14301:2:10","nodeType":"YulIdentifier","src":"14301:2:10"},"nativeSrc":"14301:15:10","nodeType":"YulFunctionCall","src":"14301:15:10"},"nativeSrc":"14298:122:10","nodeType":"YulIf","src":"14298:122:10"},{"body":{"nativeSrc":"14505:362:10","nodeType":"YulBlock","src":"14505:362:10","statements":[{"nativeSrc":"14520:29:10","nodeType":"YulVariableDeclaration","src":"14520:29:10","value":{"arguments":[{"name":"src","nativeSrc":"14545:3:10","nodeType":"YulIdentifier","src":"14545:3:10"}],"functionName":{"name":"mload","nativeSrc":"14539:5:10","nodeType":"YulIdentifier","src":"14539:5:10"},"nativeSrc":"14539:10:10","nodeType":"YulFunctionCall","src":"14539:10:10"},"variables":[{"name":"innerOffset","nativeSrc":"14524:11:10","nodeType":"YulTypedName","src":"14524:11:10","type":""}]},{"body":{"nativeSrc":"14601:83:10","nodeType":"YulBlock","src":"14601:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"14603:77:10","nodeType":"YulIdentifier","src":"14603:77:10"},"nativeSrc":"14603:79:10","nodeType":"YulFunctionCall","src":"14603:79:10"},"nativeSrc":"14603:79:10","nodeType":"YulExpressionStatement","src":"14603:79:10"}]},"condition":{"arguments":[{"name":"innerOffset","nativeSrc":"14568:11:10","nodeType":"YulIdentifier","src":"14568:11:10"},{"kind":"number","nativeSrc":"14581:18:10","nodeType":"YulLiteral","src":"14581:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"14565:2:10","nodeType":"YulIdentifier","src":"14565:2:10"},"nativeSrc":"14565:35:10","nodeType":"YulFunctionCall","src":"14565:35:10"},"nativeSrc":"14562:122:10","nodeType":"YulIf","src":"14562:122:10"},{"nativeSrc":"14697:42:10","nodeType":"YulVariableDeclaration","src":"14697:42:10","value":{"arguments":[{"name":"offset","nativeSrc":"14719:6:10","nodeType":"YulIdentifier","src":"14719:6:10"},{"name":"innerOffset","nativeSrc":"14727:11:10","nodeType":"YulIdentifier","src":"14727:11:10"}],"functionName":{"name":"add","nativeSrc":"14715:3:10","nodeType":"YulIdentifier","src":"14715:3:10"},"nativeSrc":"14715:24:10","nodeType":"YulFunctionCall","src":"14715:24:10"},"variables":[{"name":"elementPos","nativeSrc":"14701:10:10","nodeType":"YulTypedName","src":"14701:10:10","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"14760:3:10","nodeType":"YulIdentifier","src":"14760:3:10"},{"arguments":[{"name":"elementPos","nativeSrc":"14806:10:10","nodeType":"YulIdentifier","src":"14806:10:10"},{"name":"end","nativeSrc":"14818:3:10","nodeType":"YulIdentifier","src":"14818:3:10"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nativeSrc":"14765:40:10","nodeType":"YulIdentifier","src":"14765:40:10"},"nativeSrc":"14765:57:10","nodeType":"YulFunctionCall","src":"14765:57:10"}],"functionName":{"name":"mstore","nativeSrc":"14753:6:10","nodeType":"YulIdentifier","src":"14753:6:10"},"nativeSrc":"14753:70:10","nodeType":"YulFunctionCall","src":"14753:70:10"},"nativeSrc":"14753:70:10","nodeType":"YulExpressionStatement","src":"14753:70:10"},{"nativeSrc":"14836:21:10","nodeType":"YulAssignment","src":"14836:21:10","value":{"arguments":[{"name":"dst","nativeSrc":"14847:3:10","nodeType":"YulIdentifier","src":"14847:3:10"},{"kind":"number","nativeSrc":"14852:4:10","nodeType":"YulLiteral","src":"14852:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14843:3:10","nodeType":"YulIdentifier","src":"14843:3:10"},"nativeSrc":"14843:14:10","nodeType":"YulFunctionCall","src":"14843:14:10"},"variableNames":[{"name":"dst","nativeSrc":"14836:3:10","nodeType":"YulIdentifier","src":"14836:3:10"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"14458:3:10","nodeType":"YulIdentifier","src":"14458:3:10"},{"name":"srcEnd","nativeSrc":"14463:6:10","nodeType":"YulIdentifier","src":"14463:6:10"}],"functionName":{"name":"lt","nativeSrc":"14455:2:10","nodeType":"YulIdentifier","src":"14455:2:10"},"nativeSrc":"14455:15:10","nodeType":"YulFunctionCall","src":"14455:15:10"},"nativeSrc":"14429:438:10","nodeType":"YulForLoop","post":{"nativeSrc":"14471:25:10","nodeType":"YulBlock","src":"14471:25:10","statements":[{"nativeSrc":"14473:21:10","nodeType":"YulAssignment","src":"14473:21:10","value":{"arguments":[{"name":"src","nativeSrc":"14484:3:10","nodeType":"YulIdentifier","src":"14484:3:10"},{"kind":"number","nativeSrc":"14489:4:10","nodeType":"YulLiteral","src":"14489:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14480:3:10","nodeType":"YulIdentifier","src":"14480:3:10"},"nativeSrc":"14480:14:10","nodeType":"YulFunctionCall","src":"14480:14:10"},"variableNames":[{"name":"src","nativeSrc":"14473:3:10","nodeType":"YulIdentifier","src":"14473:3:10"}]}]},"pre":{"nativeSrc":"14433:21:10","nodeType":"YulBlock","src":"14433:21:10","statements":[{"nativeSrc":"14435:17:10","nodeType":"YulVariableDeclaration","src":"14435:17:10","value":{"name":"offset","nativeSrc":"14446:6:10","nodeType":"YulIdentifier","src":"14446:6:10"},"variables":[{"name":"src","nativeSrc":"14439:3:10","nodeType":"YulTypedName","src":"14439:3:10","type":""}]}]},"src":"14429:438:10"}]},"name":"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromMemory","nativeSrc":"13916:957:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"14008:6:10","nodeType":"YulTypedName","src":"14008:6:10","type":""},{"name":"length","nativeSrc":"14016:6:10","nodeType":"YulTypedName","src":"14016:6:10","type":""},{"name":"end","nativeSrc":"14024:3:10","nodeType":"YulTypedName","src":"14024:3:10","type":""}],"returnVariables":[{"name":"array","nativeSrc":"14032:5:10","nodeType":"YulTypedName","src":"14032:5:10","type":""}],"src":"13916:957:10"},{"body":{"nativeSrc":"14991:306:10","nodeType":"YulBlock","src":"14991:306:10","statements":[{"body":{"nativeSrc":"15040:83:10","nodeType":"YulBlock","src":"15040:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"15042:77:10","nodeType":"YulIdentifier","src":"15042:77:10"},"nativeSrc":"15042:79:10","nodeType":"YulFunctionCall","src":"15042:79:10"},"nativeSrc":"15042:79:10","nodeType":"YulExpressionStatement","src":"15042:79:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"15019:6:10","nodeType":"YulIdentifier","src":"15019:6:10"},{"kind":"number","nativeSrc":"15027:4:10","nodeType":"YulLiteral","src":"15027:4:10","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"15015:3:10","nodeType":"YulIdentifier","src":"15015:3:10"},"nativeSrc":"15015:17:10","nodeType":"YulFunctionCall","src":"15015:17:10"},{"name":"end","nativeSrc":"15034:3:10","nodeType":"YulIdentifier","src":"15034:3:10"}],"functionName":{"name":"slt","nativeSrc":"15011:3:10","nodeType":"YulIdentifier","src":"15011:3:10"},"nativeSrc":"15011:27:10","nodeType":"YulFunctionCall","src":"15011:27:10"}],"functionName":{"name":"iszero","nativeSrc":"15004:6:10","nodeType":"YulIdentifier","src":"15004:6:10"},"nativeSrc":"15004:35:10","nodeType":"YulFunctionCall","src":"15004:35:10"},"nativeSrc":"15001:122:10","nodeType":"YulIf","src":"15001:122:10"},{"nativeSrc":"15132:27:10","nodeType":"YulVariableDeclaration","src":"15132:27:10","value":{"arguments":[{"name":"offset","nativeSrc":"15152:6:10","nodeType":"YulIdentifier","src":"15152:6:10"}],"functionName":{"name":"mload","nativeSrc":"15146:5:10","nodeType":"YulIdentifier","src":"15146:5:10"},"nativeSrc":"15146:13:10","nodeType":"YulFunctionCall","src":"15146:13:10"},"variables":[{"name":"length","nativeSrc":"15136:6:10","nodeType":"YulTypedName","src":"15136:6:10","type":""}]},{"nativeSrc":"15168:123:10","nodeType":"YulAssignment","src":"15168:123:10","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"15264:6:10","nodeType":"YulIdentifier","src":"15264:6:10"},{"kind":"number","nativeSrc":"15272:4:10","nodeType":"YulLiteral","src":"15272:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15260:3:10","nodeType":"YulIdentifier","src":"15260:3:10"},"nativeSrc":"15260:17:10","nodeType":"YulFunctionCall","src":"15260:17:10"},{"name":"length","nativeSrc":"15279:6:10","nodeType":"YulIdentifier","src":"15279:6:10"},{"name":"end","nativeSrc":"15287:3:10","nodeType":"YulIdentifier","src":"15287:3:10"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromMemory","nativeSrc":"15177:82:10","nodeType":"YulIdentifier","src":"15177:82:10"},"nativeSrc":"15177:114:10","nodeType":"YulFunctionCall","src":"15177:114:10"},"variableNames":[{"name":"array","nativeSrc":"15168:5:10","nodeType":"YulIdentifier","src":"15168:5:10"}]}]},"name":"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromMemory","nativeSrc":"14894:403:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"14969:6:10","nodeType":"YulTypedName","src":"14969:6:10","type":""},{"name":"end","nativeSrc":"14977:3:10","nodeType":"YulTypedName","src":"14977:3:10","type":""}],"returnVariables":[{"name":"array","nativeSrc":"14985:5:10","nodeType":"YulTypedName","src":"14985:5:10","type":""}],"src":"14894:403:10"},{"body":{"nativeSrc":"15423:2331:10","nodeType":"YulBlock","src":"15423:2331:10","statements":[{"body":{"nativeSrc":"15469:83:10","nodeType":"YulBlock","src":"15469:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nativeSrc":"15471:77:10","nodeType":"YulIdentifier","src":"15471:77:10"},"nativeSrc":"15471:79:10","nodeType":"YulFunctionCall","src":"15471:79:10"},"nativeSrc":"15471:79:10","nodeType":"YulExpressionStatement","src":"15471:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nativeSrc":"15444:3:10","nodeType":"YulIdentifier","src":"15444:3:10"},{"name":"headStart","nativeSrc":"15449:9:10","nodeType":"YulIdentifier","src":"15449:9:10"}],"functionName":{"name":"sub","nativeSrc":"15440:3:10","nodeType":"YulIdentifier","src":"15440:3:10"},"nativeSrc":"15440:19:10","nodeType":"YulFunctionCall","src":"15440:19:10"},{"kind":"number","nativeSrc":"15461:6:10","nodeType":"YulLiteral","src":"15461:6:10","type":"","value":"0x0140"}],"functionName":{"name":"slt","nativeSrc":"15436:3:10","nodeType":"YulIdentifier","src":"15436:3:10"},"nativeSrc":"15436:32:10","nodeType":"YulFunctionCall","src":"15436:32:10"},"nativeSrc":"15433:119:10","nodeType":"YulIf","src":"15433:119:10"},{"nativeSrc":"15561:32:10","nodeType":"YulAssignment","src":"15561:32:10","value":{"arguments":[{"kind":"number","nativeSrc":"15586:6:10","nodeType":"YulLiteral","src":"15586:6:10","type":"","value":"0x0140"}],"functionName":{"name":"allocate_memory","nativeSrc":"15570:15:10","nodeType":"YulIdentifier","src":"15570:15:10"},"nativeSrc":"15570:23:10","nodeType":"YulFunctionCall","src":"15570:23:10"},"variableNames":[{"name":"value","nativeSrc":"15561:5:10","nodeType":"YulIdentifier","src":"15561:5:10"}]},{"nativeSrc":"15603:164:10","nodeType":"YulBlock","src":"15603:164:10","statements":[{"nativeSrc":"15642:15:10","nodeType":"YulVariableDeclaration","src":"15642:15:10","value":{"kind":"number","nativeSrc":"15656:1:10","nodeType":"YulLiteral","src":"15656:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"15646:6:10","nodeType":"YulTypedName","src":"15646:6:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"15682:5:10","nodeType":"YulIdentifier","src":"15682:5:10"},{"kind":"number","nativeSrc":"15689:4:10","nodeType":"YulLiteral","src":"15689:4:10","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"15678:3:10","nodeType":"YulIdentifier","src":"15678:3:10"},"nativeSrc":"15678:16:10","nodeType":"YulFunctionCall","src":"15678:16:10"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15731:9:10","nodeType":"YulIdentifier","src":"15731:9:10"},{"name":"offset","nativeSrc":"15742:6:10","nodeType":"YulIdentifier","src":"15742:6:10"}],"functionName":{"name":"add","nativeSrc":"15727:3:10","nodeType":"YulIdentifier","src":"15727:3:10"},"nativeSrc":"15727:22:10","nodeType":"YulFunctionCall","src":"15727:22:10"},{"name":"end","nativeSrc":"15751:3:10","nodeType":"YulIdentifier","src":"15751:3:10"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nativeSrc":"15696:30:10","nodeType":"YulIdentifier","src":"15696:30:10"},"nativeSrc":"15696:59:10","nodeType":"YulFunctionCall","src":"15696:59:10"}],"functionName":{"name":"mstore","nativeSrc":"15671:6:10","nodeType":"YulIdentifier","src":"15671:6:10"},"nativeSrc":"15671:85:10","nodeType":"YulFunctionCall","src":"15671:85:10"},"nativeSrc":"15671:85:10","nodeType":"YulExpressionStatement","src":"15671:85:10"}]},{"nativeSrc":"15777:176:10","nodeType":"YulBlock","src":"15777:176:10","statements":[{"nativeSrc":"15827:16:10","nodeType":"YulVariableDeclaration","src":"15827:16:10","value":{"kind":"number","nativeSrc":"15841:2:10","nodeType":"YulLiteral","src":"15841:2:10","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"15831:6:10","nodeType":"YulTypedName","src":"15831:6:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"15868:5:10","nodeType":"YulIdentifier","src":"15868:5:10"},{"kind":"number","nativeSrc":"15875:4:10","nodeType":"YulLiteral","src":"15875:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15864:3:10","nodeType":"YulIdentifier","src":"15864:3:10"},"nativeSrc":"15864:16:10","nodeType":"YulFunctionCall","src":"15864:16:10"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15917:9:10","nodeType":"YulIdentifier","src":"15917:9:10"},{"name":"offset","nativeSrc":"15928:6:10","nodeType":"YulIdentifier","src":"15928:6:10"}],"functionName":{"name":"add","nativeSrc":"15913:3:10","nodeType":"YulIdentifier","src":"15913:3:10"},"nativeSrc":"15913:22:10","nodeType":"YulFunctionCall","src":"15913:22:10"},{"name":"end","nativeSrc":"15937:3:10","nodeType":"YulIdentifier","src":"15937:3:10"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nativeSrc":"15882:30:10","nodeType":"YulIdentifier","src":"15882:30:10"},"nativeSrc":"15882:59:10","nodeType":"YulFunctionCall","src":"15882:59:10"}],"functionName":{"name":"mstore","nativeSrc":"15857:6:10","nodeType":"YulIdentifier","src":"15857:6:10"},"nativeSrc":"15857:85:10","nodeType":"YulFunctionCall","src":"15857:85:10"},"nativeSrc":"15857:85:10","nodeType":"YulExpressionStatement","src":"15857:85:10"}]},{"nativeSrc":"15963:172:10","nodeType":"YulBlock","src":"15963:172:10","statements":[{"nativeSrc":"16009:16:10","nodeType":"YulVariableDeclaration","src":"16009:16:10","value":{"kind":"number","nativeSrc":"16023:2:10","nodeType":"YulLiteral","src":"16023:2:10","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"16013:6:10","nodeType":"YulTypedName","src":"16013:6:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16050:5:10","nodeType":"YulIdentifier","src":"16050:5:10"},{"kind":"number","nativeSrc":"16057:4:10","nodeType":"YulLiteral","src":"16057:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"16046:3:10","nodeType":"YulIdentifier","src":"16046:3:10"},"nativeSrc":"16046:16:10","nodeType":"YulFunctionCall","src":"16046:16:10"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16099:9:10","nodeType":"YulIdentifier","src":"16099:9:10"},{"name":"offset","nativeSrc":"16110:6:10","nodeType":"YulIdentifier","src":"16110:6:10"}],"functionName":{"name":"add","nativeSrc":"16095:3:10","nodeType":"YulIdentifier","src":"16095:3:10"},"nativeSrc":"16095:22:10","nodeType":"YulFunctionCall","src":"16095:22:10"},{"name":"end","nativeSrc":"16119:3:10","nodeType":"YulIdentifier","src":"16119:3:10"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nativeSrc":"16064:30:10","nodeType":"YulIdentifier","src":"16064:30:10"},"nativeSrc":"16064:59:10","nodeType":"YulFunctionCall","src":"16064:59:10"}],"functionName":{"name":"mstore","nativeSrc":"16039:6:10","nodeType":"YulIdentifier","src":"16039:6:10"},"nativeSrc":"16039:85:10","nodeType":"YulFunctionCall","src":"16039:85:10"},"nativeSrc":"16039:85:10","nodeType":"YulExpressionStatement","src":"16039:85:10"}]},{"nativeSrc":"16145:172:10","nodeType":"YulBlock","src":"16145:172:10","statements":[{"nativeSrc":"16191:16:10","nodeType":"YulVariableDeclaration","src":"16191:16:10","value":{"kind":"number","nativeSrc":"16205:2:10","nodeType":"YulLiteral","src":"16205:2:10","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"16195:6:10","nodeType":"YulTypedName","src":"16195:6:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16232:5:10","nodeType":"YulIdentifier","src":"16232:5:10"},{"kind":"number","nativeSrc":"16239:4:10","nodeType":"YulLiteral","src":"16239:4:10","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"16228:3:10","nodeType":"YulIdentifier","src":"16228:3:10"},"nativeSrc":"16228:16:10","nodeType":"YulFunctionCall","src":"16228:16:10"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16281:9:10","nodeType":"YulIdentifier","src":"16281:9:10"},{"name":"offset","nativeSrc":"16292:6:10","nodeType":"YulIdentifier","src":"16292:6:10"}],"functionName":{"name":"add","nativeSrc":"16277:3:10","nodeType":"YulIdentifier","src":"16277:3:10"},"nativeSrc":"16277:22:10","nodeType":"YulFunctionCall","src":"16277:22:10"},{"name":"end","nativeSrc":"16301:3:10","nodeType":"YulIdentifier","src":"16301:3:10"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nativeSrc":"16246:30:10","nodeType":"YulIdentifier","src":"16246:30:10"},"nativeSrc":"16246:59:10","nodeType":"YulFunctionCall","src":"16246:59:10"}],"functionName":{"name":"mstore","nativeSrc":"16221:6:10","nodeType":"YulIdentifier","src":"16221:6:10"},"nativeSrc":"16221:85:10","nodeType":"YulFunctionCall","src":"16221:85:10"},"nativeSrc":"16221:85:10","nodeType":"YulExpressionStatement","src":"16221:85:10"}]},{"nativeSrc":"16327:167:10","nodeType":"YulBlock","src":"16327:167:10","statements":[{"nativeSrc":"16366:17:10","nodeType":"YulVariableDeclaration","src":"16366:17:10","value":{"kind":"number","nativeSrc":"16380:3:10","nodeType":"YulLiteral","src":"16380:3:10","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"16370:6:10","nodeType":"YulTypedName","src":"16370:6:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16408:5:10","nodeType":"YulIdentifier","src":"16408:5:10"},{"kind":"number","nativeSrc":"16415:4:10","nodeType":"YulLiteral","src":"16415:4:10","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"16404:3:10","nodeType":"YulIdentifier","src":"16404:3:10"},"nativeSrc":"16404:16:10","nodeType":"YulFunctionCall","src":"16404:16:10"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16458:9:10","nodeType":"YulIdentifier","src":"16458:9:10"},{"name":"offset","nativeSrc":"16469:6:10","nodeType":"YulIdentifier","src":"16469:6:10"}],"functionName":{"name":"add","nativeSrc":"16454:3:10","nodeType":"YulIdentifier","src":"16454:3:10"},"nativeSrc":"16454:22:10","nodeType":"YulFunctionCall","src":"16454:22:10"},{"name":"end","nativeSrc":"16478:3:10","nodeType":"YulIdentifier","src":"16478:3:10"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"16422:31:10","nodeType":"YulIdentifier","src":"16422:31:10"},"nativeSrc":"16422:60:10","nodeType":"YulFunctionCall","src":"16422:60:10"}],"functionName":{"name":"mstore","nativeSrc":"16397:6:10","nodeType":"YulIdentifier","src":"16397:6:10"},"nativeSrc":"16397:86:10","nodeType":"YulFunctionCall","src":"16397:86:10"},"nativeSrc":"16397:86:10","nodeType":"YulExpressionStatement","src":"16397:86:10"}]},{"nativeSrc":"16504:168:10","nodeType":"YulBlock","src":"16504:168:10","statements":[{"nativeSrc":"16545:17:10","nodeType":"YulVariableDeclaration","src":"16545:17:10","value":{"kind":"number","nativeSrc":"16559:3:10","nodeType":"YulLiteral","src":"16559:3:10","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"16549:6:10","nodeType":"YulTypedName","src":"16549:6:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16587:5:10","nodeType":"YulIdentifier","src":"16587:5:10"},{"kind":"number","nativeSrc":"16594:4:10","nodeType":"YulLiteral","src":"16594:4:10","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"16583:3:10","nodeType":"YulIdentifier","src":"16583:3:10"},"nativeSrc":"16583:16:10","nodeType":"YulFunctionCall","src":"16583:16:10"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16636:9:10","nodeType":"YulIdentifier","src":"16636:9:10"},{"name":"offset","nativeSrc":"16647:6:10","nodeType":"YulIdentifier","src":"16647:6:10"}],"functionName":{"name":"add","nativeSrc":"16632:3:10","nodeType":"YulIdentifier","src":"16632:3:10"},"nativeSrc":"16632:22:10","nodeType":"YulFunctionCall","src":"16632:22:10"},{"name":"end","nativeSrc":"16656:3:10","nodeType":"YulIdentifier","src":"16656:3:10"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nativeSrc":"16601:30:10","nodeType":"YulIdentifier","src":"16601:30:10"},"nativeSrc":"16601:59:10","nodeType":"YulFunctionCall","src":"16601:59:10"}],"functionName":{"name":"mstore","nativeSrc":"16576:6:10","nodeType":"YulIdentifier","src":"16576:6:10"},"nativeSrc":"16576:85:10","nodeType":"YulFunctionCall","src":"16576:85:10"},"nativeSrc":"16576:85:10","nodeType":"YulExpressionStatement","src":"16576:85:10"}]},{"nativeSrc":"16682:187:10","nodeType":"YulBlock","src":"16682:187:10","statements":[{"nativeSrc":"16725:17:10","nodeType":"YulVariableDeclaration","src":"16725:17:10","value":{"kind":"number","nativeSrc":"16739:3:10","nodeType":"YulLiteral","src":"16739:3:10","type":"","value":"192"},"variables":[{"name":"offset","nativeSrc":"16729:6:10","nodeType":"YulTypedName","src":"16729:6:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16767:5:10","nodeType":"YulIdentifier","src":"16767:5:10"},{"kind":"number","nativeSrc":"16774:4:10","nodeType":"YulLiteral","src":"16774:4:10","type":"","value":"0xc0"}],"functionName":{"name":"add","nativeSrc":"16763:3:10","nodeType":"YulIdentifier","src":"16763:3:10"},"nativeSrc":"16763:16:10","nodeType":"YulFunctionCall","src":"16763:16:10"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16833:9:10","nodeType":"YulIdentifier","src":"16833:9:10"},{"name":"offset","nativeSrc":"16844:6:10","nodeType":"YulIdentifier","src":"16844:6:10"}],"functionName":{"name":"add","nativeSrc":"16829:3:10","nodeType":"YulIdentifier","src":"16829:3:10"},"nativeSrc":"16829:22:10","nodeType":"YulFunctionCall","src":"16829:22:10"},{"name":"end","nativeSrc":"16853:3:10","nodeType":"YulIdentifier","src":"16853:3:10"}],"functionName":{"name":"abi_decode_t_enum$_DataLocation_$606_fromMemory","nativeSrc":"16781:47:10","nodeType":"YulIdentifier","src":"16781:47:10"},"nativeSrc":"16781:76:10","nodeType":"YulFunctionCall","src":"16781:76:10"}],"functionName":{"name":"mstore","nativeSrc":"16756:6:10","nodeType":"YulIdentifier","src":"16756:6:10"},"nativeSrc":"16756:102:10","nodeType":"YulFunctionCall","src":"16756:102:10"},"nativeSrc":"16756:102:10","nodeType":"YulExpressionStatement","src":"16756:102:10"}]},{"nativeSrc":"16879:163:10","nodeType":"YulBlock","src":"16879:163:10","statements":[{"nativeSrc":"16917:17:10","nodeType":"YulVariableDeclaration","src":"16917:17:10","value":{"kind":"number","nativeSrc":"16931:3:10","nodeType":"YulLiteral","src":"16931:3:10","type":"","value":"224"},"variables":[{"name":"offset","nativeSrc":"16921:6:10","nodeType":"YulTypedName","src":"16921:6:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16959:5:10","nodeType":"YulIdentifier","src":"16959:5:10"},{"kind":"number","nativeSrc":"16966:4:10","nodeType":"YulLiteral","src":"16966:4:10","type":"","value":"0xe0"}],"functionName":{"name":"add","nativeSrc":"16955:3:10","nodeType":"YulIdentifier","src":"16955:3:10"},"nativeSrc":"16955:16:10","nodeType":"YulFunctionCall","src":"16955:16:10"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17006:9:10","nodeType":"YulIdentifier","src":"17006:9:10"},{"name":"offset","nativeSrc":"17017:6:10","nodeType":"YulIdentifier","src":"17017:6:10"}],"functionName":{"name":"add","nativeSrc":"17002:3:10","nodeType":"YulIdentifier","src":"17002:3:10"},"nativeSrc":"17002:22:10","nodeType":"YulFunctionCall","src":"17002:22:10"},{"name":"end","nativeSrc":"17026:3:10","nodeType":"YulIdentifier","src":"17026:3:10"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"16973:28:10","nodeType":"YulIdentifier","src":"16973:28:10"},"nativeSrc":"16973:57:10","nodeType":"YulFunctionCall","src":"16973:57:10"}],"functionName":{"name":"mstore","nativeSrc":"16948:6:10","nodeType":"YulIdentifier","src":"16948:6:10"},"nativeSrc":"16948:83:10","nodeType":"YulFunctionCall","src":"16948:83:10"},"nativeSrc":"16948:83:10","nodeType":"YulExpressionStatement","src":"16948:83:10"}]},{"nativeSrc":"17052:358:10","nodeType":"YulBlock","src":"17052:358:10","statements":[{"nativeSrc":"17093:40:10","nodeType":"YulVariableDeclaration","src":"17093:40:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17117:9:10","nodeType":"YulIdentifier","src":"17117:9:10"},{"kind":"number","nativeSrc":"17128:3:10","nodeType":"YulLiteral","src":"17128:3:10","type":"","value":"256"}],"functionName":{"name":"add","nativeSrc":"17113:3:10","nodeType":"YulIdentifier","src":"17113:3:10"},"nativeSrc":"17113:19:10","nodeType":"YulFunctionCall","src":"17113:19:10"}],"functionName":{"name":"mload","nativeSrc":"17107:5:10","nodeType":"YulIdentifier","src":"17107:5:10"},"nativeSrc":"17107:26:10","nodeType":"YulFunctionCall","src":"17107:26:10"},"variables":[{"name":"offset","nativeSrc":"17097:6:10","nodeType":"YulTypedName","src":"17097:6:10","type":""}]},{"body":{"nativeSrc":"17180:83:10","nodeType":"YulBlock","src":"17180:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nativeSrc":"17182:77:10","nodeType":"YulIdentifier","src":"17182:77:10"},"nativeSrc":"17182:79:10","nodeType":"YulFunctionCall","src":"17182:79:10"},"nativeSrc":"17182:79:10","nodeType":"YulExpressionStatement","src":"17182:79:10"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"17152:6:10","nodeType":"YulIdentifier","src":"17152:6:10"},{"kind":"number","nativeSrc":"17160:18:10","nodeType":"YulLiteral","src":"17160:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"17149:2:10","nodeType":"YulIdentifier","src":"17149:2:10"},"nativeSrc":"17149:30:10","nodeType":"YulFunctionCall","src":"17149:30:10"},"nativeSrc":"17146:117:10","nodeType":"YulIf","src":"17146:117:10"},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"17288:5:10","nodeType":"YulIdentifier","src":"17288:5:10"},{"kind":"number","nativeSrc":"17295:6:10","nodeType":"YulLiteral","src":"17295:6:10","type":"","value":"0x0100"}],"functionName":{"name":"add","nativeSrc":"17284:3:10","nodeType":"YulIdentifier","src":"17284:3:10"},"nativeSrc":"17284:18:10","nodeType":"YulFunctionCall","src":"17284:18:10"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17374:9:10","nodeType":"YulIdentifier","src":"17374:9:10"},{"name":"offset","nativeSrc":"17385:6:10","nodeType":"YulIdentifier","src":"17385:6:10"}],"functionName":{"name":"add","nativeSrc":"17370:3:10","nodeType":"YulIdentifier","src":"17370:3:10"},"nativeSrc":"17370:22:10","nodeType":"YulFunctionCall","src":"17370:22:10"},{"name":"end","nativeSrc":"17394:3:10","nodeType":"YulIdentifier","src":"17394:3:10"}],"functionName":{"name":"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromMemory","nativeSrc":"17304:65:10","nodeType":"YulIdentifier","src":"17304:65:10"},"nativeSrc":"17304:94:10","nodeType":"YulFunctionCall","src":"17304:94:10"}],"functionName":{"name":"mstore","nativeSrc":"17277:6:10","nodeType":"YulIdentifier","src":"17277:6:10"},"nativeSrc":"17277:122:10","nodeType":"YulFunctionCall","src":"17277:122:10"},"nativeSrc":"17277:122:10","nodeType":"YulExpressionStatement","src":"17277:122:10"}]},{"nativeSrc":"17420:327:10","nodeType":"YulBlock","src":"17420:327:10","statements":[{"nativeSrc":"17455:40:10","nodeType":"YulVariableDeclaration","src":"17455:40:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17479:9:10","nodeType":"YulIdentifier","src":"17479:9:10"},{"kind":"number","nativeSrc":"17490:3:10","nodeType":"YulLiteral","src":"17490:3:10","type":"","value":"288"}],"functionName":{"name":"add","nativeSrc":"17475:3:10","nodeType":"YulIdentifier","src":"17475:3:10"},"nativeSrc":"17475:19:10","nodeType":"YulFunctionCall","src":"17475:19:10"}],"functionName":{"name":"mload","nativeSrc":"17469:5:10","nodeType":"YulIdentifier","src":"17469:5:10"},"nativeSrc":"17469:26:10","nodeType":"YulFunctionCall","src":"17469:26:10"},"variables":[{"name":"offset","nativeSrc":"17459:6:10","nodeType":"YulTypedName","src":"17459:6:10","type":""}]},{"body":{"nativeSrc":"17542:83:10","nodeType":"YulBlock","src":"17542:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nativeSrc":"17544:77:10","nodeType":"YulIdentifier","src":"17544:77:10"},"nativeSrc":"17544:79:10","nodeType":"YulFunctionCall","src":"17544:79:10"},"nativeSrc":"17544:79:10","nodeType":"YulExpressionStatement","src":"17544:79:10"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"17514:6:10","nodeType":"YulIdentifier","src":"17514:6:10"},{"kind":"number","nativeSrc":"17522:18:10","nodeType":"YulLiteral","src":"17522:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"17511:2:10","nodeType":"YulIdentifier","src":"17511:2:10"},"nativeSrc":"17511:30:10","nodeType":"YulFunctionCall","src":"17511:30:10"},"nativeSrc":"17508:117:10","nodeType":"YulIf","src":"17508:117:10"},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"17650:5:10","nodeType":"YulIdentifier","src":"17650:5:10"},{"kind":"number","nativeSrc":"17657:6:10","nodeType":"YulLiteral","src":"17657:6:10","type":"","value":"0x0120"}],"functionName":{"name":"add","nativeSrc":"17646:3:10","nodeType":"YulIdentifier","src":"17646:3:10"},"nativeSrc":"17646:18:10","nodeType":"YulFunctionCall","src":"17646:18:10"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17711:9:10","nodeType":"YulIdentifier","src":"17711:9:10"},{"name":"offset","nativeSrc":"17722:6:10","nodeType":"YulIdentifier","src":"17722:6:10"}],"functionName":{"name":"add","nativeSrc":"17707:3:10","nodeType":"YulIdentifier","src":"17707:3:10"},"nativeSrc":"17707:22:10","nodeType":"YulFunctionCall","src":"17707:22:10"},{"name":"end","nativeSrc":"17731:3:10","nodeType":"YulIdentifier","src":"17731:3:10"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nativeSrc":"17666:40:10","nodeType":"YulIdentifier","src":"17666:40:10"},"nativeSrc":"17666:69:10","nodeType":"YulFunctionCall","src":"17666:69:10"}],"functionName":{"name":"mstore","nativeSrc":"17639:6:10","nodeType":"YulIdentifier","src":"17639:6:10"},"nativeSrc":"17639:97:10","nodeType":"YulFunctionCall","src":"17639:97:10"},"nativeSrc":"17639:97:10","nodeType":"YulExpressionStatement","src":"17639:97:10"}]}]},"name":"abi_decode_t_struct$_Attestation_$592_memory_ptr_fromMemory","nativeSrc":"15329:2425:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15398:9:10","nodeType":"YulTypedName","src":"15398:9:10","type":""},{"name":"end","nativeSrc":"15409:3:10","nodeType":"YulTypedName","src":"15409:3:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"15417:5:10","nodeType":"YulTypedName","src":"15417:5:10","type":""}],"src":"15329:2425:10"},{"body":{"nativeSrc":"17865:455:10","nodeType":"YulBlock","src":"17865:455:10","statements":[{"body":{"nativeSrc":"17911:83:10","nodeType":"YulBlock","src":"17911:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"17913:77:10","nodeType":"YulIdentifier","src":"17913:77:10"},"nativeSrc":"17913:79:10","nodeType":"YulFunctionCall","src":"17913:79:10"},"nativeSrc":"17913:79:10","nodeType":"YulExpressionStatement","src":"17913:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"17886:7:10","nodeType":"YulIdentifier","src":"17886:7:10"},{"name":"headStart","nativeSrc":"17895:9:10","nodeType":"YulIdentifier","src":"17895:9:10"}],"functionName":{"name":"sub","nativeSrc":"17882:3:10","nodeType":"YulIdentifier","src":"17882:3:10"},"nativeSrc":"17882:23:10","nodeType":"YulFunctionCall","src":"17882:23:10"},{"kind":"number","nativeSrc":"17907:2:10","nodeType":"YulLiteral","src":"17907:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"17878:3:10","nodeType":"YulIdentifier","src":"17878:3:10"},"nativeSrc":"17878:32:10","nodeType":"YulFunctionCall","src":"17878:32:10"},"nativeSrc":"17875:119:10","nodeType":"YulIf","src":"17875:119:10"},{"nativeSrc":"18004:309:10","nodeType":"YulBlock","src":"18004:309:10","statements":[{"nativeSrc":"18019:38:10","nodeType":"YulVariableDeclaration","src":"18019:38:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18043:9:10","nodeType":"YulIdentifier","src":"18043:9:10"},{"kind":"number","nativeSrc":"18054:1:10","nodeType":"YulLiteral","src":"18054:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18039:3:10","nodeType":"YulIdentifier","src":"18039:3:10"},"nativeSrc":"18039:17:10","nodeType":"YulFunctionCall","src":"18039:17:10"}],"functionName":{"name":"mload","nativeSrc":"18033:5:10","nodeType":"YulIdentifier","src":"18033:5:10"},"nativeSrc":"18033:24:10","nodeType":"YulFunctionCall","src":"18033:24:10"},"variables":[{"name":"offset","nativeSrc":"18023:6:10","nodeType":"YulTypedName","src":"18023:6:10","type":""}]},{"body":{"nativeSrc":"18104:83:10","nodeType":"YulBlock","src":"18104:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"18106:77:10","nodeType":"YulIdentifier","src":"18106:77:10"},"nativeSrc":"18106:79:10","nodeType":"YulFunctionCall","src":"18106:79:10"},"nativeSrc":"18106:79:10","nodeType":"YulExpressionStatement","src":"18106:79:10"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"18076:6:10","nodeType":"YulIdentifier","src":"18076:6:10"},{"kind":"number","nativeSrc":"18084:18:10","nodeType":"YulLiteral","src":"18084:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"18073:2:10","nodeType":"YulIdentifier","src":"18073:2:10"},"nativeSrc":"18073:30:10","nodeType":"YulFunctionCall","src":"18073:30:10"},"nativeSrc":"18070:117:10","nodeType":"YulIf","src":"18070:117:10"},{"nativeSrc":"18201:102:10","nodeType":"YulAssignment","src":"18201:102:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18275:9:10","nodeType":"YulIdentifier","src":"18275:9:10"},{"name":"offset","nativeSrc":"18286:6:10","nodeType":"YulIdentifier","src":"18286:6:10"}],"functionName":{"name":"add","nativeSrc":"18271:3:10","nodeType":"YulIdentifier","src":"18271:3:10"},"nativeSrc":"18271:22:10","nodeType":"YulFunctionCall","src":"18271:22:10"},{"name":"dataEnd","nativeSrc":"18295:7:10","nodeType":"YulIdentifier","src":"18295:7:10"}],"functionName":{"name":"abi_decode_t_struct$_Attestation_$592_memory_ptr_fromMemory","nativeSrc":"18211:59:10","nodeType":"YulIdentifier","src":"18211:59:10"},"nativeSrc":"18211:92:10","nodeType":"YulFunctionCall","src":"18211:92:10"},"variableNames":[{"name":"value0","nativeSrc":"18201:6:10","nodeType":"YulIdentifier","src":"18201:6:10"}]}]}]},"name":"abi_decode_tuple_t_struct$_Attestation_$592_memory_ptr_fromMemory","nativeSrc":"17760:560:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17835:9:10","nodeType":"YulTypedName","src":"17835:9:10","type":""},{"name":"dataEnd","nativeSrc":"17846:7:10","nodeType":"YulTypedName","src":"17846:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"17858:6:10","nodeType":"YulTypedName","src":"17858:6:10","type":""}],"src":"17760:560:10"},{"body":{"nativeSrc":"18354:152:10","nodeType":"YulBlock","src":"18354:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"18371:1:10","nodeType":"YulLiteral","src":"18371:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"18374:77:10","nodeType":"YulLiteral","src":"18374:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"18364:6:10","nodeType":"YulIdentifier","src":"18364:6:10"},"nativeSrc":"18364:88:10","nodeType":"YulFunctionCall","src":"18364:88:10"},"nativeSrc":"18364:88:10","nodeType":"YulExpressionStatement","src":"18364:88:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18468:1:10","nodeType":"YulLiteral","src":"18468:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"18471:4:10","nodeType":"YulLiteral","src":"18471:4:10","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"18461:6:10","nodeType":"YulIdentifier","src":"18461:6:10"},"nativeSrc":"18461:15:10","nodeType":"YulFunctionCall","src":"18461:15:10"},"nativeSrc":"18461:15:10","nodeType":"YulExpressionStatement","src":"18461:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18492:1:10","nodeType":"YulLiteral","src":"18492:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"18495:4:10","nodeType":"YulLiteral","src":"18495:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"18485:6:10","nodeType":"YulIdentifier","src":"18485:6:10"},"nativeSrc":"18485:15:10","nodeType":"YulFunctionCall","src":"18485:15:10"},"nativeSrc":"18485:15:10","nodeType":"YulExpressionStatement","src":"18485:15:10"}]},"name":"panic_error_0x32","nativeSrc":"18326:180:10","nodeType":"YulFunctionDefinition","src":"18326:180:10"},{"body":{"nativeSrc":"18565:51:10","nodeType":"YulBlock","src":"18565:51:10","statements":[{"nativeSrc":"18575:35:10","nodeType":"YulAssignment","src":"18575:35:10","value":{"arguments":[{"name":"value","nativeSrc":"18604:5:10","nodeType":"YulIdentifier","src":"18604:5:10"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"18586:17:10","nodeType":"YulIdentifier","src":"18586:17:10"},"nativeSrc":"18586:24:10","nodeType":"YulFunctionCall","src":"18586:24:10"},"variableNames":[{"name":"cleaned","nativeSrc":"18575:7:10","nodeType":"YulIdentifier","src":"18575:7:10"}]}]},"name":"cleanup_t_address_payable","nativeSrc":"18512:104:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18547:5:10","nodeType":"YulTypedName","src":"18547:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"18557:7:10","nodeType":"YulTypedName","src":"18557:7:10","type":""}],"src":"18512:104:10"},{"body":{"nativeSrc":"18673:87:10","nodeType":"YulBlock","src":"18673:87:10","statements":[{"body":{"nativeSrc":"18738:16:10","nodeType":"YulBlock","src":"18738:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"18747:1:10","nodeType":"YulLiteral","src":"18747:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"18750:1:10","nodeType":"YulLiteral","src":"18750:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"18740:6:10","nodeType":"YulIdentifier","src":"18740:6:10"},"nativeSrc":"18740:12:10","nodeType":"YulFunctionCall","src":"18740:12:10"},"nativeSrc":"18740:12:10","nodeType":"YulExpressionStatement","src":"18740:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"18696:5:10","nodeType":"YulIdentifier","src":"18696:5:10"},{"arguments":[{"name":"value","nativeSrc":"18729:5:10","nodeType":"YulIdentifier","src":"18729:5:10"}],"functionName":{"name":"cleanup_t_address_payable","nativeSrc":"18703:25:10","nodeType":"YulIdentifier","src":"18703:25:10"},"nativeSrc":"18703:32:10","nodeType":"YulFunctionCall","src":"18703:32:10"}],"functionName":{"name":"eq","nativeSrc":"18693:2:10","nodeType":"YulIdentifier","src":"18693:2:10"},"nativeSrc":"18693:43:10","nodeType":"YulFunctionCall","src":"18693:43:10"}],"functionName":{"name":"iszero","nativeSrc":"18686:6:10","nodeType":"YulIdentifier","src":"18686:6:10"},"nativeSrc":"18686:51:10","nodeType":"YulFunctionCall","src":"18686:51:10"},"nativeSrc":"18683:71:10","nodeType":"YulIf","src":"18683:71:10"}]},"name":"validator_revert_t_address_payable","nativeSrc":"18622:138:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18666:5:10","nodeType":"YulTypedName","src":"18666:5:10","type":""}],"src":"18622:138:10"},{"body":{"nativeSrc":"18837:88:10","nodeType":"YulBlock","src":"18837:88:10","statements":[{"nativeSrc":"18847:22:10","nodeType":"YulAssignment","src":"18847:22:10","value":{"arguments":[{"name":"offset","nativeSrc":"18862:6:10","nodeType":"YulIdentifier","src":"18862:6:10"}],"functionName":{"name":"mload","nativeSrc":"18856:5:10","nodeType":"YulIdentifier","src":"18856:5:10"},"nativeSrc":"18856:13:10","nodeType":"YulFunctionCall","src":"18856:13:10"},"variableNames":[{"name":"value","nativeSrc":"18847:5:10","nodeType":"YulIdentifier","src":"18847:5:10"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"18913:5:10","nodeType":"YulIdentifier","src":"18913:5:10"}],"functionName":{"name":"validator_revert_t_address_payable","nativeSrc":"18878:34:10","nodeType":"YulIdentifier","src":"18878:34:10"},"nativeSrc":"18878:41:10","nodeType":"YulFunctionCall","src":"18878:41:10"},"nativeSrc":"18878:41:10","nodeType":"YulExpressionStatement","src":"18878:41:10"}]},"name":"abi_decode_t_address_payable_fromMemory","nativeSrc":"18766:159:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"18815:6:10","nodeType":"YulTypedName","src":"18815:6:10","type":""},{"name":"end","nativeSrc":"18823:3:10","nodeType":"YulTypedName","src":"18823:3:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"18831:5:10","nodeType":"YulTypedName","src":"18831:5:10","type":""}],"src":"18766:159:10"},{"body":{"nativeSrc":"19016:282:10","nodeType":"YulBlock","src":"19016:282:10","statements":[{"body":{"nativeSrc":"19062:83:10","nodeType":"YulBlock","src":"19062:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"19064:77:10","nodeType":"YulIdentifier","src":"19064:77:10"},"nativeSrc":"19064:79:10","nodeType":"YulFunctionCall","src":"19064:79:10"},"nativeSrc":"19064:79:10","nodeType":"YulExpressionStatement","src":"19064:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"19037:7:10","nodeType":"YulIdentifier","src":"19037:7:10"},{"name":"headStart","nativeSrc":"19046:9:10","nodeType":"YulIdentifier","src":"19046:9:10"}],"functionName":{"name":"sub","nativeSrc":"19033:3:10","nodeType":"YulIdentifier","src":"19033:3:10"},"nativeSrc":"19033:23:10","nodeType":"YulFunctionCall","src":"19033:23:10"},{"kind":"number","nativeSrc":"19058:2:10","nodeType":"YulLiteral","src":"19058:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"19029:3:10","nodeType":"YulIdentifier","src":"19029:3:10"},"nativeSrc":"19029:32:10","nodeType":"YulFunctionCall","src":"19029:32:10"},"nativeSrc":"19026:119:10","nodeType":"YulIf","src":"19026:119:10"},{"nativeSrc":"19155:136:10","nodeType":"YulBlock","src":"19155:136:10","statements":[{"nativeSrc":"19170:15:10","nodeType":"YulVariableDeclaration","src":"19170:15:10","value":{"kind":"number","nativeSrc":"19184:1:10","nodeType":"YulLiteral","src":"19184:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"19174:6:10","nodeType":"YulTypedName","src":"19174:6:10","type":""}]},{"nativeSrc":"19199:82:10","nodeType":"YulAssignment","src":"19199:82:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19253:9:10","nodeType":"YulIdentifier","src":"19253:9:10"},{"name":"offset","nativeSrc":"19264:6:10","nodeType":"YulIdentifier","src":"19264:6:10"}],"functionName":{"name":"add","nativeSrc":"19249:3:10","nodeType":"YulIdentifier","src":"19249:3:10"},"nativeSrc":"19249:22:10","nodeType":"YulFunctionCall","src":"19249:22:10"},{"name":"dataEnd","nativeSrc":"19273:7:10","nodeType":"YulIdentifier","src":"19273:7:10"}],"functionName":{"name":"abi_decode_t_address_payable_fromMemory","nativeSrc":"19209:39:10","nodeType":"YulIdentifier","src":"19209:39:10"},"nativeSrc":"19209:72:10","nodeType":"YulFunctionCall","src":"19209:72:10"},"variableNames":[{"name":"value0","nativeSrc":"19199:6:10","nodeType":"YulIdentifier","src":"19199:6:10"}]}]}]},"name":"abi_decode_tuple_t_address_payable_fromMemory","nativeSrc":"18931:367:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18986:9:10","nodeType":"YulTypedName","src":"18986:9:10","type":""},{"name":"dataEnd","nativeSrc":"18997:7:10","nodeType":"YulTypedName","src":"18997:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"19009:6:10","nodeType":"YulTypedName","src":"19009:6:10","type":""}],"src":"18931:367:10"},{"body":{"nativeSrc":"19332:152:10","nodeType":"YulBlock","src":"19332:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"19349:1:10","nodeType":"YulLiteral","src":"19349:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"19352:77:10","nodeType":"YulLiteral","src":"19352:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"19342:6:10","nodeType":"YulIdentifier","src":"19342:6:10"},"nativeSrc":"19342:88:10","nodeType":"YulFunctionCall","src":"19342:88:10"},"nativeSrc":"19342:88:10","nodeType":"YulExpressionStatement","src":"19342:88:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19446:1:10","nodeType":"YulLiteral","src":"19446:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"19449:4:10","nodeType":"YulLiteral","src":"19449:4:10","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"19439:6:10","nodeType":"YulIdentifier","src":"19439:6:10"},"nativeSrc":"19439:15:10","nodeType":"YulFunctionCall","src":"19439:15:10"},"nativeSrc":"19439:15:10","nodeType":"YulExpressionStatement","src":"19439:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19470:1:10","nodeType":"YulLiteral","src":"19470:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"19473:4:10","nodeType":"YulLiteral","src":"19473:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"19463:6:10","nodeType":"YulIdentifier","src":"19463:6:10"},"nativeSrc":"19463:15:10","nodeType":"YulFunctionCall","src":"19463:15:10"},"nativeSrc":"19463:15:10","nodeType":"YulExpressionStatement","src":"19463:15:10"}]},"name":"panic_error_0x11","nativeSrc":"19304:180:10","nodeType":"YulFunctionDefinition","src":"19304:180:10"},{"body":{"nativeSrc":"19532:141:10","nodeType":"YulBlock","src":"19532:141:10","statements":[{"nativeSrc":"19542:32:10","nodeType":"YulAssignment","src":"19542:32:10","value":{"arguments":[{"name":"value","nativeSrc":"19568:5:10","nodeType":"YulIdentifier","src":"19568:5:10"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"19551:16:10","nodeType":"YulIdentifier","src":"19551:16:10"},"nativeSrc":"19551:23:10","nodeType":"YulFunctionCall","src":"19551:23:10"},"variableNames":[{"name":"value","nativeSrc":"19542:5:10","nodeType":"YulIdentifier","src":"19542:5:10"}]},{"body":{"nativeSrc":"19616:22:10","nodeType":"YulBlock","src":"19616:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"19618:16:10","nodeType":"YulIdentifier","src":"19618:16:10"},"nativeSrc":"19618:18:10","nodeType":"YulFunctionCall","src":"19618:18:10"},"nativeSrc":"19618:18:10","nodeType":"YulExpressionStatement","src":"19618:18:10"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"19589:5:10","nodeType":"YulIdentifier","src":"19589:5:10"},{"kind":"number","nativeSrc":"19596:18:10","nodeType":"YulLiteral","src":"19596:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"19586:2:10","nodeType":"YulIdentifier","src":"19586:2:10"},"nativeSrc":"19586:29:10","nodeType":"YulFunctionCall","src":"19586:29:10"},"nativeSrc":"19583:55:10","nodeType":"YulIf","src":"19583:55:10"},{"nativeSrc":"19647:20:10","nodeType":"YulAssignment","src":"19647:20:10","value":{"arguments":[{"name":"value","nativeSrc":"19658:5:10","nodeType":"YulIdentifier","src":"19658:5:10"},{"kind":"number","nativeSrc":"19665:1:10","nodeType":"YulLiteral","src":"19665:1:10","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"19654:3:10","nodeType":"YulIdentifier","src":"19654:3:10"},"nativeSrc":"19654:13:10","nodeType":"YulFunctionCall","src":"19654:13:10"},"variableNames":[{"name":"ret","nativeSrc":"19647:3:10","nodeType":"YulIdentifier","src":"19647:3:10"}]}]},"name":"increment_t_uint64","nativeSrc":"19490:183:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19518:5:10","nodeType":"YulTypedName","src":"19518:5:10","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"19528:3:10","nodeType":"YulTypedName","src":"19528:3:10","type":""}],"src":"19490:183:10"},{"body":{"nativeSrc":"19774:339:10","nodeType":"YulBlock","src":"19774:339:10","statements":[{"nativeSrc":"19784:75:10","nodeType":"YulAssignment","src":"19784:75:10","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"19851:6:10","nodeType":"YulIdentifier","src":"19851:6:10"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"19809:41:10","nodeType":"YulIdentifier","src":"19809:41:10"},"nativeSrc":"19809:49:10","nodeType":"YulFunctionCall","src":"19809:49:10"}],"functionName":{"name":"allocate_memory","nativeSrc":"19793:15:10","nodeType":"YulIdentifier","src":"19793:15:10"},"nativeSrc":"19793:66:10","nodeType":"YulFunctionCall","src":"19793:66:10"},"variableNames":[{"name":"array","nativeSrc":"19784:5:10","nodeType":"YulIdentifier","src":"19784:5:10"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"19875:5:10","nodeType":"YulIdentifier","src":"19875:5:10"},{"name":"length","nativeSrc":"19882:6:10","nodeType":"YulIdentifier","src":"19882:6:10"}],"functionName":{"name":"mstore","nativeSrc":"19868:6:10","nodeType":"YulIdentifier","src":"19868:6:10"},"nativeSrc":"19868:21:10","nodeType":"YulFunctionCall","src":"19868:21:10"},"nativeSrc":"19868:21:10","nodeType":"YulExpressionStatement","src":"19868:21:10"},{"nativeSrc":"19898:27:10","nodeType":"YulVariableDeclaration","src":"19898:27:10","value":{"arguments":[{"name":"array","nativeSrc":"19913:5:10","nodeType":"YulIdentifier","src":"19913:5:10"},{"kind":"number","nativeSrc":"19920:4:10","nodeType":"YulLiteral","src":"19920:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19909:3:10","nodeType":"YulIdentifier","src":"19909:3:10"},"nativeSrc":"19909:16:10","nodeType":"YulFunctionCall","src":"19909:16:10"},"variables":[{"name":"dst","nativeSrc":"19902:3:10","nodeType":"YulTypedName","src":"19902:3:10","type":""}]},{"body":{"nativeSrc":"19963:83:10","nodeType":"YulBlock","src":"19963:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"19965:77:10","nodeType":"YulIdentifier","src":"19965:77:10"},"nativeSrc":"19965:79:10","nodeType":"YulFunctionCall","src":"19965:79:10"},"nativeSrc":"19965:79:10","nodeType":"YulExpressionStatement","src":"19965:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"19944:3:10","nodeType":"YulIdentifier","src":"19944:3:10"},{"name":"length","nativeSrc":"19949:6:10","nodeType":"YulIdentifier","src":"19949:6:10"}],"functionName":{"name":"add","nativeSrc":"19940:3:10","nodeType":"YulIdentifier","src":"19940:3:10"},"nativeSrc":"19940:16:10","nodeType":"YulFunctionCall","src":"19940:16:10"},{"name":"end","nativeSrc":"19958:3:10","nodeType":"YulIdentifier","src":"19958:3:10"}],"functionName":{"name":"gt","nativeSrc":"19937:2:10","nodeType":"YulIdentifier","src":"19937:2:10"},"nativeSrc":"19937:25:10","nodeType":"YulFunctionCall","src":"19937:25:10"},"nativeSrc":"19934:112:10","nodeType":"YulIf","src":"19934:112:10"},{"expression":{"arguments":[{"name":"src","nativeSrc":"20090:3:10","nodeType":"YulIdentifier","src":"20090:3:10"},{"name":"dst","nativeSrc":"20095:3:10","nodeType":"YulIdentifier","src":"20095:3:10"},{"name":"length","nativeSrc":"20100:6:10","nodeType":"YulIdentifier","src":"20100:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"20055:34:10","nodeType":"YulIdentifier","src":"20055:34:10"},"nativeSrc":"20055:52:10","nodeType":"YulFunctionCall","src":"20055:52:10"},"nativeSrc":"20055:52:10","nodeType":"YulExpressionStatement","src":"20055:52:10"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"19679:434:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"19747:3:10","nodeType":"YulTypedName","src":"19747:3:10","type":""},{"name":"length","nativeSrc":"19752:6:10","nodeType":"YulTypedName","src":"19752:6:10","type":""},{"name":"end","nativeSrc":"19760:3:10","nodeType":"YulTypedName","src":"19760:3:10","type":""}],"returnVariables":[{"name":"array","nativeSrc":"19768:5:10","nodeType":"YulTypedName","src":"19768:5:10","type":""}],"src":"19679:434:10"},{"body":{"nativeSrc":"20206:282:10","nodeType":"YulBlock","src":"20206:282:10","statements":[{"body":{"nativeSrc":"20255:83:10","nodeType":"YulBlock","src":"20255:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"20257:77:10","nodeType":"YulIdentifier","src":"20257:77:10"},"nativeSrc":"20257:79:10","nodeType":"YulFunctionCall","src":"20257:79:10"},"nativeSrc":"20257:79:10","nodeType":"YulExpressionStatement","src":"20257:79:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"20234:6:10","nodeType":"YulIdentifier","src":"20234:6:10"},{"kind":"number","nativeSrc":"20242:4:10","nodeType":"YulLiteral","src":"20242:4:10","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"20230:3:10","nodeType":"YulIdentifier","src":"20230:3:10"},"nativeSrc":"20230:17:10","nodeType":"YulFunctionCall","src":"20230:17:10"},{"name":"end","nativeSrc":"20249:3:10","nodeType":"YulIdentifier","src":"20249:3:10"}],"functionName":{"name":"slt","nativeSrc":"20226:3:10","nodeType":"YulIdentifier","src":"20226:3:10"},"nativeSrc":"20226:27:10","nodeType":"YulFunctionCall","src":"20226:27:10"}],"functionName":{"name":"iszero","nativeSrc":"20219:6:10","nodeType":"YulIdentifier","src":"20219:6:10"},"nativeSrc":"20219:35:10","nodeType":"YulFunctionCall","src":"20219:35:10"},"nativeSrc":"20216:122:10","nodeType":"YulIf","src":"20216:122:10"},{"nativeSrc":"20347:27:10","nodeType":"YulVariableDeclaration","src":"20347:27:10","value":{"arguments":[{"name":"offset","nativeSrc":"20367:6:10","nodeType":"YulIdentifier","src":"20367:6:10"}],"functionName":{"name":"mload","nativeSrc":"20361:5:10","nodeType":"YulIdentifier","src":"20361:5:10"},"nativeSrc":"20361:13:10","nodeType":"YulFunctionCall","src":"20361:13:10"},"variables":[{"name":"length","nativeSrc":"20351:6:10","nodeType":"YulTypedName","src":"20351:6:10","type":""}]},{"nativeSrc":"20383:99:10","nodeType":"YulAssignment","src":"20383:99:10","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"20455:6:10","nodeType":"YulIdentifier","src":"20455:6:10"},{"kind":"number","nativeSrc":"20463:4:10","nodeType":"YulLiteral","src":"20463:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"20451:3:10","nodeType":"YulIdentifier","src":"20451:3:10"},"nativeSrc":"20451:17:10","nodeType":"YulFunctionCall","src":"20451:17:10"},{"name":"length","nativeSrc":"20470:6:10","nodeType":"YulIdentifier","src":"20470:6:10"},{"name":"end","nativeSrc":"20478:3:10","nodeType":"YulIdentifier","src":"20478:3:10"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"20392:58:10","nodeType":"YulIdentifier","src":"20392:58:10"},"nativeSrc":"20392:90:10","nodeType":"YulFunctionCall","src":"20392:90:10"},"variableNames":[{"name":"array","nativeSrc":"20383:5:10","nodeType":"YulIdentifier","src":"20383:5:10"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"20133:355:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"20184:6:10","nodeType":"YulTypedName","src":"20184:6:10","type":""},{"name":"end","nativeSrc":"20192:3:10","nodeType":"YulTypedName","src":"20192:3:10","type":""}],"returnVariables":[{"name":"array","nativeSrc":"20200:5:10","nodeType":"YulTypedName","src":"20200:5:10","type":""}],"src":"20133:355:10"},{"body":{"nativeSrc":"20557:80:10","nodeType":"YulBlock","src":"20557:80:10","statements":[{"nativeSrc":"20567:22:10","nodeType":"YulAssignment","src":"20567:22:10","value":{"arguments":[{"name":"offset","nativeSrc":"20582:6:10","nodeType":"YulIdentifier","src":"20582:6:10"}],"functionName":{"name":"mload","nativeSrc":"20576:5:10","nodeType":"YulIdentifier","src":"20576:5:10"},"nativeSrc":"20576:13:10","nodeType":"YulFunctionCall","src":"20576:13:10"},"variableNames":[{"name":"value","nativeSrc":"20567:5:10","nodeType":"YulIdentifier","src":"20567:5:10"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"20625:5:10","nodeType":"YulIdentifier","src":"20625:5:10"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"20598:26:10","nodeType":"YulIdentifier","src":"20598:26:10"},"nativeSrc":"20598:33:10","nodeType":"YulFunctionCall","src":"20598:33:10"},"nativeSrc":"20598:33:10","nodeType":"YulExpressionStatement","src":"20598:33:10"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"20494:143:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"20535:6:10","nodeType":"YulTypedName","src":"20535:6:10","type":""},{"name":"end","nativeSrc":"20543:3:10","nodeType":"YulTypedName","src":"20543:3:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"20551:5:10","nodeType":"YulTypedName","src":"20551:5:10","type":""}],"src":"20494:143:10"},{"body":{"nativeSrc":"20747:576:10","nodeType":"YulBlock","src":"20747:576:10","statements":[{"body":{"nativeSrc":"20793:83:10","nodeType":"YulBlock","src":"20793:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"20795:77:10","nodeType":"YulIdentifier","src":"20795:77:10"},"nativeSrc":"20795:79:10","nodeType":"YulFunctionCall","src":"20795:79:10"},"nativeSrc":"20795:79:10","nodeType":"YulExpressionStatement","src":"20795:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"20768:7:10","nodeType":"YulIdentifier","src":"20768:7:10"},{"name":"headStart","nativeSrc":"20777:9:10","nodeType":"YulIdentifier","src":"20777:9:10"}],"functionName":{"name":"sub","nativeSrc":"20764:3:10","nodeType":"YulIdentifier","src":"20764:3:10"},"nativeSrc":"20764:23:10","nodeType":"YulFunctionCall","src":"20764:23:10"},{"kind":"number","nativeSrc":"20789:2:10","nodeType":"YulLiteral","src":"20789:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"20760:3:10","nodeType":"YulIdentifier","src":"20760:3:10"},"nativeSrc":"20760:32:10","nodeType":"YulFunctionCall","src":"20760:32:10"},"nativeSrc":"20757:119:10","nodeType":"YulIf","src":"20757:119:10"},{"nativeSrc":"20886:291:10","nodeType":"YulBlock","src":"20886:291:10","statements":[{"nativeSrc":"20901:38:10","nodeType":"YulVariableDeclaration","src":"20901:38:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20925:9:10","nodeType":"YulIdentifier","src":"20925:9:10"},{"kind":"number","nativeSrc":"20936:1:10","nodeType":"YulLiteral","src":"20936:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20921:3:10","nodeType":"YulIdentifier","src":"20921:3:10"},"nativeSrc":"20921:17:10","nodeType":"YulFunctionCall","src":"20921:17:10"}],"functionName":{"name":"mload","nativeSrc":"20915:5:10","nodeType":"YulIdentifier","src":"20915:5:10"},"nativeSrc":"20915:24:10","nodeType":"YulFunctionCall","src":"20915:24:10"},"variables":[{"name":"offset","nativeSrc":"20905:6:10","nodeType":"YulTypedName","src":"20905:6:10","type":""}]},{"body":{"nativeSrc":"20986:83:10","nodeType":"YulBlock","src":"20986:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"20988:77:10","nodeType":"YulIdentifier","src":"20988:77:10"},"nativeSrc":"20988:79:10","nodeType":"YulFunctionCall","src":"20988:79:10"},"nativeSrc":"20988:79:10","nodeType":"YulExpressionStatement","src":"20988:79:10"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"20958:6:10","nodeType":"YulIdentifier","src":"20958:6:10"},{"kind":"number","nativeSrc":"20966:18:10","nodeType":"YulLiteral","src":"20966:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"20955:2:10","nodeType":"YulIdentifier","src":"20955:2:10"},"nativeSrc":"20955:30:10","nodeType":"YulFunctionCall","src":"20955:30:10"},"nativeSrc":"20952:117:10","nodeType":"YulIf","src":"20952:117:10"},{"nativeSrc":"21083:84:10","nodeType":"YulAssignment","src":"21083:84:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21139:9:10","nodeType":"YulIdentifier","src":"21139:9:10"},{"name":"offset","nativeSrc":"21150:6:10","nodeType":"YulIdentifier","src":"21150:6:10"}],"functionName":{"name":"add","nativeSrc":"21135:3:10","nodeType":"YulIdentifier","src":"21135:3:10"},"nativeSrc":"21135:22:10","nodeType":"YulFunctionCall","src":"21135:22:10"},{"name":"dataEnd","nativeSrc":"21159:7:10","nodeType":"YulIdentifier","src":"21159:7:10"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"21093:41:10","nodeType":"YulIdentifier","src":"21093:41:10"},"nativeSrc":"21093:74:10","nodeType":"YulFunctionCall","src":"21093:74:10"},"variableNames":[{"name":"value0","nativeSrc":"21083:6:10","nodeType":"YulIdentifier","src":"21083:6:10"}]}]},{"nativeSrc":"21187:129:10","nodeType":"YulBlock","src":"21187:129:10","statements":[{"nativeSrc":"21202:16:10","nodeType":"YulVariableDeclaration","src":"21202:16:10","value":{"kind":"number","nativeSrc":"21216:2:10","nodeType":"YulLiteral","src":"21216:2:10","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"21206:6:10","nodeType":"YulTypedName","src":"21206:6:10","type":""}]},{"nativeSrc":"21232:74:10","nodeType":"YulAssignment","src":"21232:74:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21278:9:10","nodeType":"YulIdentifier","src":"21278:9:10"},{"name":"offset","nativeSrc":"21289:6:10","nodeType":"YulIdentifier","src":"21289:6:10"}],"functionName":{"name":"add","nativeSrc":"21274:3:10","nodeType":"YulIdentifier","src":"21274:3:10"},"nativeSrc":"21274:22:10","nodeType":"YulFunctionCall","src":"21274:22:10"},{"name":"dataEnd","nativeSrc":"21298:7:10","nodeType":"YulIdentifier","src":"21298:7:10"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"21242:31:10","nodeType":"YulIdentifier","src":"21242:31:10"},"nativeSrc":"21242:64:10","nodeType":"YulFunctionCall","src":"21242:64:10"},"variableNames":[{"name":"value1","nativeSrc":"21232:6:10","nodeType":"YulIdentifier","src":"21232:6:10"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256_fromMemory","nativeSrc":"20643:680:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20709:9:10","nodeType":"YulTypedName","src":"20709:9:10","type":""},{"name":"dataEnd","nativeSrc":"20720:7:10","nodeType":"YulTypedName","src":"20720:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"20732:6:10","nodeType":"YulTypedName","src":"20732:6:10","type":""},{"name":"value1","nativeSrc":"20740:6:10","nodeType":"YulTypedName","src":"20740:6:10","type":""}],"src":"20643:680:10"},{"body":{"nativeSrc":"21435:69:10","nodeType":"YulBlock","src":"21435:69:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"21457:6:10","nodeType":"YulIdentifier","src":"21457:6:10"},{"kind":"number","nativeSrc":"21465:1:10","nodeType":"YulLiteral","src":"21465:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21453:3:10","nodeType":"YulIdentifier","src":"21453:3:10"},"nativeSrc":"21453:14:10","nodeType":"YulFunctionCall","src":"21453:14:10"},{"hexValue":"43726564656e7469616c20736368656d61206e6f7420736574","kind":"string","nativeSrc":"21469:27:10","nodeType":"YulLiteral","src":"21469:27:10","type":"","value":"Credential schema not set"}],"functionName":{"name":"mstore","nativeSrc":"21446:6:10","nodeType":"YulIdentifier","src":"21446:6:10"},"nativeSrc":"21446:51:10","nodeType":"YulFunctionCall","src":"21446:51:10"},"nativeSrc":"21446:51:10","nodeType":"YulExpressionStatement","src":"21446:51:10"}]},"name":"store_literal_in_memory_51c209187ee368fc1e4dbf500f07ad2d83fbbce262a3a955007d41b55a072cd7","nativeSrc":"21329:175:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"21427:6:10","nodeType":"YulTypedName","src":"21427:6:10","type":""}],"src":"21329:175:10"},{"body":{"nativeSrc":"21656:220:10","nodeType":"YulBlock","src":"21656:220:10","statements":[{"nativeSrc":"21666:74:10","nodeType":"YulAssignment","src":"21666:74:10","value":{"arguments":[{"name":"pos","nativeSrc":"21732:3:10","nodeType":"YulIdentifier","src":"21732:3:10"},{"kind":"number","nativeSrc":"21737:2:10","nodeType":"YulLiteral","src":"21737:2:10","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"21673:58:10","nodeType":"YulIdentifier","src":"21673:58:10"},"nativeSrc":"21673:67:10","nodeType":"YulFunctionCall","src":"21673:67:10"},"variableNames":[{"name":"pos","nativeSrc":"21666:3:10","nodeType":"YulIdentifier","src":"21666:3:10"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"21838:3:10","nodeType":"YulIdentifier","src":"21838:3:10"}],"functionName":{"name":"store_literal_in_memory_51c209187ee368fc1e4dbf500f07ad2d83fbbce262a3a955007d41b55a072cd7","nativeSrc":"21749:88:10","nodeType":"YulIdentifier","src":"21749:88:10"},"nativeSrc":"21749:93:10","nodeType":"YulFunctionCall","src":"21749:93:10"},"nativeSrc":"21749:93:10","nodeType":"YulExpressionStatement","src":"21749:93:10"},{"nativeSrc":"21851:19:10","nodeType":"YulAssignment","src":"21851:19:10","value":{"arguments":[{"name":"pos","nativeSrc":"21862:3:10","nodeType":"YulIdentifier","src":"21862:3:10"},{"kind":"number","nativeSrc":"21867:2:10","nodeType":"YulLiteral","src":"21867:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21858:3:10","nodeType":"YulIdentifier","src":"21858:3:10"},"nativeSrc":"21858:12:10","nodeType":"YulFunctionCall","src":"21858:12:10"},"variableNames":[{"name":"end","nativeSrc":"21851:3:10","nodeType":"YulIdentifier","src":"21851:3:10"}]}]},"name":"abi_encode_t_stringliteral_51c209187ee368fc1e4dbf500f07ad2d83fbbce262a3a955007d41b55a072cd7_to_t_string_memory_ptr_fromStack","nativeSrc":"21510:366:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"21644:3:10","nodeType":"YulTypedName","src":"21644:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"21652:3:10","nodeType":"YulTypedName","src":"21652:3:10","type":""}],"src":"21510:366:10"},{"body":{"nativeSrc":"22053:248:10","nodeType":"YulBlock","src":"22053:248:10","statements":[{"nativeSrc":"22063:26:10","nodeType":"YulAssignment","src":"22063:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"22075:9:10","nodeType":"YulIdentifier","src":"22075:9:10"},{"kind":"number","nativeSrc":"22086:2:10","nodeType":"YulLiteral","src":"22086:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22071:3:10","nodeType":"YulIdentifier","src":"22071:3:10"},"nativeSrc":"22071:18:10","nodeType":"YulFunctionCall","src":"22071:18:10"},"variableNames":[{"name":"tail","nativeSrc":"22063:4:10","nodeType":"YulIdentifier","src":"22063:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22110:9:10","nodeType":"YulIdentifier","src":"22110:9:10"},{"kind":"number","nativeSrc":"22121:1:10","nodeType":"YulLiteral","src":"22121:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22106:3:10","nodeType":"YulIdentifier","src":"22106:3:10"},"nativeSrc":"22106:17:10","nodeType":"YulFunctionCall","src":"22106:17:10"},{"arguments":[{"name":"tail","nativeSrc":"22129:4:10","nodeType":"YulIdentifier","src":"22129:4:10"},{"name":"headStart","nativeSrc":"22135:9:10","nodeType":"YulIdentifier","src":"22135:9:10"}],"functionName":{"name":"sub","nativeSrc":"22125:3:10","nodeType":"YulIdentifier","src":"22125:3:10"},"nativeSrc":"22125:20:10","nodeType":"YulFunctionCall","src":"22125:20:10"}],"functionName":{"name":"mstore","nativeSrc":"22099:6:10","nodeType":"YulIdentifier","src":"22099:6:10"},"nativeSrc":"22099:47:10","nodeType":"YulFunctionCall","src":"22099:47:10"},"nativeSrc":"22099:47:10","nodeType":"YulExpressionStatement","src":"22099:47:10"},{"nativeSrc":"22155:139:10","nodeType":"YulAssignment","src":"22155:139:10","value":{"arguments":[{"name":"tail","nativeSrc":"22289:4:10","nodeType":"YulIdentifier","src":"22289:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_51c209187ee368fc1e4dbf500f07ad2d83fbbce262a3a955007d41b55a072cd7_to_t_string_memory_ptr_fromStack","nativeSrc":"22163:124:10","nodeType":"YulIdentifier","src":"22163:124:10"},"nativeSrc":"22163:131:10","nodeType":"YulFunctionCall","src":"22163:131:10"},"variableNames":[{"name":"tail","nativeSrc":"22155:4:10","nodeType":"YulIdentifier","src":"22155:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_51c209187ee368fc1e4dbf500f07ad2d83fbbce262a3a955007d41b55a072cd7__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"21882:419:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22033:9:10","nodeType":"YulTypedName","src":"22033:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22048:4:10","nodeType":"YulTypedName","src":"22048:4:10","type":""}],"src":"21882:419:10"},{"body":{"nativeSrc":"22453:277:10","nodeType":"YulBlock","src":"22453:277:10","statements":[{"nativeSrc":"22463:26:10","nodeType":"YulAssignment","src":"22463:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"22475:9:10","nodeType":"YulIdentifier","src":"22475:9:10"},{"kind":"number","nativeSrc":"22486:2:10","nodeType":"YulLiteral","src":"22486:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22471:3:10","nodeType":"YulIdentifier","src":"22471:3:10"},"nativeSrc":"22471:18:10","nodeType":"YulFunctionCall","src":"22471:18:10"},"variableNames":[{"name":"tail","nativeSrc":"22463:4:10","nodeType":"YulIdentifier","src":"22463:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22510:9:10","nodeType":"YulIdentifier","src":"22510:9:10"},{"kind":"number","nativeSrc":"22521:1:10","nodeType":"YulLiteral","src":"22521:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22506:3:10","nodeType":"YulIdentifier","src":"22506:3:10"},"nativeSrc":"22506:17:10","nodeType":"YulFunctionCall","src":"22506:17:10"},{"arguments":[{"name":"tail","nativeSrc":"22529:4:10","nodeType":"YulIdentifier","src":"22529:4:10"},{"name":"headStart","nativeSrc":"22535:9:10","nodeType":"YulIdentifier","src":"22535:9:10"}],"functionName":{"name":"sub","nativeSrc":"22525:3:10","nodeType":"YulIdentifier","src":"22525:3:10"},"nativeSrc":"22525:20:10","nodeType":"YulFunctionCall","src":"22525:20:10"}],"functionName":{"name":"mstore","nativeSrc":"22499:6:10","nodeType":"YulIdentifier","src":"22499:6:10"},"nativeSrc":"22499:47:10","nodeType":"YulFunctionCall","src":"22499:47:10"},"nativeSrc":"22499:47:10","nodeType":"YulExpressionStatement","src":"22499:47:10"},{"nativeSrc":"22555:86:10","nodeType":"YulAssignment","src":"22555:86:10","value":{"arguments":[{"name":"value0","nativeSrc":"22627:6:10","nodeType":"YulIdentifier","src":"22627:6:10"},{"name":"tail","nativeSrc":"22636:4:10","nodeType":"YulIdentifier","src":"22636:4:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"22563:63:10","nodeType":"YulIdentifier","src":"22563:63:10"},"nativeSrc":"22563:78:10","nodeType":"YulFunctionCall","src":"22563:78:10"},"variableNames":[{"name":"tail","nativeSrc":"22555:4:10","nodeType":"YulIdentifier","src":"22555:4:10"}]},{"expression":{"arguments":[{"name":"value1","nativeSrc":"22695:6:10","nodeType":"YulIdentifier","src":"22695:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"22708:9:10","nodeType":"YulIdentifier","src":"22708:9:10"},{"kind":"number","nativeSrc":"22719:2:10","nodeType":"YulLiteral","src":"22719:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22704:3:10","nodeType":"YulIdentifier","src":"22704:3:10"},"nativeSrc":"22704:18:10","nodeType":"YulFunctionCall","src":"22704:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"22651:43:10","nodeType":"YulIdentifier","src":"22651:43:10"},"nativeSrc":"22651:72:10","nodeType":"YulFunctionCall","src":"22651:72:10"},"nativeSrc":"22651:72:10","nodeType":"YulExpressionStatement","src":"22651:72:10"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed","nativeSrc":"22307:423:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22417:9:10","nodeType":"YulTypedName","src":"22417:9:10","type":""},{"name":"value1","nativeSrc":"22429:6:10","nodeType":"YulTypedName","src":"22429:6:10","type":""},{"name":"value0","nativeSrc":"22437:6:10","nodeType":"YulTypedName","src":"22437:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22448:4:10","nodeType":"YulTypedName","src":"22448:4:10","type":""}],"src":"22307:423:10"},{"body":{"nativeSrc":"22764:152:10","nodeType":"YulBlock","src":"22764:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"22781:1:10","nodeType":"YulLiteral","src":"22781:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"22784:77:10","nodeType":"YulLiteral","src":"22784:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"22774:6:10","nodeType":"YulIdentifier","src":"22774:6:10"},"nativeSrc":"22774:88:10","nodeType":"YulFunctionCall","src":"22774:88:10"},"nativeSrc":"22774:88:10","nodeType":"YulExpressionStatement","src":"22774:88:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"22878:1:10","nodeType":"YulLiteral","src":"22878:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"22881:4:10","nodeType":"YulLiteral","src":"22881:4:10","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"22871:6:10","nodeType":"YulIdentifier","src":"22871:6:10"},"nativeSrc":"22871:15:10","nodeType":"YulFunctionCall","src":"22871:15:10"},"nativeSrc":"22871:15:10","nodeType":"YulExpressionStatement","src":"22871:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"22902:1:10","nodeType":"YulLiteral","src":"22902:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"22905:4:10","nodeType":"YulLiteral","src":"22905:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"22895:6:10","nodeType":"YulIdentifier","src":"22895:6:10"},"nativeSrc":"22895:15:10","nodeType":"YulFunctionCall","src":"22895:15:10"},"nativeSrc":"22895:15:10","nodeType":"YulExpressionStatement","src":"22895:15:10"}]},"name":"panic_error_0x21","nativeSrc":"22736:180:10","nodeType":"YulFunctionDefinition","src":"22736:180:10"},{"body":{"nativeSrc":"22975:52:10","nodeType":"YulBlock","src":"22975:52:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"22992:3:10","nodeType":"YulIdentifier","src":"22992:3:10"},{"arguments":[{"name":"value","nativeSrc":"23014:5:10","nodeType":"YulIdentifier","src":"23014:5:10"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"22997:16:10","nodeType":"YulIdentifier","src":"22997:16:10"},"nativeSrc":"22997:23:10","nodeType":"YulFunctionCall","src":"22997:23:10"}],"functionName":{"name":"mstore","nativeSrc":"22985:6:10","nodeType":"YulIdentifier","src":"22985:6:10"},"nativeSrc":"22985:36:10","nodeType":"YulFunctionCall","src":"22985:36:10"},"nativeSrc":"22985:36:10","nodeType":"YulExpressionStatement","src":"22985:36:10"}]},"name":"abi_encode_t_uint64_to_t_uint64","nativeSrc":"22922:105:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"22963:5:10","nodeType":"YulTypedName","src":"22963:5:10","type":""},{"name":"pos","nativeSrc":"22970:3:10","nodeType":"YulTypedName","src":"22970:3:10","type":""}],"src":"22922:105:10"},{"body":{"nativeSrc":"23088:53:10","nodeType":"YulBlock","src":"23088:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"23105:3:10","nodeType":"YulIdentifier","src":"23105:3:10"},{"arguments":[{"name":"value","nativeSrc":"23128:5:10","nodeType":"YulIdentifier","src":"23128:5:10"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"23110:17:10","nodeType":"YulIdentifier","src":"23110:17:10"},"nativeSrc":"23110:24:10","nodeType":"YulFunctionCall","src":"23110:24:10"}],"functionName":{"name":"mstore","nativeSrc":"23098:6:10","nodeType":"YulIdentifier","src":"23098:6:10"},"nativeSrc":"23098:37:10","nodeType":"YulFunctionCall","src":"23098:37:10"},"nativeSrc":"23098:37:10","nodeType":"YulExpressionStatement","src":"23098:37:10"}]},"name":"abi_encode_t_address_to_t_address","nativeSrc":"23033:108:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23076:5:10","nodeType":"YulTypedName","src":"23076:5:10","type":""},{"name":"pos","nativeSrc":"23083:3:10","nodeType":"YulTypedName","src":"23083:3:10","type":""}],"src":"23033:108:10"},{"body":{"nativeSrc":"23206:62:10","nodeType":"YulBlock","src":"23206:62:10","statements":[{"body":{"nativeSrc":"23240:22:10","nodeType":"YulBlock","src":"23240:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nativeSrc":"23242:16:10","nodeType":"YulIdentifier","src":"23242:16:10"},"nativeSrc":"23242:18:10","nodeType":"YulFunctionCall","src":"23242:18:10"},"nativeSrc":"23242:18:10","nodeType":"YulExpressionStatement","src":"23242:18:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"23229:5:10","nodeType":"YulIdentifier","src":"23229:5:10"},{"kind":"number","nativeSrc":"23236:1:10","nodeType":"YulLiteral","src":"23236:1:10","type":"","value":"4"}],"functionName":{"name":"lt","nativeSrc":"23226:2:10","nodeType":"YulIdentifier","src":"23226:2:10"},"nativeSrc":"23226:12:10","nodeType":"YulFunctionCall","src":"23226:12:10"}],"functionName":{"name":"iszero","nativeSrc":"23219:6:10","nodeType":"YulIdentifier","src":"23219:6:10"},"nativeSrc":"23219:20:10","nodeType":"YulFunctionCall","src":"23219:20:10"},"nativeSrc":"23216:46:10","nodeType":"YulIf","src":"23216:46:10"}]},"name":"validator_assert_t_enum$_DataLocation_$606","nativeSrc":"23147:121:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23199:5:10","nodeType":"YulTypedName","src":"23199:5:10","type":""}],"src":"23147:121:10"},{"body":{"nativeSrc":"23335:82:10","nodeType":"YulBlock","src":"23335:82:10","statements":[{"nativeSrc":"23345:16:10","nodeType":"YulAssignment","src":"23345:16:10","value":{"name":"value","nativeSrc":"23356:5:10","nodeType":"YulIdentifier","src":"23356:5:10"},"variableNames":[{"name":"cleaned","nativeSrc":"23345:7:10","nodeType":"YulIdentifier","src":"23345:7:10"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"23405:5:10","nodeType":"YulIdentifier","src":"23405:5:10"}],"functionName":{"name":"validator_assert_t_enum$_DataLocation_$606","nativeSrc":"23362:42:10","nodeType":"YulIdentifier","src":"23362:42:10"},"nativeSrc":"23362:49:10","nodeType":"YulFunctionCall","src":"23362:49:10"},"nativeSrc":"23362:49:10","nodeType":"YulExpressionStatement","src":"23362:49:10"}]},"name":"cleanup_t_enum$_DataLocation_$606","nativeSrc":"23274:143:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23317:5:10","nodeType":"YulTypedName","src":"23317:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"23327:7:10","nodeType":"YulTypedName","src":"23327:7:10","type":""}],"src":"23274:143:10"},{"body":{"nativeSrc":"23497:69:10","nodeType":"YulBlock","src":"23497:69:10","statements":[{"nativeSrc":"23507:53:10","nodeType":"YulAssignment","src":"23507:53:10","value":{"arguments":[{"name":"value","nativeSrc":"23554:5:10","nodeType":"YulIdentifier","src":"23554:5:10"}],"functionName":{"name":"cleanup_t_enum$_DataLocation_$606","nativeSrc":"23520:33:10","nodeType":"YulIdentifier","src":"23520:33:10"},"nativeSrc":"23520:40:10","nodeType":"YulFunctionCall","src":"23520:40:10"},"variableNames":[{"name":"converted","nativeSrc":"23507:9:10","nodeType":"YulIdentifier","src":"23507:9:10"}]}]},"name":"convert_t_enum$_DataLocation_$606_to_t_uint8","nativeSrc":"23423:143:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23477:5:10","nodeType":"YulTypedName","src":"23477:5:10","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"23487:9:10","nodeType":"YulTypedName","src":"23487:9:10","type":""}],"src":"23423:143:10"},{"body":{"nativeSrc":"23641:80:10","nodeType":"YulBlock","src":"23641:80:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"23658:3:10","nodeType":"YulIdentifier","src":"23658:3:10"},{"arguments":[{"name":"value","nativeSrc":"23708:5:10","nodeType":"YulIdentifier","src":"23708:5:10"}],"functionName":{"name":"convert_t_enum$_DataLocation_$606_to_t_uint8","nativeSrc":"23663:44:10","nodeType":"YulIdentifier","src":"23663:44:10"},"nativeSrc":"23663:51:10","nodeType":"YulFunctionCall","src":"23663:51:10"}],"functionName":{"name":"mstore","nativeSrc":"23651:6:10","nodeType":"YulIdentifier","src":"23651:6:10"},"nativeSrc":"23651:64:10","nodeType":"YulFunctionCall","src":"23651:64:10"},"nativeSrc":"23651:64:10","nodeType":"YulExpressionStatement","src":"23651:64:10"}]},"name":"abi_encode_t_enum$_DataLocation_$606_to_t_uint8","nativeSrc":"23572:149:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23629:5:10","nodeType":"YulTypedName","src":"23629:5:10","type":""},{"name":"pos","nativeSrc":"23636:3:10","nodeType":"YulTypedName","src":"23636:3:10","type":""}],"src":"23572:149:10"},{"body":{"nativeSrc":"23776:50:10","nodeType":"YulBlock","src":"23776:50:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"23793:3:10","nodeType":"YulIdentifier","src":"23793:3:10"},{"arguments":[{"name":"value","nativeSrc":"23813:5:10","nodeType":"YulIdentifier","src":"23813:5:10"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"23798:14:10","nodeType":"YulIdentifier","src":"23798:14:10"},"nativeSrc":"23798:21:10","nodeType":"YulFunctionCall","src":"23798:21:10"}],"functionName":{"name":"mstore","nativeSrc":"23786:6:10","nodeType":"YulIdentifier","src":"23786:6:10"},"nativeSrc":"23786:34:10","nodeType":"YulFunctionCall","src":"23786:34:10"},"nativeSrc":"23786:34:10","nodeType":"YulExpressionStatement","src":"23786:34:10"}]},"name":"abi_encode_t_bool_to_t_bool","nativeSrc":"23727:99:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23764:5:10","nodeType":"YulTypedName","src":"23764:5:10","type":""},{"name":"pos","nativeSrc":"23771:3:10","nodeType":"YulTypedName","src":"23771:3:10","type":""}],"src":"23727:99:10"},{"body":{"nativeSrc":"23915:40:10","nodeType":"YulBlock","src":"23915:40:10","statements":[{"nativeSrc":"23926:22:10","nodeType":"YulAssignment","src":"23926:22:10","value":{"arguments":[{"name":"value","nativeSrc":"23942:5:10","nodeType":"YulIdentifier","src":"23942:5:10"}],"functionName":{"name":"mload","nativeSrc":"23936:5:10","nodeType":"YulIdentifier","src":"23936:5:10"},"nativeSrc":"23936:12:10","nodeType":"YulFunctionCall","src":"23936:12:10"},"variableNames":[{"name":"length","nativeSrc":"23926:6:10","nodeType":"YulIdentifier","src":"23926:6:10"}]}]},"name":"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nativeSrc":"23832:123:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23898:5:10","nodeType":"YulTypedName","src":"23898:5:10","type":""}],"returnVariables":[{"name":"length","nativeSrc":"23908:6:10","nodeType":"YulTypedName","src":"23908:6:10","type":""}],"src":"23832:123:10"},{"body":{"nativeSrc":"24071:73:10","nodeType":"YulBlock","src":"24071:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"24088:3:10","nodeType":"YulIdentifier","src":"24088:3:10"},{"name":"length","nativeSrc":"24093:6:10","nodeType":"YulIdentifier","src":"24093:6:10"}],"functionName":{"name":"mstore","nativeSrc":"24081:6:10","nodeType":"YulIdentifier","src":"24081:6:10"},"nativeSrc":"24081:19:10","nodeType":"YulFunctionCall","src":"24081:19:10"},"nativeSrc":"24081:19:10","nodeType":"YulExpressionStatement","src":"24081:19:10"},{"nativeSrc":"24109:29:10","nodeType":"YulAssignment","src":"24109:29:10","value":{"arguments":[{"name":"pos","nativeSrc":"24128:3:10","nodeType":"YulIdentifier","src":"24128:3:10"},{"kind":"number","nativeSrc":"24133:4:10","nodeType":"YulLiteral","src":"24133:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"24124:3:10","nodeType":"YulIdentifier","src":"24124:3:10"},"nativeSrc":"24124:14:10","nodeType":"YulFunctionCall","src":"24124:14:10"},"variableNames":[{"name":"updated_pos","nativeSrc":"24109:11:10","nodeType":"YulIdentifier","src":"24109:11:10"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nativeSrc":"23961:183:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"24043:3:10","nodeType":"YulTypedName","src":"24043:3:10","type":""},{"name":"length","nativeSrc":"24048:6:10","nodeType":"YulTypedName","src":"24048:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"24059:11:10","nodeType":"YulTypedName","src":"24059:11:10","type":""}],"src":"23961:183:10"},{"body":{"nativeSrc":"24231:60:10","nodeType":"YulBlock","src":"24231:60:10","statements":[{"nativeSrc":"24241:11:10","nodeType":"YulAssignment","src":"24241:11:10","value":{"name":"ptr","nativeSrc":"24249:3:10","nodeType":"YulIdentifier","src":"24249:3:10"},"variableNames":[{"name":"data","nativeSrc":"24241:4:10","nodeType":"YulIdentifier","src":"24241:4:10"}]},{"nativeSrc":"24262:22:10","nodeType":"YulAssignment","src":"24262:22:10","value":{"arguments":[{"name":"ptr","nativeSrc":"24274:3:10","nodeType":"YulIdentifier","src":"24274:3:10"},{"kind":"number","nativeSrc":"24279:4:10","nodeType":"YulLiteral","src":"24279:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"24270:3:10","nodeType":"YulIdentifier","src":"24270:3:10"},"nativeSrc":"24270:14:10","nodeType":"YulFunctionCall","src":"24270:14:10"},"variableNames":[{"name":"data","nativeSrc":"24262:4:10","nodeType":"YulIdentifier","src":"24262:4:10"}]}]},"name":"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nativeSrc":"24150:141:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"24218:3:10","nodeType":"YulTypedName","src":"24218:3:10","type":""}],"returnVariables":[{"name":"data","nativeSrc":"24226:4:10","nodeType":"YulTypedName","src":"24226:4:10","type":""}],"src":"24150:141:10"},{"body":{"nativeSrc":"24355:40:10","nodeType":"YulBlock","src":"24355:40:10","statements":[{"nativeSrc":"24366:22:10","nodeType":"YulAssignment","src":"24366:22:10","value":{"arguments":[{"name":"value","nativeSrc":"24382:5:10","nodeType":"YulIdentifier","src":"24382:5:10"}],"functionName":{"name":"mload","nativeSrc":"24376:5:10","nodeType":"YulIdentifier","src":"24376:5:10"},"nativeSrc":"24376:12:10","nodeType":"YulFunctionCall","src":"24376:12:10"},"variableNames":[{"name":"length","nativeSrc":"24366:6:10","nodeType":"YulIdentifier","src":"24366:6:10"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"24297:98:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"24338:5:10","nodeType":"YulTypedName","src":"24338:5:10","type":""}],"returnVariables":[{"name":"length","nativeSrc":"24348:6:10","nodeType":"YulTypedName","src":"24348:6:10","type":""}],"src":"24297:98:10"},{"body":{"nativeSrc":"24486:73:10","nodeType":"YulBlock","src":"24486:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"24503:3:10","nodeType":"YulIdentifier","src":"24503:3:10"},{"name":"length","nativeSrc":"24508:6:10","nodeType":"YulIdentifier","src":"24508:6:10"}],"functionName":{"name":"mstore","nativeSrc":"24496:6:10","nodeType":"YulIdentifier","src":"24496:6:10"},"nativeSrc":"24496:19:10","nodeType":"YulFunctionCall","src":"24496:19:10"},"nativeSrc":"24496:19:10","nodeType":"YulExpressionStatement","src":"24496:19:10"},{"nativeSrc":"24524:29:10","nodeType":"YulAssignment","src":"24524:29:10","value":{"arguments":[{"name":"pos","nativeSrc":"24543:3:10","nodeType":"YulIdentifier","src":"24543:3:10"},{"kind":"number","nativeSrc":"24548:4:10","nodeType":"YulLiteral","src":"24548:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"24539:3:10","nodeType":"YulIdentifier","src":"24539:3:10"},"nativeSrc":"24539:14:10","nodeType":"YulFunctionCall","src":"24539:14:10"},"variableNames":[{"name":"updated_pos","nativeSrc":"24524:11:10","nodeType":"YulIdentifier","src":"24524:11:10"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nativeSrc":"24401:158:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"24458:3:10","nodeType":"YulTypedName","src":"24458:3:10","type":""},{"name":"length","nativeSrc":"24463:6:10","nodeType":"YulTypedName","src":"24463:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"24474:11:10","nodeType":"YulTypedName","src":"24474:11:10","type":""}],"src":"24401:158:10"},{"body":{"nativeSrc":"24645:273:10","nodeType":"YulBlock","src":"24645:273:10","statements":[{"nativeSrc":"24655:52:10","nodeType":"YulVariableDeclaration","src":"24655:52:10","value":{"arguments":[{"name":"value","nativeSrc":"24701:5:10","nodeType":"YulIdentifier","src":"24701:5:10"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"24669:31:10","nodeType":"YulIdentifier","src":"24669:31:10"},"nativeSrc":"24669:38:10","nodeType":"YulFunctionCall","src":"24669:38:10"},"variables":[{"name":"length","nativeSrc":"24659:6:10","nodeType":"YulTypedName","src":"24659:6:10","type":""}]},{"nativeSrc":"24716:67:10","nodeType":"YulAssignment","src":"24716:67:10","value":{"arguments":[{"name":"pos","nativeSrc":"24771:3:10","nodeType":"YulIdentifier","src":"24771:3:10"},{"name":"length","nativeSrc":"24776:6:10","nodeType":"YulIdentifier","src":"24776:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nativeSrc":"24723:47:10","nodeType":"YulIdentifier","src":"24723:47:10"},"nativeSrc":"24723:60:10","nodeType":"YulFunctionCall","src":"24723:60:10"},"variableNames":[{"name":"pos","nativeSrc":"24716:3:10","nodeType":"YulIdentifier","src":"24716:3:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"24831:5:10","nodeType":"YulIdentifier","src":"24831:5:10"},{"kind":"number","nativeSrc":"24838:4:10","nodeType":"YulLiteral","src":"24838:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"24827:3:10","nodeType":"YulIdentifier","src":"24827:3:10"},"nativeSrc":"24827:16:10","nodeType":"YulFunctionCall","src":"24827:16:10"},{"name":"pos","nativeSrc":"24845:3:10","nodeType":"YulIdentifier","src":"24845:3:10"},{"name":"length","nativeSrc":"24850:6:10","nodeType":"YulIdentifier","src":"24850:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"24792:34:10","nodeType":"YulIdentifier","src":"24792:34:10"},"nativeSrc":"24792:65:10","nodeType":"YulFunctionCall","src":"24792:65:10"},"nativeSrc":"24792:65:10","nodeType":"YulExpressionStatement","src":"24792:65:10"},{"nativeSrc":"24866:46:10","nodeType":"YulAssignment","src":"24866:46:10","value":{"arguments":[{"name":"pos","nativeSrc":"24877:3:10","nodeType":"YulIdentifier","src":"24877:3:10"},{"arguments":[{"name":"length","nativeSrc":"24904:6:10","nodeType":"YulIdentifier","src":"24904:6:10"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"24882:21:10","nodeType":"YulIdentifier","src":"24882:21:10"},"nativeSrc":"24882:29:10","nodeType":"YulFunctionCall","src":"24882:29:10"}],"functionName":{"name":"add","nativeSrc":"24873:3:10","nodeType":"YulIdentifier","src":"24873:3:10"},"nativeSrc":"24873:39:10","nodeType":"YulFunctionCall","src":"24873:39:10"},"variableNames":[{"name":"end","nativeSrc":"24866:3:10","nodeType":"YulIdentifier","src":"24866:3:10"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nativeSrc":"24565:353:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"24626:5:10","nodeType":"YulTypedName","src":"24626:5:10","type":""},{"name":"pos","nativeSrc":"24633:3:10","nodeType":"YulTypedName","src":"24633:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"24641:3:10","nodeType":"YulTypedName","src":"24641:3:10","type":""}],"src":"24565:353:10"},{"body":{"nativeSrc":"25022:94:10","nodeType":"YulBlock","src":"25022:94:10","statements":[{"nativeSrc":"25032:78:10","nodeType":"YulAssignment","src":"25032:78:10","value":{"arguments":[{"name":"value0","nativeSrc":"25098:6:10","nodeType":"YulIdentifier","src":"25098:6:10"},{"name":"pos","nativeSrc":"25106:3:10","nodeType":"YulIdentifier","src":"25106:3:10"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nativeSrc":"25046:51:10","nodeType":"YulIdentifier","src":"25046:51:10"},"nativeSrc":"25046:64:10","nodeType":"YulFunctionCall","src":"25046:64:10"},"variableNames":[{"name":"updatedPos","nativeSrc":"25032:10:10","nodeType":"YulIdentifier","src":"25032:10:10"}]}]},"name":"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nativeSrc":"24924:192:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"24995:6:10","nodeType":"YulTypedName","src":"24995:6:10","type":""},{"name":"pos","nativeSrc":"25003:3:10","nodeType":"YulTypedName","src":"25003:3:10","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"25011:10:10","nodeType":"YulTypedName","src":"25011:10:10","type":""}],"src":"24924:192:10"},{"body":{"nativeSrc":"25206:38:10","nodeType":"YulBlock","src":"25206:38:10","statements":[{"nativeSrc":"25216:22:10","nodeType":"YulAssignment","src":"25216:22:10","value":{"arguments":[{"name":"ptr","nativeSrc":"25228:3:10","nodeType":"YulIdentifier","src":"25228:3:10"},{"kind":"number","nativeSrc":"25233:4:10","nodeType":"YulLiteral","src":"25233:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"25224:3:10","nodeType":"YulIdentifier","src":"25224:3:10"},"nativeSrc":"25224:14:10","nodeType":"YulFunctionCall","src":"25224:14:10"},"variableNames":[{"name":"next","nativeSrc":"25216:4:10","nodeType":"YulIdentifier","src":"25216:4:10"}]}]},"name":"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nativeSrc":"25122:122:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"25193:3:10","nodeType":"YulTypedName","src":"25193:3:10","type":""}],"returnVariables":[{"name":"next","nativeSrc":"25201:4:10","nodeType":"YulTypedName","src":"25201:4:10","type":""}],"src":"25122:122:10"},{"body":{"nativeSrc":"25408:831:10","nodeType":"YulBlock","src":"25408:831:10","statements":[{"nativeSrc":"25418:77:10","nodeType":"YulVariableDeclaration","src":"25418:77:10","value":{"arguments":[{"name":"value","nativeSrc":"25489:5:10","nodeType":"YulIdentifier","src":"25489:5:10"}],"functionName":{"name":"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nativeSrc":"25432:56:10","nodeType":"YulIdentifier","src":"25432:56:10"},"nativeSrc":"25432:63:10","nodeType":"YulFunctionCall","src":"25432:63:10"},"variables":[{"name":"length","nativeSrc":"25422:6:10","nodeType":"YulTypedName","src":"25422:6:10","type":""}]},{"nativeSrc":"25504:92:10","nodeType":"YulAssignment","src":"25504:92:10","value":{"arguments":[{"name":"pos","nativeSrc":"25584:3:10","nodeType":"YulIdentifier","src":"25584:3:10"},{"name":"length","nativeSrc":"25589:6:10","nodeType":"YulIdentifier","src":"25589:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nativeSrc":"25511:72:10","nodeType":"YulIdentifier","src":"25511:72:10"},"nativeSrc":"25511:85:10","nodeType":"YulFunctionCall","src":"25511:85:10"},"variableNames":[{"name":"pos","nativeSrc":"25504:3:10","nodeType":"YulIdentifier","src":"25504:3:10"}]},{"nativeSrc":"25605:20:10","nodeType":"YulVariableDeclaration","src":"25605:20:10","value":{"name":"pos","nativeSrc":"25622:3:10","nodeType":"YulIdentifier","src":"25622:3:10"},"variables":[{"name":"headStart","nativeSrc":"25609:9:10","nodeType":"YulTypedName","src":"25609:9:10","type":""}]},{"nativeSrc":"25634:39:10","nodeType":"YulVariableDeclaration","src":"25634:39:10","value":{"arguments":[{"name":"pos","nativeSrc":"25650:3:10","nodeType":"YulIdentifier","src":"25650:3:10"},{"arguments":[{"name":"length","nativeSrc":"25659:6:10","nodeType":"YulIdentifier","src":"25659:6:10"},{"kind":"number","nativeSrc":"25667:4:10","nodeType":"YulLiteral","src":"25667:4:10","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"25655:3:10","nodeType":"YulIdentifier","src":"25655:3:10"},"nativeSrc":"25655:17:10","nodeType":"YulFunctionCall","src":"25655:17:10"}],"functionName":{"name":"add","nativeSrc":"25646:3:10","nodeType":"YulIdentifier","src":"25646:3:10"},"nativeSrc":"25646:27:10","nodeType":"YulFunctionCall","src":"25646:27:10"},"variables":[{"name":"tail","nativeSrc":"25638:4:10","nodeType":"YulTypedName","src":"25638:4:10","type":""}]},{"nativeSrc":"25682:80:10","nodeType":"YulVariableDeclaration","src":"25682:80:10","value":{"arguments":[{"name":"value","nativeSrc":"25756:5:10","nodeType":"YulIdentifier","src":"25756:5:10"}],"functionName":{"name":"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nativeSrc":"25697:58:10","nodeType":"YulIdentifier","src":"25697:58:10"},"nativeSrc":"25697:65:10","nodeType":"YulFunctionCall","src":"25697:65:10"},"variables":[{"name":"baseRef","nativeSrc":"25686:7:10","nodeType":"YulTypedName","src":"25686:7:10","type":""}]},{"nativeSrc":"25771:21:10","nodeType":"YulVariableDeclaration","src":"25771:21:10","value":{"name":"baseRef","nativeSrc":"25785:7:10","nodeType":"YulIdentifier","src":"25785:7:10"},"variables":[{"name":"srcPtr","nativeSrc":"25775:6:10","nodeType":"YulTypedName","src":"25775:6:10","type":""}]},{"body":{"nativeSrc":"25861:333:10","nodeType":"YulBlock","src":"25861:333:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"25882:3:10","nodeType":"YulIdentifier","src":"25882:3:10"},{"arguments":[{"name":"tail","nativeSrc":"25891:4:10","nodeType":"YulIdentifier","src":"25891:4:10"},{"name":"headStart","nativeSrc":"25897:9:10","nodeType":"YulIdentifier","src":"25897:9:10"}],"functionName":{"name":"sub","nativeSrc":"25887:3:10","nodeType":"YulIdentifier","src":"25887:3:10"},"nativeSrc":"25887:20:10","nodeType":"YulFunctionCall","src":"25887:20:10"}],"functionName":{"name":"mstore","nativeSrc":"25875:6:10","nodeType":"YulIdentifier","src":"25875:6:10"},"nativeSrc":"25875:33:10","nodeType":"YulFunctionCall","src":"25875:33:10"},"nativeSrc":"25875:33:10","nodeType":"YulExpressionStatement","src":"25875:33:10"},{"nativeSrc":"25921:34:10","nodeType":"YulVariableDeclaration","src":"25921:34:10","value":{"arguments":[{"name":"srcPtr","nativeSrc":"25948:6:10","nodeType":"YulIdentifier","src":"25948:6:10"}],"functionName":{"name":"mload","nativeSrc":"25942:5:10","nodeType":"YulIdentifier","src":"25942:5:10"},"nativeSrc":"25942:13:10","nodeType":"YulFunctionCall","src":"25942:13:10"},"variables":[{"name":"elementValue0","nativeSrc":"25925:13:10","nodeType":"YulTypedName","src":"25925:13:10","type":""}]},{"nativeSrc":"25968:90:10","nodeType":"YulAssignment","src":"25968:90:10","value":{"arguments":[{"name":"elementValue0","nativeSrc":"26038:13:10","nodeType":"YulIdentifier","src":"26038:13:10"},{"name":"tail","nativeSrc":"26053:4:10","nodeType":"YulIdentifier","src":"26053:4:10"}],"functionName":{"name":"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nativeSrc":"25976:61:10","nodeType":"YulIdentifier","src":"25976:61:10"},"nativeSrc":"25976:82:10","nodeType":"YulFunctionCall","src":"25976:82:10"},"variableNames":[{"name":"tail","nativeSrc":"25968:4:10","nodeType":"YulIdentifier","src":"25968:4:10"}]},{"nativeSrc":"26071:79:10","nodeType":"YulAssignment","src":"26071:79:10","value":{"arguments":[{"name":"srcPtr","nativeSrc":"26143:6:10","nodeType":"YulIdentifier","src":"26143:6:10"}],"functionName":{"name":"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nativeSrc":"26081:61:10","nodeType":"YulIdentifier","src":"26081:61:10"},"nativeSrc":"26081:69:10","nodeType":"YulFunctionCall","src":"26081:69:10"},"variableNames":[{"name":"srcPtr","nativeSrc":"26071:6:10","nodeType":"YulIdentifier","src":"26071:6:10"}]},{"nativeSrc":"26163:21:10","nodeType":"YulAssignment","src":"26163:21:10","value":{"arguments":[{"name":"pos","nativeSrc":"26174:3:10","nodeType":"YulIdentifier","src":"26174:3:10"},{"kind":"number","nativeSrc":"26179:4:10","nodeType":"YulLiteral","src":"26179:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"26170:3:10","nodeType":"YulIdentifier","src":"26170:3:10"},"nativeSrc":"26170:14:10","nodeType":"YulFunctionCall","src":"26170:14:10"},"variableNames":[{"name":"pos","nativeSrc":"26163:3:10","nodeType":"YulIdentifier","src":"26163:3:10"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"25823:1:10","nodeType":"YulIdentifier","src":"25823:1:10"},{"name":"length","nativeSrc":"25826:6:10","nodeType":"YulIdentifier","src":"25826:6:10"}],"functionName":{"name":"lt","nativeSrc":"25820:2:10","nodeType":"YulIdentifier","src":"25820:2:10"},"nativeSrc":"25820:13:10","nodeType":"YulFunctionCall","src":"25820:13:10"},"nativeSrc":"25801:393:10","nodeType":"YulForLoop","post":{"nativeSrc":"25834:18:10","nodeType":"YulBlock","src":"25834:18:10","statements":[{"nativeSrc":"25836:14:10","nodeType":"YulAssignment","src":"25836:14:10","value":{"arguments":[{"name":"i","nativeSrc":"25845:1:10","nodeType":"YulIdentifier","src":"25845:1:10"},{"kind":"number","nativeSrc":"25848:1:10","nodeType":"YulLiteral","src":"25848:1:10","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"25841:3:10","nodeType":"YulIdentifier","src":"25841:3:10"},"nativeSrc":"25841:9:10","nodeType":"YulFunctionCall","src":"25841:9:10"},"variableNames":[{"name":"i","nativeSrc":"25836:1:10","nodeType":"YulIdentifier","src":"25836:1:10"}]}]},"pre":{"nativeSrc":"25805:14:10","nodeType":"YulBlock","src":"25805:14:10","statements":[{"nativeSrc":"25807:10:10","nodeType":"YulVariableDeclaration","src":"25807:10:10","value":{"kind":"number","nativeSrc":"25816:1:10","nodeType":"YulLiteral","src":"25816:1:10","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"25811:1:10","nodeType":"YulTypedName","src":"25811:1:10","type":""}]}]},"src":"25801:393:10"},{"nativeSrc":"26203:11:10","nodeType":"YulAssignment","src":"26203:11:10","value":{"name":"tail","nativeSrc":"26210:4:10","nodeType":"YulIdentifier","src":"26210:4:10"},"variableNames":[{"name":"pos","nativeSrc":"26203:3:10","nodeType":"YulIdentifier","src":"26203:3:10"}]},{"nativeSrc":"26223:10:10","nodeType":"YulAssignment","src":"26223:10:10","value":{"name":"pos","nativeSrc":"26230:3:10","nodeType":"YulIdentifier","src":"26230:3:10"},"variableNames":[{"name":"end","nativeSrc":"26223:3:10","nodeType":"YulIdentifier","src":"26223:3:10"}]}]},"name":"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nativeSrc":"25276:963:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"25387:5:10","nodeType":"YulTypedName","src":"25387:5:10","type":""},{"name":"pos","nativeSrc":"25394:3:10","nodeType":"YulTypedName","src":"25394:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"25403:3:10","nodeType":"YulTypedName","src":"25403:3:10","type":""}],"src":"25276:963:10"},{"body":{"nativeSrc":"26423:2067:10","nodeType":"YulBlock","src":"26423:2067:10","statements":[{"nativeSrc":"26433:28:10","nodeType":"YulVariableDeclaration","src":"26433:28:10","value":{"arguments":[{"name":"pos","nativeSrc":"26449:3:10","nodeType":"YulIdentifier","src":"26449:3:10"},{"kind":"number","nativeSrc":"26454:6:10","nodeType":"YulLiteral","src":"26454:6:10","type":"","value":"0x0140"}],"functionName":{"name":"add","nativeSrc":"26445:3:10","nodeType":"YulIdentifier","src":"26445:3:10"},"nativeSrc":"26445:16:10","nodeType":"YulFunctionCall","src":"26445:16:10"},"variables":[{"name":"tail","nativeSrc":"26437:4:10","nodeType":"YulTypedName","src":"26437:4:10","type":""}]},{"nativeSrc":"26471:166:10","nodeType":"YulBlock","src":"26471:166:10","statements":[{"nativeSrc":"26510:43:10","nodeType":"YulVariableDeclaration","src":"26510:43:10","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"26540:5:10","nodeType":"YulIdentifier","src":"26540:5:10"},{"kind":"number","nativeSrc":"26547:4:10","nodeType":"YulLiteral","src":"26547:4:10","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"26536:3:10","nodeType":"YulIdentifier","src":"26536:3:10"},"nativeSrc":"26536:16:10","nodeType":"YulFunctionCall","src":"26536:16:10"}],"functionName":{"name":"mload","nativeSrc":"26530:5:10","nodeType":"YulIdentifier","src":"26530:5:10"},"nativeSrc":"26530:23:10","nodeType":"YulFunctionCall","src":"26530:23:10"},"variables":[{"name":"memberValue0","nativeSrc":"26514:12:10","nodeType":"YulTypedName","src":"26514:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"26598:12:10","nodeType":"YulIdentifier","src":"26598:12:10"},{"arguments":[{"name":"pos","nativeSrc":"26616:3:10","nodeType":"YulIdentifier","src":"26616:3:10"},{"kind":"number","nativeSrc":"26621:4:10","nodeType":"YulLiteral","src":"26621:4:10","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"26612:3:10","nodeType":"YulIdentifier","src":"26612:3:10"},"nativeSrc":"26612:14:10","nodeType":"YulFunctionCall","src":"26612:14:10"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64","nativeSrc":"26566:31:10","nodeType":"YulIdentifier","src":"26566:31:10"},"nativeSrc":"26566:61:10","nodeType":"YulFunctionCall","src":"26566:61:10"},"nativeSrc":"26566:61:10","nodeType":"YulExpressionStatement","src":"26566:61:10"}]},{"nativeSrc":"26647:177:10","nodeType":"YulBlock","src":"26647:177:10","statements":[{"nativeSrc":"26697:43:10","nodeType":"YulVariableDeclaration","src":"26697:43:10","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"26727:5:10","nodeType":"YulIdentifier","src":"26727:5:10"},{"kind":"number","nativeSrc":"26734:4:10","nodeType":"YulLiteral","src":"26734:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"26723:3:10","nodeType":"YulIdentifier","src":"26723:3:10"},"nativeSrc":"26723:16:10","nodeType":"YulFunctionCall","src":"26723:16:10"}],"functionName":{"name":"mload","nativeSrc":"26717:5:10","nodeType":"YulIdentifier","src":"26717:5:10"},"nativeSrc":"26717:23:10","nodeType":"YulFunctionCall","src":"26717:23:10"},"variables":[{"name":"memberValue0","nativeSrc":"26701:12:10","nodeType":"YulTypedName","src":"26701:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"26785:12:10","nodeType":"YulIdentifier","src":"26785:12:10"},{"arguments":[{"name":"pos","nativeSrc":"26803:3:10","nodeType":"YulIdentifier","src":"26803:3:10"},{"kind":"number","nativeSrc":"26808:4:10","nodeType":"YulLiteral","src":"26808:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"26799:3:10","nodeType":"YulIdentifier","src":"26799:3:10"},"nativeSrc":"26799:14:10","nodeType":"YulFunctionCall","src":"26799:14:10"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64","nativeSrc":"26753:31:10","nodeType":"YulIdentifier","src":"26753:31:10"},"nativeSrc":"26753:61:10","nodeType":"YulFunctionCall","src":"26753:61:10"},"nativeSrc":"26753:61:10","nodeType":"YulExpressionStatement","src":"26753:61:10"}]},{"nativeSrc":"26834:173:10","nodeType":"YulBlock","src":"26834:173:10","statements":[{"nativeSrc":"26880:43:10","nodeType":"YulVariableDeclaration","src":"26880:43:10","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"26910:5:10","nodeType":"YulIdentifier","src":"26910:5:10"},{"kind":"number","nativeSrc":"26917:4:10","nodeType":"YulLiteral","src":"26917:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"26906:3:10","nodeType":"YulIdentifier","src":"26906:3:10"},"nativeSrc":"26906:16:10","nodeType":"YulFunctionCall","src":"26906:16:10"}],"functionName":{"name":"mload","nativeSrc":"26900:5:10","nodeType":"YulIdentifier","src":"26900:5:10"},"nativeSrc":"26900:23:10","nodeType":"YulFunctionCall","src":"26900:23:10"},"variables":[{"name":"memberValue0","nativeSrc":"26884:12:10","nodeType":"YulTypedName","src":"26884:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"26968:12:10","nodeType":"YulIdentifier","src":"26968:12:10"},{"arguments":[{"name":"pos","nativeSrc":"26986:3:10","nodeType":"YulIdentifier","src":"26986:3:10"},{"kind":"number","nativeSrc":"26991:4:10","nodeType":"YulLiteral","src":"26991:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"26982:3:10","nodeType":"YulIdentifier","src":"26982:3:10"},"nativeSrc":"26982:14:10","nodeType":"YulFunctionCall","src":"26982:14:10"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64","nativeSrc":"26936:31:10","nodeType":"YulIdentifier","src":"26936:31:10"},"nativeSrc":"26936:61:10","nodeType":"YulFunctionCall","src":"26936:61:10"},"nativeSrc":"26936:61:10","nodeType":"YulExpressionStatement","src":"26936:61:10"}]},{"nativeSrc":"27017:173:10","nodeType":"YulBlock","src":"27017:173:10","statements":[{"nativeSrc":"27063:43:10","nodeType":"YulVariableDeclaration","src":"27063:43:10","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"27093:5:10","nodeType":"YulIdentifier","src":"27093:5:10"},{"kind":"number","nativeSrc":"27100:4:10","nodeType":"YulLiteral","src":"27100:4:10","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"27089:3:10","nodeType":"YulIdentifier","src":"27089:3:10"},"nativeSrc":"27089:16:10","nodeType":"YulFunctionCall","src":"27089:16:10"}],"functionName":{"name":"mload","nativeSrc":"27083:5:10","nodeType":"YulIdentifier","src":"27083:5:10"},"nativeSrc":"27083:23:10","nodeType":"YulFunctionCall","src":"27083:23:10"},"variables":[{"name":"memberValue0","nativeSrc":"27067:12:10","nodeType":"YulTypedName","src":"27067:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"27151:12:10","nodeType":"YulIdentifier","src":"27151:12:10"},{"arguments":[{"name":"pos","nativeSrc":"27169:3:10","nodeType":"YulIdentifier","src":"27169:3:10"},{"kind":"number","nativeSrc":"27174:4:10","nodeType":"YulLiteral","src":"27174:4:10","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"27165:3:10","nodeType":"YulIdentifier","src":"27165:3:10"},"nativeSrc":"27165:14:10","nodeType":"YulFunctionCall","src":"27165:14:10"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64","nativeSrc":"27119:31:10","nodeType":"YulIdentifier","src":"27119:31:10"},"nativeSrc":"27119:61:10","nodeType":"YulFunctionCall","src":"27119:61:10"},"nativeSrc":"27119:61:10","nodeType":"YulExpressionStatement","src":"27119:61:10"}]},{"nativeSrc":"27200:168:10","nodeType":"YulBlock","src":"27200:168:10","statements":[{"nativeSrc":"27239:43:10","nodeType":"YulVariableDeclaration","src":"27239:43:10","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"27269:5:10","nodeType":"YulIdentifier","src":"27269:5:10"},{"kind":"number","nativeSrc":"27276:4:10","nodeType":"YulLiteral","src":"27276:4:10","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"27265:3:10","nodeType":"YulIdentifier","src":"27265:3:10"},"nativeSrc":"27265:16:10","nodeType":"YulFunctionCall","src":"27265:16:10"}],"functionName":{"name":"mload","nativeSrc":"27259:5:10","nodeType":"YulIdentifier","src":"27259:5:10"},"nativeSrc":"27259:23:10","nodeType":"YulFunctionCall","src":"27259:23:10"},"variables":[{"name":"memberValue0","nativeSrc":"27243:12:10","nodeType":"YulTypedName","src":"27243:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"27329:12:10","nodeType":"YulIdentifier","src":"27329:12:10"},{"arguments":[{"name":"pos","nativeSrc":"27347:3:10","nodeType":"YulIdentifier","src":"27347:3:10"},{"kind":"number","nativeSrc":"27352:4:10","nodeType":"YulLiteral","src":"27352:4:10","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"27343:3:10","nodeType":"YulIdentifier","src":"27343:3:10"},"nativeSrc":"27343:14:10","nodeType":"YulFunctionCall","src":"27343:14:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nativeSrc":"27295:33:10","nodeType":"YulIdentifier","src":"27295:33:10"},"nativeSrc":"27295:63:10","nodeType":"YulFunctionCall","src":"27295:63:10"},"nativeSrc":"27295:63:10","nodeType":"YulExpressionStatement","src":"27295:63:10"}]},{"nativeSrc":"27378:168:10","nodeType":"YulBlock","src":"27378:168:10","statements":[{"nativeSrc":"27419:43:10","nodeType":"YulVariableDeclaration","src":"27419:43:10","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"27449:5:10","nodeType":"YulIdentifier","src":"27449:5:10"},{"kind":"number","nativeSrc":"27456:4:10","nodeType":"YulLiteral","src":"27456:4:10","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"27445:3:10","nodeType":"YulIdentifier","src":"27445:3:10"},"nativeSrc":"27445:16:10","nodeType":"YulFunctionCall","src":"27445:16:10"}],"functionName":{"name":"mload","nativeSrc":"27439:5:10","nodeType":"YulIdentifier","src":"27439:5:10"},"nativeSrc":"27439:23:10","nodeType":"YulFunctionCall","src":"27439:23:10"},"variables":[{"name":"memberValue0","nativeSrc":"27423:12:10","nodeType":"YulTypedName","src":"27423:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"27507:12:10","nodeType":"YulIdentifier","src":"27507:12:10"},{"arguments":[{"name":"pos","nativeSrc":"27525:3:10","nodeType":"YulIdentifier","src":"27525:3:10"},{"kind":"number","nativeSrc":"27530:4:10","nodeType":"YulLiteral","src":"27530:4:10","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"27521:3:10","nodeType":"YulIdentifier","src":"27521:3:10"},"nativeSrc":"27521:14:10","nodeType":"YulFunctionCall","src":"27521:14:10"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64","nativeSrc":"27475:31:10","nodeType":"YulIdentifier","src":"27475:31:10"},"nativeSrc":"27475:61:10","nodeType":"YulFunctionCall","src":"27475:61:10"},"nativeSrc":"27475:61:10","nodeType":"YulExpressionStatement","src":"27475:61:10"}]},{"nativeSrc":"27556:186:10","nodeType":"YulBlock","src":"27556:186:10","statements":[{"nativeSrc":"27599:43:10","nodeType":"YulVariableDeclaration","src":"27599:43:10","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"27629:5:10","nodeType":"YulIdentifier","src":"27629:5:10"},{"kind":"number","nativeSrc":"27636:4:10","nodeType":"YulLiteral","src":"27636:4:10","type":"","value":"0xc0"}],"functionName":{"name":"add","nativeSrc":"27625:3:10","nodeType":"YulIdentifier","src":"27625:3:10"},"nativeSrc":"27625:16:10","nodeType":"YulFunctionCall","src":"27625:16:10"}],"functionName":{"name":"mload","nativeSrc":"27619:5:10","nodeType":"YulIdentifier","src":"27619:5:10"},"nativeSrc":"27619:23:10","nodeType":"YulFunctionCall","src":"27619:23:10"},"variables":[{"name":"memberValue0","nativeSrc":"27603:12:10","nodeType":"YulTypedName","src":"27603:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"27703:12:10","nodeType":"YulIdentifier","src":"27703:12:10"},{"arguments":[{"name":"pos","nativeSrc":"27721:3:10","nodeType":"YulIdentifier","src":"27721:3:10"},{"kind":"number","nativeSrc":"27726:4:10","nodeType":"YulLiteral","src":"27726:4:10","type":"","value":"0xc0"}],"functionName":{"name":"add","nativeSrc":"27717:3:10","nodeType":"YulIdentifier","src":"27717:3:10"},"nativeSrc":"27717:14:10","nodeType":"YulFunctionCall","src":"27717:14:10"}],"functionName":{"name":"abi_encode_t_enum$_DataLocation_$606_to_t_uint8","nativeSrc":"27655:47:10","nodeType":"YulIdentifier","src":"27655:47:10"},"nativeSrc":"27655:77:10","nodeType":"YulFunctionCall","src":"27655:77:10"},"nativeSrc":"27655:77:10","nodeType":"YulExpressionStatement","src":"27655:77:10"}]},{"nativeSrc":"27752:161:10","nodeType":"YulBlock","src":"27752:161:10","statements":[{"nativeSrc":"27790:43:10","nodeType":"YulVariableDeclaration","src":"27790:43:10","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"27820:5:10","nodeType":"YulIdentifier","src":"27820:5:10"},{"kind":"number","nativeSrc":"27827:4:10","nodeType":"YulLiteral","src":"27827:4:10","type":"","value":"0xe0"}],"functionName":{"name":"add","nativeSrc":"27816:3:10","nodeType":"YulIdentifier","src":"27816:3:10"},"nativeSrc":"27816:16:10","nodeType":"YulFunctionCall","src":"27816:16:10"}],"functionName":{"name":"mload","nativeSrc":"27810:5:10","nodeType":"YulIdentifier","src":"27810:5:10"},"nativeSrc":"27810:23:10","nodeType":"YulFunctionCall","src":"27810:23:10"},"variables":[{"name":"memberValue0","nativeSrc":"27794:12:10","nodeType":"YulTypedName","src":"27794:12:10","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"27874:12:10","nodeType":"YulIdentifier","src":"27874:12:10"},{"arguments":[{"name":"pos","nativeSrc":"27892:3:10","nodeType":"YulIdentifier","src":"27892:3:10"},{"kind":"number","nativeSrc":"27897:4:10","nodeType":"YulLiteral","src":"27897:4:10","type":"","value":"0xe0"}],"functionName":{"name":"add","nativeSrc":"27888:3:10","nodeType":"YulIdentifier","src":"27888:3:10"},"nativeSrc":"27888:14:10","nodeType":"YulFunctionCall","src":"27888:14:10"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nativeSrc":"27846:27:10","nodeType":"YulIdentifier","src":"27846:27:10"},"nativeSrc":"27846:57:10","nodeType":"YulFunctionCall","src":"27846:57:10"},"nativeSrc":"27846:57:10","nodeType":"YulExpressionStatement","src":"27846:57:10"}]},{"nativeSrc":"27923:293:10","nodeType":"YulBlock","src":"27923:293:10","statements":[{"nativeSrc":"27964:45:10","nodeType":"YulVariableDeclaration","src":"27964:45:10","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"27994:5:10","nodeType":"YulIdentifier","src":"27994:5:10"},{"kind":"number","nativeSrc":"28001:6:10","nodeType":"YulLiteral","src":"28001:6:10","type":"","value":"0x0100"}],"functionName":{"name":"add","nativeSrc":"27990:3:10","nodeType":"YulIdentifier","src":"27990:3:10"},"nativeSrc":"27990:18:10","nodeType":"YulFunctionCall","src":"27990:18:10"}],"functionName":{"name":"mload","nativeSrc":"27984:5:10","nodeType":"YulIdentifier","src":"27984:5:10"},"nativeSrc":"27984:25:10","nodeType":"YulFunctionCall","src":"27984:25:10"},"variables":[{"name":"memberValue0","nativeSrc":"27968:12:10","nodeType":"YulTypedName","src":"27968:12:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"28034:3:10","nodeType":"YulIdentifier","src":"28034:3:10"},{"kind":"number","nativeSrc":"28039:6:10","nodeType":"YulLiteral","src":"28039:6:10","type":"","value":"0x0100"}],"functionName":{"name":"add","nativeSrc":"28030:3:10","nodeType":"YulIdentifier","src":"28030:3:10"},"nativeSrc":"28030:16:10","nodeType":"YulFunctionCall","src":"28030:16:10"},{"arguments":[{"name":"tail","nativeSrc":"28052:4:10","nodeType":"YulIdentifier","src":"28052:4:10"},{"name":"pos","nativeSrc":"28058:3:10","nodeType":"YulIdentifier","src":"28058:3:10"}],"functionName":{"name":"sub","nativeSrc":"28048:3:10","nodeType":"YulIdentifier","src":"28048:3:10"},"nativeSrc":"28048:14:10","nodeType":"YulFunctionCall","src":"28048:14:10"}],"functionName":{"name":"mstore","nativeSrc":"28023:6:10","nodeType":"YulIdentifier","src":"28023:6:10"},"nativeSrc":"28023:40:10","nodeType":"YulFunctionCall","src":"28023:40:10"},"nativeSrc":"28023:40:10","nodeType":"YulExpressionStatement","src":"28023:40:10"},{"nativeSrc":"28076:129:10","nodeType":"YulAssignment","src":"28076:129:10","value":{"arguments":[{"name":"memberValue0","nativeSrc":"28186:12:10","nodeType":"YulIdentifier","src":"28186:12:10"},{"name":"tail","nativeSrc":"28200:4:10","nodeType":"YulIdentifier","src":"28200:4:10"}],"functionName":{"name":"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nativeSrc":"28084:101:10","nodeType":"YulIdentifier","src":"28084:101:10"},"nativeSrc":"28084:121:10","nodeType":"YulFunctionCall","src":"28084:121:10"},"variableNames":[{"name":"tail","nativeSrc":"28076:4:10","nodeType":"YulIdentifier","src":"28076:4:10"}]}]},{"nativeSrc":"28226:237:10","nodeType":"YulBlock","src":"28226:237:10","statements":[{"nativeSrc":"28261:45:10","nodeType":"YulVariableDeclaration","src":"28261:45:10","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"28291:5:10","nodeType":"YulIdentifier","src":"28291:5:10"},{"kind":"number","nativeSrc":"28298:6:10","nodeType":"YulLiteral","src":"28298:6:10","type":"","value":"0x0120"}],"functionName":{"name":"add","nativeSrc":"28287:3:10","nodeType":"YulIdentifier","src":"28287:3:10"},"nativeSrc":"28287:18:10","nodeType":"YulFunctionCall","src":"28287:18:10"}],"functionName":{"name":"mload","nativeSrc":"28281:5:10","nodeType":"YulIdentifier","src":"28281:5:10"},"nativeSrc":"28281:25:10","nodeType":"YulFunctionCall","src":"28281:25:10"},"variables":[{"name":"memberValue0","nativeSrc":"28265:12:10","nodeType":"YulTypedName","src":"28265:12:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"28331:3:10","nodeType":"YulIdentifier","src":"28331:3:10"},{"kind":"number","nativeSrc":"28336:6:10","nodeType":"YulLiteral","src":"28336:6:10","type":"","value":"0x0120"}],"functionName":{"name":"add","nativeSrc":"28327:3:10","nodeType":"YulIdentifier","src":"28327:3:10"},"nativeSrc":"28327:16:10","nodeType":"YulFunctionCall","src":"28327:16:10"},{"arguments":[{"name":"tail","nativeSrc":"28349:4:10","nodeType":"YulIdentifier","src":"28349:4:10"},{"name":"pos","nativeSrc":"28355:3:10","nodeType":"YulIdentifier","src":"28355:3:10"}],"functionName":{"name":"sub","nativeSrc":"28345:3:10","nodeType":"YulIdentifier","src":"28345:3:10"},"nativeSrc":"28345:14:10","nodeType":"YulFunctionCall","src":"28345:14:10"}],"functionName":{"name":"mstore","nativeSrc":"28320:6:10","nodeType":"YulIdentifier","src":"28320:6:10"},"nativeSrc":"28320:40:10","nodeType":"YulFunctionCall","src":"28320:40:10"},"nativeSrc":"28320:40:10","nodeType":"YulExpressionStatement","src":"28320:40:10"},{"nativeSrc":"28373:79:10","nodeType":"YulAssignment","src":"28373:79:10","value":{"arguments":[{"name":"memberValue0","nativeSrc":"28433:12:10","nodeType":"YulIdentifier","src":"28433:12:10"},{"name":"tail","nativeSrc":"28447:4:10","nodeType":"YulIdentifier","src":"28447:4:10"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nativeSrc":"28381:51:10","nodeType":"YulIdentifier","src":"28381:51:10"},"nativeSrc":"28381:71:10","nodeType":"YulFunctionCall","src":"28381:71:10"},"variableNames":[{"name":"tail","nativeSrc":"28373:4:10","nodeType":"YulIdentifier","src":"28373:4:10"}]}]},{"nativeSrc":"28473:11:10","nodeType":"YulAssignment","src":"28473:11:10","value":{"name":"tail","nativeSrc":"28480:4:10","nodeType":"YulIdentifier","src":"28480:4:10"},"variableNames":[{"name":"end","nativeSrc":"28473:3:10","nodeType":"YulIdentifier","src":"28473:3:10"}]}]},"name":"abi_encode_t_struct$_Attestation_$592_memory_ptr_to_t_struct$_Attestation_$592_memory_ptr_fromStack","nativeSrc":"26293:2197:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"26402:5:10","nodeType":"YulTypedName","src":"26402:5:10","type":""},{"name":"pos","nativeSrc":"26409:3:10","nodeType":"YulTypedName","src":"26409:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"26418:3:10","nodeType":"YulTypedName","src":"26418:3:10","type":""}],"src":"26293:2197:10"},{"body":{"nativeSrc":"28602:8:10","nodeType":"YulBlock","src":"28602:8:10","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"28496:114:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"28594:6:10","nodeType":"YulTypedName","src":"28594:6:10","type":""}],"src":"28496:114:10"},{"body":{"nativeSrc":"28762:218:10","nodeType":"YulBlock","src":"28762:218:10","statements":[{"nativeSrc":"28772:73:10","nodeType":"YulAssignment","src":"28772:73:10","value":{"arguments":[{"name":"pos","nativeSrc":"28838:3:10","nodeType":"YulIdentifier","src":"28838:3:10"},{"kind":"number","nativeSrc":"28843:1:10","nodeType":"YulLiteral","src":"28843:1:10","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"28779:58:10","nodeType":"YulIdentifier","src":"28779:58:10"},"nativeSrc":"28779:66:10","nodeType":"YulFunctionCall","src":"28779:66:10"},"variableNames":[{"name":"pos","nativeSrc":"28772:3:10","nodeType":"YulIdentifier","src":"28772:3:10"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"28943:3:10","nodeType":"YulIdentifier","src":"28943:3:10"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"28854:88:10","nodeType":"YulIdentifier","src":"28854:88:10"},"nativeSrc":"28854:93:10","nodeType":"YulFunctionCall","src":"28854:93:10"},"nativeSrc":"28854:93:10","nodeType":"YulExpressionStatement","src":"28854:93:10"},{"nativeSrc":"28956:18:10","nodeType":"YulAssignment","src":"28956:18:10","value":{"arguments":[{"name":"pos","nativeSrc":"28967:3:10","nodeType":"YulIdentifier","src":"28967:3:10"},{"kind":"number","nativeSrc":"28972:1:10","nodeType":"YulLiteral","src":"28972:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"28963:3:10","nodeType":"YulIdentifier","src":"28963:3:10"},"nativeSrc":"28963:11:10","nodeType":"YulFunctionCall","src":"28963:11:10"},"variableNames":[{"name":"end","nativeSrc":"28956:3:10","nodeType":"YulIdentifier","src":"28956:3:10"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_string_memory_ptr_fromStack","nativeSrc":"28616:364:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"28750:3:10","nodeType":"YulTypedName","src":"28750:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"28758:3:10","nodeType":"YulTypedName","src":"28758:3:10","type":""}],"src":"28616:364:10"},{"body":{"nativeSrc":"29081:73:10","nodeType":"YulBlock","src":"29081:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"29098:3:10","nodeType":"YulIdentifier","src":"29098:3:10"},{"name":"length","nativeSrc":"29103:6:10","nodeType":"YulIdentifier","src":"29103:6:10"}],"functionName":{"name":"mstore","nativeSrc":"29091:6:10","nodeType":"YulIdentifier","src":"29091:6:10"},"nativeSrc":"29091:19:10","nodeType":"YulFunctionCall","src":"29091:19:10"},"nativeSrc":"29091:19:10","nodeType":"YulExpressionStatement","src":"29091:19:10"},{"nativeSrc":"29119:29:10","nodeType":"YulAssignment","src":"29119:29:10","value":{"arguments":[{"name":"pos","nativeSrc":"29138:3:10","nodeType":"YulIdentifier","src":"29138:3:10"},{"kind":"number","nativeSrc":"29143:4:10","nodeType":"YulLiteral","src":"29143:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"29134:3:10","nodeType":"YulIdentifier","src":"29134:3:10"},"nativeSrc":"29134:14:10","nodeType":"YulFunctionCall","src":"29134:14:10"},"variableNames":[{"name":"updated_pos","nativeSrc":"29119:11:10","nodeType":"YulIdentifier","src":"29119:11:10"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"28986:168:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"29053:3:10","nodeType":"YulTypedName","src":"29053:3:10","type":""},{"name":"length","nativeSrc":"29058:6:10","nodeType":"YulTypedName","src":"29058:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"29069:11:10","nodeType":"YulTypedName","src":"29069:11:10","type":""}],"src":"28986:168:10"},{"body":{"nativeSrc":"29305:217:10","nodeType":"YulBlock","src":"29305:217:10","statements":[{"nativeSrc":"29315:72:10","nodeType":"YulAssignment","src":"29315:72:10","value":{"arguments":[{"name":"pos","nativeSrc":"29380:3:10","nodeType":"YulIdentifier","src":"29380:3:10"},{"kind":"number","nativeSrc":"29385:1:10","nodeType":"YulLiteral","src":"29385:1:10","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"29322:57:10","nodeType":"YulIdentifier","src":"29322:57:10"},"nativeSrc":"29322:65:10","nodeType":"YulFunctionCall","src":"29322:65:10"},"variableNames":[{"name":"pos","nativeSrc":"29315:3:10","nodeType":"YulIdentifier","src":"29315:3:10"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"29485:3:10","nodeType":"YulIdentifier","src":"29485:3:10"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"29396:88:10","nodeType":"YulIdentifier","src":"29396:88:10"},"nativeSrc":"29396:93:10","nodeType":"YulFunctionCall","src":"29396:93:10"},"nativeSrc":"29396:93:10","nodeType":"YulExpressionStatement","src":"29396:93:10"},{"nativeSrc":"29498:18:10","nodeType":"YulAssignment","src":"29498:18:10","value":{"arguments":[{"name":"pos","nativeSrc":"29509:3:10","nodeType":"YulIdentifier","src":"29509:3:10"},{"kind":"number","nativeSrc":"29514:1:10","nodeType":"YulLiteral","src":"29514:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"29505:3:10","nodeType":"YulIdentifier","src":"29505:3:10"},"nativeSrc":"29505:11:10","nodeType":"YulFunctionCall","src":"29505:11:10"},"variableNames":[{"name":"end","nativeSrc":"29498:3:10","nodeType":"YulIdentifier","src":"29498:3:10"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack","nativeSrc":"29160:362:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"29293:3:10","nodeType":"YulTypedName","src":"29293:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"29301:3:10","nodeType":"YulTypedName","src":"29301:3:10","type":""}],"src":"29160:362:10"},{"body":{"nativeSrc":"29983:848:10","nodeType":"YulBlock","src":"29983:848:10","statements":[{"nativeSrc":"29993:27:10","nodeType":"YulAssignment","src":"29993:27:10","value":{"arguments":[{"name":"headStart","nativeSrc":"30005:9:10","nodeType":"YulIdentifier","src":"30005:9:10"},{"kind":"number","nativeSrc":"30016:3:10","nodeType":"YulLiteral","src":"30016:3:10","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"30001:3:10","nodeType":"YulIdentifier","src":"30001:3:10"},"nativeSrc":"30001:19:10","nodeType":"YulFunctionCall","src":"30001:19:10"},"variableNames":[{"name":"tail","nativeSrc":"29993:4:10","nodeType":"YulIdentifier","src":"29993:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"30041:9:10","nodeType":"YulIdentifier","src":"30041:9:10"},{"kind":"number","nativeSrc":"30052:1:10","nodeType":"YulLiteral","src":"30052:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"30037:3:10","nodeType":"YulIdentifier","src":"30037:3:10"},"nativeSrc":"30037:17:10","nodeType":"YulFunctionCall","src":"30037:17:10"},{"arguments":[{"name":"tail","nativeSrc":"30060:4:10","nodeType":"YulIdentifier","src":"30060:4:10"},{"name":"headStart","nativeSrc":"30066:9:10","nodeType":"YulIdentifier","src":"30066:9:10"}],"functionName":{"name":"sub","nativeSrc":"30056:3:10","nodeType":"YulIdentifier","src":"30056:3:10"},"nativeSrc":"30056:20:10","nodeType":"YulFunctionCall","src":"30056:20:10"}],"functionName":{"name":"mstore","nativeSrc":"30030:6:10","nodeType":"YulIdentifier","src":"30030:6:10"},"nativeSrc":"30030:47:10","nodeType":"YulFunctionCall","src":"30030:47:10"},"nativeSrc":"30030:47:10","nodeType":"YulExpressionStatement","src":"30030:47:10"},{"nativeSrc":"30086:122:10","nodeType":"YulAssignment","src":"30086:122:10","value":{"arguments":[{"name":"value0","nativeSrc":"30194:6:10","nodeType":"YulIdentifier","src":"30194:6:10"},{"name":"tail","nativeSrc":"30203:4:10","nodeType":"YulIdentifier","src":"30203:4:10"}],"functionName":{"name":"abi_encode_t_struct$_Attestation_$592_memory_ptr_to_t_struct$_Attestation_$592_memory_ptr_fromStack","nativeSrc":"30094:99:10","nodeType":"YulIdentifier","src":"30094:99:10"},"nativeSrc":"30094:114:10","nodeType":"YulFunctionCall","src":"30094:114:10"},"variableNames":[{"name":"tail","nativeSrc":"30086:4:10","nodeType":"YulIdentifier","src":"30086:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"30229:9:10","nodeType":"YulIdentifier","src":"30229:9:10"},{"kind":"number","nativeSrc":"30240:2:10","nodeType":"YulLiteral","src":"30240:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"30225:3:10","nodeType":"YulIdentifier","src":"30225:3:10"},"nativeSrc":"30225:18:10","nodeType":"YulFunctionCall","src":"30225:18:10"},{"arguments":[{"name":"tail","nativeSrc":"30249:4:10","nodeType":"YulIdentifier","src":"30249:4:10"},{"name":"headStart","nativeSrc":"30255:9:10","nodeType":"YulIdentifier","src":"30255:9:10"}],"functionName":{"name":"sub","nativeSrc":"30245:3:10","nodeType":"YulIdentifier","src":"30245:3:10"},"nativeSrc":"30245:20:10","nodeType":"YulFunctionCall","src":"30245:20:10"}],"functionName":{"name":"mstore","nativeSrc":"30218:6:10","nodeType":"YulIdentifier","src":"30218:6:10"},"nativeSrc":"30218:48:10","nodeType":"YulFunctionCall","src":"30218:48:10"},"nativeSrc":"30218:48:10","nodeType":"YulExpressionStatement","src":"30218:48:10"},{"nativeSrc":"30275:139:10","nodeType":"YulAssignment","src":"30275:139:10","value":{"arguments":[{"name":"tail","nativeSrc":"30409:4:10","nodeType":"YulIdentifier","src":"30409:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_string_memory_ptr_fromStack","nativeSrc":"30283:124:10","nodeType":"YulIdentifier","src":"30283:124:10"},"nativeSrc":"30283:131:10","nodeType":"YulFunctionCall","src":"30283:131:10"},"variableNames":[{"name":"tail","nativeSrc":"30275:4:10","nodeType":"YulIdentifier","src":"30275:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"30435:9:10","nodeType":"YulIdentifier","src":"30435:9:10"},{"kind":"number","nativeSrc":"30446:2:10","nodeType":"YulLiteral","src":"30446:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"30431:3:10","nodeType":"YulIdentifier","src":"30431:3:10"},"nativeSrc":"30431:18:10","nodeType":"YulFunctionCall","src":"30431:18:10"},{"arguments":[{"name":"tail","nativeSrc":"30455:4:10","nodeType":"YulIdentifier","src":"30455:4:10"},{"name":"headStart","nativeSrc":"30461:9:10","nodeType":"YulIdentifier","src":"30461:9:10"}],"functionName":{"name":"sub","nativeSrc":"30451:3:10","nodeType":"YulIdentifier","src":"30451:3:10"},"nativeSrc":"30451:20:10","nodeType":"YulFunctionCall","src":"30451:20:10"}],"functionName":{"name":"mstore","nativeSrc":"30424:6:10","nodeType":"YulIdentifier","src":"30424:6:10"},"nativeSrc":"30424:48:10","nodeType":"YulFunctionCall","src":"30424:48:10"},"nativeSrc":"30424:48:10","nodeType":"YulExpressionStatement","src":"30424:48:10"},{"nativeSrc":"30481:138:10","nodeType":"YulAssignment","src":"30481:138:10","value":{"arguments":[{"name":"tail","nativeSrc":"30614:4:10","nodeType":"YulIdentifier","src":"30614:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack","nativeSrc":"30489:123:10","nodeType":"YulIdentifier","src":"30489:123:10"},"nativeSrc":"30489:130:10","nodeType":"YulFunctionCall","src":"30489:130:10"},"variableNames":[{"name":"tail","nativeSrc":"30481:4:10","nodeType":"YulIdentifier","src":"30481:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"30640:9:10","nodeType":"YulIdentifier","src":"30640:9:10"},{"kind":"number","nativeSrc":"30651:2:10","nodeType":"YulLiteral","src":"30651:2:10","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"30636:3:10","nodeType":"YulIdentifier","src":"30636:3:10"},"nativeSrc":"30636:18:10","nodeType":"YulFunctionCall","src":"30636:18:10"},{"arguments":[{"name":"tail","nativeSrc":"30660:4:10","nodeType":"YulIdentifier","src":"30660:4:10"},{"name":"headStart","nativeSrc":"30666:9:10","nodeType":"YulIdentifier","src":"30666:9:10"}],"functionName":{"name":"sub","nativeSrc":"30656:3:10","nodeType":"YulIdentifier","src":"30656:3:10"},"nativeSrc":"30656:20:10","nodeType":"YulFunctionCall","src":"30656:20:10"}],"functionName":{"name":"mstore","nativeSrc":"30629:6:10","nodeType":"YulIdentifier","src":"30629:6:10"},"nativeSrc":"30629:48:10","nodeType":"YulFunctionCall","src":"30629:48:10"},"nativeSrc":"30629:48:10","nodeType":"YulExpressionStatement","src":"30629:48:10"},{"nativeSrc":"30686:138:10","nodeType":"YulAssignment","src":"30686:138:10","value":{"arguments":[{"name":"tail","nativeSrc":"30819:4:10","nodeType":"YulIdentifier","src":"30819:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack","nativeSrc":"30694:123:10","nodeType":"YulIdentifier","src":"30694:123:10"},"nativeSrc":"30694:130:10","nodeType":"YulFunctionCall","src":"30694:130:10"},"variableNames":[{"name":"tail","nativeSrc":"30686:4:10","nodeType":"YulIdentifier","src":"30686:4:10"}]}]},"name":"abi_encode_tuple_t_struct$_Attestation_$592_memory_ptr_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_struct$_Attestation_$592_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"29528:1303:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"29955:9:10","nodeType":"YulTypedName","src":"29955:9:10","type":""},{"name":"value0","nativeSrc":"29967:6:10","nodeType":"YulTypedName","src":"29967:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"29978:4:10","nodeType":"YulTypedName","src":"29978:4:10","type":""}],"src":"29528:1303:10"},{"body":{"nativeSrc":"30913:273:10","nodeType":"YulBlock","src":"30913:273:10","statements":[{"body":{"nativeSrc":"30959:83:10","nodeType":"YulBlock","src":"30959:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"30961:77:10","nodeType":"YulIdentifier","src":"30961:77:10"},"nativeSrc":"30961:79:10","nodeType":"YulFunctionCall","src":"30961:79:10"},"nativeSrc":"30961:79:10","nodeType":"YulExpressionStatement","src":"30961:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"30934:7:10","nodeType":"YulIdentifier","src":"30934:7:10"},{"name":"headStart","nativeSrc":"30943:9:10","nodeType":"YulIdentifier","src":"30943:9:10"}],"functionName":{"name":"sub","nativeSrc":"30930:3:10","nodeType":"YulIdentifier","src":"30930:3:10"},"nativeSrc":"30930:23:10","nodeType":"YulFunctionCall","src":"30930:23:10"},{"kind":"number","nativeSrc":"30955:2:10","nodeType":"YulLiteral","src":"30955:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"30926:3:10","nodeType":"YulIdentifier","src":"30926:3:10"},"nativeSrc":"30926:32:10","nodeType":"YulFunctionCall","src":"30926:32:10"},"nativeSrc":"30923:119:10","nodeType":"YulIf","src":"30923:119:10"},{"nativeSrc":"31052:127:10","nodeType":"YulBlock","src":"31052:127:10","statements":[{"nativeSrc":"31067:15:10","nodeType":"YulVariableDeclaration","src":"31067:15:10","value":{"kind":"number","nativeSrc":"31081:1:10","nodeType":"YulLiteral","src":"31081:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"31071:6:10","nodeType":"YulTypedName","src":"31071:6:10","type":""}]},{"nativeSrc":"31096:73:10","nodeType":"YulAssignment","src":"31096:73:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"31141:9:10","nodeType":"YulIdentifier","src":"31141:9:10"},{"name":"offset","nativeSrc":"31152:6:10","nodeType":"YulIdentifier","src":"31152:6:10"}],"functionName":{"name":"add","nativeSrc":"31137:3:10","nodeType":"YulIdentifier","src":"31137:3:10"},"nativeSrc":"31137:22:10","nodeType":"YulFunctionCall","src":"31137:22:10"},{"name":"dataEnd","nativeSrc":"31161:7:10","nodeType":"YulIdentifier","src":"31161:7:10"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nativeSrc":"31106:30:10","nodeType":"YulIdentifier","src":"31106:30:10"},"nativeSrc":"31106:63:10","nodeType":"YulFunctionCall","src":"31106:63:10"},"variableNames":[{"name":"value0","nativeSrc":"31096:6:10","nodeType":"YulIdentifier","src":"31096:6:10"}]}]}]},"name":"abi_decode_tuple_t_uint64_fromMemory","nativeSrc":"30837:349:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"30883:9:10","nodeType":"YulTypedName","src":"30883:9:10","type":""},{"name":"dataEnd","nativeSrc":"30894:7:10","nodeType":"YulTypedName","src":"30894:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"30906:6:10","nodeType":"YulTypedName","src":"30906:6:10","type":""}],"src":"30837:349:10"},{"body":{"nativeSrc":"31298:61:10","nodeType":"YulBlock","src":"31298:61:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"31320:6:10","nodeType":"YulIdentifier","src":"31320:6:10"},{"kind":"number","nativeSrc":"31328:1:10","nodeType":"YulLiteral","src":"31328:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"31316:3:10","nodeType":"YulIdentifier","src":"31316:3:10"},"nativeSrc":"31316:14:10","nodeType":"YulFunctionCall","src":"31316:14:10"},{"hexValue":"496e76616c696420736368656d61204944","kind":"string","nativeSrc":"31332:19:10","nodeType":"YulLiteral","src":"31332:19:10","type":"","value":"Invalid schema ID"}],"functionName":{"name":"mstore","nativeSrc":"31309:6:10","nodeType":"YulIdentifier","src":"31309:6:10"},"nativeSrc":"31309:43:10","nodeType":"YulFunctionCall","src":"31309:43:10"},"nativeSrc":"31309:43:10","nodeType":"YulExpressionStatement","src":"31309:43:10"}]},"name":"store_literal_in_memory_3f7f8a0302ff255928d1a72eedf8fbacb95deed18c475d5a03e0d82ca55cffbb","nativeSrc":"31192:167:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"31290:6:10","nodeType":"YulTypedName","src":"31290:6:10","type":""}],"src":"31192:167:10"},{"body":{"nativeSrc":"31511:220:10","nodeType":"YulBlock","src":"31511:220:10","statements":[{"nativeSrc":"31521:74:10","nodeType":"YulAssignment","src":"31521:74:10","value":{"arguments":[{"name":"pos","nativeSrc":"31587:3:10","nodeType":"YulIdentifier","src":"31587:3:10"},{"kind":"number","nativeSrc":"31592:2:10","nodeType":"YulLiteral","src":"31592:2:10","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"31528:58:10","nodeType":"YulIdentifier","src":"31528:58:10"},"nativeSrc":"31528:67:10","nodeType":"YulFunctionCall","src":"31528:67:10"},"variableNames":[{"name":"pos","nativeSrc":"31521:3:10","nodeType":"YulIdentifier","src":"31521:3:10"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"31693:3:10","nodeType":"YulIdentifier","src":"31693:3:10"}],"functionName":{"name":"store_literal_in_memory_3f7f8a0302ff255928d1a72eedf8fbacb95deed18c475d5a03e0d82ca55cffbb","nativeSrc":"31604:88:10","nodeType":"YulIdentifier","src":"31604:88:10"},"nativeSrc":"31604:93:10","nodeType":"YulFunctionCall","src":"31604:93:10"},"nativeSrc":"31604:93:10","nodeType":"YulExpressionStatement","src":"31604:93:10"},{"nativeSrc":"31706:19:10","nodeType":"YulAssignment","src":"31706:19:10","value":{"arguments":[{"name":"pos","nativeSrc":"31717:3:10","nodeType":"YulIdentifier","src":"31717:3:10"},{"kind":"number","nativeSrc":"31722:2:10","nodeType":"YulLiteral","src":"31722:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"31713:3:10","nodeType":"YulIdentifier","src":"31713:3:10"},"nativeSrc":"31713:12:10","nodeType":"YulFunctionCall","src":"31713:12:10"},"variableNames":[{"name":"end","nativeSrc":"31706:3:10","nodeType":"YulIdentifier","src":"31706:3:10"}]}]},"name":"abi_encode_t_stringliteral_3f7f8a0302ff255928d1a72eedf8fbacb95deed18c475d5a03e0d82ca55cffbb_to_t_string_memory_ptr_fromStack","nativeSrc":"31365:366:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"31499:3:10","nodeType":"YulTypedName","src":"31499:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"31507:3:10","nodeType":"YulTypedName","src":"31507:3:10","type":""}],"src":"31365:366:10"},{"body":{"nativeSrc":"31908:248:10","nodeType":"YulBlock","src":"31908:248:10","statements":[{"nativeSrc":"31918:26:10","nodeType":"YulAssignment","src":"31918:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"31930:9:10","nodeType":"YulIdentifier","src":"31930:9:10"},{"kind":"number","nativeSrc":"31941:2:10","nodeType":"YulLiteral","src":"31941:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"31926:3:10","nodeType":"YulIdentifier","src":"31926:3:10"},"nativeSrc":"31926:18:10","nodeType":"YulFunctionCall","src":"31926:18:10"},"variableNames":[{"name":"tail","nativeSrc":"31918:4:10","nodeType":"YulIdentifier","src":"31918:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"31965:9:10","nodeType":"YulIdentifier","src":"31965:9:10"},{"kind":"number","nativeSrc":"31976:1:10","nodeType":"YulLiteral","src":"31976:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"31961:3:10","nodeType":"YulIdentifier","src":"31961:3:10"},"nativeSrc":"31961:17:10","nodeType":"YulFunctionCall","src":"31961:17:10"},{"arguments":[{"name":"tail","nativeSrc":"31984:4:10","nodeType":"YulIdentifier","src":"31984:4:10"},{"name":"headStart","nativeSrc":"31990:9:10","nodeType":"YulIdentifier","src":"31990:9:10"}],"functionName":{"name":"sub","nativeSrc":"31980:3:10","nodeType":"YulIdentifier","src":"31980:3:10"},"nativeSrc":"31980:20:10","nodeType":"YulFunctionCall","src":"31980:20:10"}],"functionName":{"name":"mstore","nativeSrc":"31954:6:10","nodeType":"YulIdentifier","src":"31954:6:10"},"nativeSrc":"31954:47:10","nodeType":"YulFunctionCall","src":"31954:47:10"},"nativeSrc":"31954:47:10","nodeType":"YulExpressionStatement","src":"31954:47:10"},{"nativeSrc":"32010:139:10","nodeType":"YulAssignment","src":"32010:139:10","value":{"arguments":[{"name":"tail","nativeSrc":"32144:4:10","nodeType":"YulIdentifier","src":"32144:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_3f7f8a0302ff255928d1a72eedf8fbacb95deed18c475d5a03e0d82ca55cffbb_to_t_string_memory_ptr_fromStack","nativeSrc":"32018:124:10","nodeType":"YulIdentifier","src":"32018:124:10"},"nativeSrc":"32018:131:10","nodeType":"YulFunctionCall","src":"32018:131:10"},"variableNames":[{"name":"tail","nativeSrc":"32010:4:10","nodeType":"YulIdentifier","src":"32010:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_3f7f8a0302ff255928d1a72eedf8fbacb95deed18c475d5a03e0d82ca55cffbb__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"31737:419:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"31888:9:10","nodeType":"YulTypedName","src":"31888:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"31903:4:10","nodeType":"YulTypedName","src":"31903:4:10","type":""}],"src":"31737:419:10"},{"body":{"nativeSrc":"32268:70:10","nodeType":"YulBlock","src":"32268:70:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"32290:6:10","nodeType":"YulIdentifier","src":"32290:6:10"},{"kind":"number","nativeSrc":"32298:1:10","nodeType":"YulLiteral","src":"32298:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"32286:3:10","nodeType":"YulIdentifier","src":"32286:3:10"},"nativeSrc":"32286:14:10","nodeType":"YulFunctionCall","src":"32286:14:10"},{"hexValue":"4f6e6c79206f6e6520726563697069656e7420616c6c6f776564","kind":"string","nativeSrc":"32302:28:10","nodeType":"YulLiteral","src":"32302:28:10","type":"","value":"Only one recipient allowed"}],"functionName":{"name":"mstore","nativeSrc":"32279:6:10","nodeType":"YulIdentifier","src":"32279:6:10"},"nativeSrc":"32279:52:10","nodeType":"YulFunctionCall","src":"32279:52:10"},"nativeSrc":"32279:52:10","nodeType":"YulExpressionStatement","src":"32279:52:10"}]},"name":"store_literal_in_memory_8f7ab3f7e792b273608ffaf89527bcbb9272ea245b3f5800d21a92a6aefb7013","nativeSrc":"32162:176:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"32260:6:10","nodeType":"YulTypedName","src":"32260:6:10","type":""}],"src":"32162:176:10"},{"body":{"nativeSrc":"32490:220:10","nodeType":"YulBlock","src":"32490:220:10","statements":[{"nativeSrc":"32500:74:10","nodeType":"YulAssignment","src":"32500:74:10","value":{"arguments":[{"name":"pos","nativeSrc":"32566:3:10","nodeType":"YulIdentifier","src":"32566:3:10"},{"kind":"number","nativeSrc":"32571:2:10","nodeType":"YulLiteral","src":"32571:2:10","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"32507:58:10","nodeType":"YulIdentifier","src":"32507:58:10"},"nativeSrc":"32507:67:10","nodeType":"YulFunctionCall","src":"32507:67:10"},"variableNames":[{"name":"pos","nativeSrc":"32500:3:10","nodeType":"YulIdentifier","src":"32500:3:10"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"32672:3:10","nodeType":"YulIdentifier","src":"32672:3:10"}],"functionName":{"name":"store_literal_in_memory_8f7ab3f7e792b273608ffaf89527bcbb9272ea245b3f5800d21a92a6aefb7013","nativeSrc":"32583:88:10","nodeType":"YulIdentifier","src":"32583:88:10"},"nativeSrc":"32583:93:10","nodeType":"YulFunctionCall","src":"32583:93:10"},"nativeSrc":"32583:93:10","nodeType":"YulExpressionStatement","src":"32583:93:10"},{"nativeSrc":"32685:19:10","nodeType":"YulAssignment","src":"32685:19:10","value":{"arguments":[{"name":"pos","nativeSrc":"32696:3:10","nodeType":"YulIdentifier","src":"32696:3:10"},{"kind":"number","nativeSrc":"32701:2:10","nodeType":"YulLiteral","src":"32701:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"32692:3:10","nodeType":"YulIdentifier","src":"32692:3:10"},"nativeSrc":"32692:12:10","nodeType":"YulFunctionCall","src":"32692:12:10"},"variableNames":[{"name":"end","nativeSrc":"32685:3:10","nodeType":"YulIdentifier","src":"32685:3:10"}]}]},"name":"abi_encode_t_stringliteral_8f7ab3f7e792b273608ffaf89527bcbb9272ea245b3f5800d21a92a6aefb7013_to_t_string_memory_ptr_fromStack","nativeSrc":"32344:366:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"32478:3:10","nodeType":"YulTypedName","src":"32478:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"32486:3:10","nodeType":"YulTypedName","src":"32486:3:10","type":""}],"src":"32344:366:10"},{"body":{"nativeSrc":"32887:248:10","nodeType":"YulBlock","src":"32887:248:10","statements":[{"nativeSrc":"32897:26:10","nodeType":"YulAssignment","src":"32897:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"32909:9:10","nodeType":"YulIdentifier","src":"32909:9:10"},{"kind":"number","nativeSrc":"32920:2:10","nodeType":"YulLiteral","src":"32920:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"32905:3:10","nodeType":"YulIdentifier","src":"32905:3:10"},"nativeSrc":"32905:18:10","nodeType":"YulFunctionCall","src":"32905:18:10"},"variableNames":[{"name":"tail","nativeSrc":"32897:4:10","nodeType":"YulIdentifier","src":"32897:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"32944:9:10","nodeType":"YulIdentifier","src":"32944:9:10"},{"kind":"number","nativeSrc":"32955:1:10","nodeType":"YulLiteral","src":"32955:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"32940:3:10","nodeType":"YulIdentifier","src":"32940:3:10"},"nativeSrc":"32940:17:10","nodeType":"YulFunctionCall","src":"32940:17:10"},{"arguments":[{"name":"tail","nativeSrc":"32963:4:10","nodeType":"YulIdentifier","src":"32963:4:10"},{"name":"headStart","nativeSrc":"32969:9:10","nodeType":"YulIdentifier","src":"32969:9:10"}],"functionName":{"name":"sub","nativeSrc":"32959:3:10","nodeType":"YulIdentifier","src":"32959:3:10"},"nativeSrc":"32959:20:10","nodeType":"YulFunctionCall","src":"32959:20:10"}],"functionName":{"name":"mstore","nativeSrc":"32933:6:10","nodeType":"YulIdentifier","src":"32933:6:10"},"nativeSrc":"32933:47:10","nodeType":"YulFunctionCall","src":"32933:47:10"},"nativeSrc":"32933:47:10","nodeType":"YulExpressionStatement","src":"32933:47:10"},{"nativeSrc":"32989:139:10","nodeType":"YulAssignment","src":"32989:139:10","value":{"arguments":[{"name":"tail","nativeSrc":"33123:4:10","nodeType":"YulIdentifier","src":"33123:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_8f7ab3f7e792b273608ffaf89527bcbb9272ea245b3f5800d21a92a6aefb7013_to_t_string_memory_ptr_fromStack","nativeSrc":"32997:124:10","nodeType":"YulIdentifier","src":"32997:124:10"},"nativeSrc":"32997:131:10","nodeType":"YulFunctionCall","src":"32997:131:10"},"variableNames":[{"name":"tail","nativeSrc":"32989:4:10","nodeType":"YulIdentifier","src":"32989:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_8f7ab3f7e792b273608ffaf89527bcbb9272ea245b3f5800d21a92a6aefb7013__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"32716:419:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"32867:9:10","nodeType":"YulTypedName","src":"32867:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"32882:4:10","nodeType":"YulTypedName","src":"32882:4:10","type":""}],"src":"32716:419:10"},{"body":{"nativeSrc":"33234:561:10","nodeType":"YulBlock","src":"33234:561:10","statements":[{"body":{"nativeSrc":"33280:83:10","nodeType":"YulBlock","src":"33280:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"33282:77:10","nodeType":"YulIdentifier","src":"33282:77:10"},"nativeSrc":"33282:79:10","nodeType":"YulFunctionCall","src":"33282:79:10"},"nativeSrc":"33282:79:10","nodeType":"YulExpressionStatement","src":"33282:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"33255:7:10","nodeType":"YulIdentifier","src":"33255:7:10"},{"name":"headStart","nativeSrc":"33264:9:10","nodeType":"YulIdentifier","src":"33264:9:10"}],"functionName":{"name":"sub","nativeSrc":"33251:3:10","nodeType":"YulIdentifier","src":"33251:3:10"},"nativeSrc":"33251:23:10","nodeType":"YulFunctionCall","src":"33251:23:10"},{"kind":"number","nativeSrc":"33276:2:10","nodeType":"YulLiteral","src":"33276:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"33247:3:10","nodeType":"YulIdentifier","src":"33247:3:10"},"nativeSrc":"33247:32:10","nodeType":"YulFunctionCall","src":"33247:32:10"},"nativeSrc":"33244:119:10","nodeType":"YulIf","src":"33244:119:10"},{"nativeSrc":"33373:287:10","nodeType":"YulBlock","src":"33373:287:10","statements":[{"nativeSrc":"33388:45:10","nodeType":"YulVariableDeclaration","src":"33388:45:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"33419:9:10","nodeType":"YulIdentifier","src":"33419:9:10"},{"kind":"number","nativeSrc":"33430:1:10","nodeType":"YulLiteral","src":"33430:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"33415:3:10","nodeType":"YulIdentifier","src":"33415:3:10"},"nativeSrc":"33415:17:10","nodeType":"YulFunctionCall","src":"33415:17:10"}],"functionName":{"name":"calldataload","nativeSrc":"33402:12:10","nodeType":"YulIdentifier","src":"33402:12:10"},"nativeSrc":"33402:31:10","nodeType":"YulFunctionCall","src":"33402:31:10"},"variables":[{"name":"offset","nativeSrc":"33392:6:10","nodeType":"YulTypedName","src":"33392:6:10","type":""}]},{"body":{"nativeSrc":"33480:83:10","nodeType":"YulBlock","src":"33480:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"33482:77:10","nodeType":"YulIdentifier","src":"33482:77:10"},"nativeSrc":"33482:79:10","nodeType":"YulFunctionCall","src":"33482:79:10"},"nativeSrc":"33482:79:10","nodeType":"YulExpressionStatement","src":"33482:79:10"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"33452:6:10","nodeType":"YulIdentifier","src":"33452:6:10"},{"kind":"number","nativeSrc":"33460:18:10","nodeType":"YulLiteral","src":"33460:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"33449:2:10","nodeType":"YulIdentifier","src":"33449:2:10"},"nativeSrc":"33449:30:10","nodeType":"YulFunctionCall","src":"33449:30:10"},"nativeSrc":"33446:117:10","nodeType":"YulIf","src":"33446:117:10"},{"nativeSrc":"33577:73:10","nodeType":"YulAssignment","src":"33577:73:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"33622:9:10","nodeType":"YulIdentifier","src":"33622:9:10"},{"name":"offset","nativeSrc":"33633:6:10","nodeType":"YulIdentifier","src":"33633:6:10"}],"functionName":{"name":"add","nativeSrc":"33618:3:10","nodeType":"YulIdentifier","src":"33618:3:10"},"nativeSrc":"33618:22:10","nodeType":"YulFunctionCall","src":"33618:22:10"},{"name":"dataEnd","nativeSrc":"33642:7:10","nodeType":"YulIdentifier","src":"33642:7:10"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"33587:30:10","nodeType":"YulIdentifier","src":"33587:30:10"},"nativeSrc":"33587:63:10","nodeType":"YulFunctionCall","src":"33587:63:10"},"variableNames":[{"name":"value0","nativeSrc":"33577:6:10","nodeType":"YulIdentifier","src":"33577:6:10"}]}]},{"nativeSrc":"33670:118:10","nodeType":"YulBlock","src":"33670:118:10","statements":[{"nativeSrc":"33685:16:10","nodeType":"YulVariableDeclaration","src":"33685:16:10","value":{"kind":"number","nativeSrc":"33699:2:10","nodeType":"YulLiteral","src":"33699:2:10","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"33689:6:10","nodeType":"YulTypedName","src":"33689:6:10","type":""}]},{"nativeSrc":"33715:63:10","nodeType":"YulAssignment","src":"33715:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"33750:9:10","nodeType":"YulIdentifier","src":"33750:9:10"},{"name":"offset","nativeSrc":"33761:6:10","nodeType":"YulIdentifier","src":"33761:6:10"}],"functionName":{"name":"add","nativeSrc":"33746:3:10","nodeType":"YulIdentifier","src":"33746:3:10"},"nativeSrc":"33746:22:10","nodeType":"YulFunctionCall","src":"33746:22:10"},{"name":"dataEnd","nativeSrc":"33770:7:10","nodeType":"YulIdentifier","src":"33770:7:10"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"33725:20:10","nodeType":"YulIdentifier","src":"33725:20:10"},"nativeSrc":"33725:53:10","nodeType":"YulFunctionCall","src":"33725:53:10"},"variableNames":[{"name":"value1","nativeSrc":"33715:6:10","nodeType":"YulIdentifier","src":"33715:6:10"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256","nativeSrc":"33141:654:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"33196:9:10","nodeType":"YulTypedName","src":"33196:9:10","type":""},{"name":"dataEnd","nativeSrc":"33207:7:10","nodeType":"YulTypedName","src":"33207:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"33219:6:10","nodeType":"YulTypedName","src":"33219:6:10","type":""},{"name":"value1","nativeSrc":"33227:6:10","nodeType":"YulTypedName","src":"33227:6:10","type":""}],"src":"33141:654:10"},{"body":{"nativeSrc":"33907:71:10","nodeType":"YulBlock","src":"33907:71:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"33929:6:10","nodeType":"YulIdentifier","src":"33929:6:10"},{"kind":"number","nativeSrc":"33937:1:10","nodeType":"YulLiteral","src":"33937:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"33925:3:10","nodeType":"YulIdentifier","src":"33925:3:10"},"nativeSrc":"33925:14:10","nodeType":"YulFunctionCall","src":"33925:14:10"},{"hexValue":"436f75727365206e616d652063616e6e6f7420626520656d707479","kind":"string","nativeSrc":"33941:29:10","nodeType":"YulLiteral","src":"33941:29:10","type":"","value":"Course name cannot be empty"}],"functionName":{"name":"mstore","nativeSrc":"33918:6:10","nodeType":"YulIdentifier","src":"33918:6:10"},"nativeSrc":"33918:53:10","nodeType":"YulFunctionCall","src":"33918:53:10"},"nativeSrc":"33918:53:10","nodeType":"YulExpressionStatement","src":"33918:53:10"}]},"name":"store_literal_in_memory_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988","nativeSrc":"33801:177:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"33899:6:10","nodeType":"YulTypedName","src":"33899:6:10","type":""}],"src":"33801:177:10"},{"body":{"nativeSrc":"34130:220:10","nodeType":"YulBlock","src":"34130:220:10","statements":[{"nativeSrc":"34140:74:10","nodeType":"YulAssignment","src":"34140:74:10","value":{"arguments":[{"name":"pos","nativeSrc":"34206:3:10","nodeType":"YulIdentifier","src":"34206:3:10"},{"kind":"number","nativeSrc":"34211:2:10","nodeType":"YulLiteral","src":"34211:2:10","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"34147:58:10","nodeType":"YulIdentifier","src":"34147:58:10"},"nativeSrc":"34147:67:10","nodeType":"YulFunctionCall","src":"34147:67:10"},"variableNames":[{"name":"pos","nativeSrc":"34140:3:10","nodeType":"YulIdentifier","src":"34140:3:10"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"34312:3:10","nodeType":"YulIdentifier","src":"34312:3:10"}],"functionName":{"name":"store_literal_in_memory_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988","nativeSrc":"34223:88:10","nodeType":"YulIdentifier","src":"34223:88:10"},"nativeSrc":"34223:93:10","nodeType":"YulFunctionCall","src":"34223:93:10"},"nativeSrc":"34223:93:10","nodeType":"YulExpressionStatement","src":"34223:93:10"},{"nativeSrc":"34325:19:10","nodeType":"YulAssignment","src":"34325:19:10","value":{"arguments":[{"name":"pos","nativeSrc":"34336:3:10","nodeType":"YulIdentifier","src":"34336:3:10"},{"kind":"number","nativeSrc":"34341:2:10","nodeType":"YulLiteral","src":"34341:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"34332:3:10","nodeType":"YulIdentifier","src":"34332:3:10"},"nativeSrc":"34332:12:10","nodeType":"YulFunctionCall","src":"34332:12:10"},"variableNames":[{"name":"end","nativeSrc":"34325:3:10","nodeType":"YulIdentifier","src":"34325:3:10"}]}]},"name":"abi_encode_t_stringliteral_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988_to_t_string_memory_ptr_fromStack","nativeSrc":"33984:366:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"34118:3:10","nodeType":"YulTypedName","src":"34118:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"34126:3:10","nodeType":"YulTypedName","src":"34126:3:10","type":""}],"src":"33984:366:10"},{"body":{"nativeSrc":"34527:248:10","nodeType":"YulBlock","src":"34527:248:10","statements":[{"nativeSrc":"34537:26:10","nodeType":"YulAssignment","src":"34537:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"34549:9:10","nodeType":"YulIdentifier","src":"34549:9:10"},{"kind":"number","nativeSrc":"34560:2:10","nodeType":"YulLiteral","src":"34560:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"34545:3:10","nodeType":"YulIdentifier","src":"34545:3:10"},"nativeSrc":"34545:18:10","nodeType":"YulFunctionCall","src":"34545:18:10"},"variableNames":[{"name":"tail","nativeSrc":"34537:4:10","nodeType":"YulIdentifier","src":"34537:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"34584:9:10","nodeType":"YulIdentifier","src":"34584:9:10"},{"kind":"number","nativeSrc":"34595:1:10","nodeType":"YulLiteral","src":"34595:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"34580:3:10","nodeType":"YulIdentifier","src":"34580:3:10"},"nativeSrc":"34580:17:10","nodeType":"YulFunctionCall","src":"34580:17:10"},{"arguments":[{"name":"tail","nativeSrc":"34603:4:10","nodeType":"YulIdentifier","src":"34603:4:10"},{"name":"headStart","nativeSrc":"34609:9:10","nodeType":"YulIdentifier","src":"34609:9:10"}],"functionName":{"name":"sub","nativeSrc":"34599:3:10","nodeType":"YulIdentifier","src":"34599:3:10"},"nativeSrc":"34599:20:10","nodeType":"YulFunctionCall","src":"34599:20:10"}],"functionName":{"name":"mstore","nativeSrc":"34573:6:10","nodeType":"YulIdentifier","src":"34573:6:10"},"nativeSrc":"34573:47:10","nodeType":"YulFunctionCall","src":"34573:47:10"},"nativeSrc":"34573:47:10","nodeType":"YulExpressionStatement","src":"34573:47:10"},{"nativeSrc":"34629:139:10","nodeType":"YulAssignment","src":"34629:139:10","value":{"arguments":[{"name":"tail","nativeSrc":"34763:4:10","nodeType":"YulIdentifier","src":"34763:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988_to_t_string_memory_ptr_fromStack","nativeSrc":"34637:124:10","nodeType":"YulIdentifier","src":"34637:124:10"},"nativeSrc":"34637:131:10","nodeType":"YulFunctionCall","src":"34637:131:10"},"variableNames":[{"name":"tail","nativeSrc":"34629:4:10","nodeType":"YulIdentifier","src":"34629:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"34356:419:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"34507:9:10","nodeType":"YulTypedName","src":"34507:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"34522:4:10","nodeType":"YulTypedName","src":"34522:4:10","type":""}],"src":"34356:419:10"},{"body":{"nativeSrc":"34887:115:10","nodeType":"YulBlock","src":"34887:115:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"34909:6:10","nodeType":"YulIdentifier","src":"34909:6:10"},{"kind":"number","nativeSrc":"34917:1:10","nodeType":"YulLiteral","src":"34917:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"34905:3:10","nodeType":"YulIdentifier","src":"34905:3:10"},"nativeSrc":"34905:14:10","nodeType":"YulFunctionCall","src":"34905:14:10"},{"hexValue":"497373756520646174652063616e6e6f7420626520696e207468652066757475","kind":"string","nativeSrc":"34921:34:10","nodeType":"YulLiteral","src":"34921:34:10","type":"","value":"Issue date cannot be in the futu"}],"functionName":{"name":"mstore","nativeSrc":"34898:6:10","nodeType":"YulIdentifier","src":"34898:6:10"},"nativeSrc":"34898:58:10","nodeType":"YulFunctionCall","src":"34898:58:10"},"nativeSrc":"34898:58:10","nodeType":"YulExpressionStatement","src":"34898:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"34977:6:10","nodeType":"YulIdentifier","src":"34977:6:10"},{"kind":"number","nativeSrc":"34985:2:10","nodeType":"YulLiteral","src":"34985:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"34973:3:10","nodeType":"YulIdentifier","src":"34973:3:10"},"nativeSrc":"34973:15:10","nodeType":"YulFunctionCall","src":"34973:15:10"},{"hexValue":"7265","kind":"string","nativeSrc":"34990:4:10","nodeType":"YulLiteral","src":"34990:4:10","type":"","value":"re"}],"functionName":{"name":"mstore","nativeSrc":"34966:6:10","nodeType":"YulIdentifier","src":"34966:6:10"},"nativeSrc":"34966:29:10","nodeType":"YulFunctionCall","src":"34966:29:10"},"nativeSrc":"34966:29:10","nodeType":"YulExpressionStatement","src":"34966:29:10"}]},"name":"store_literal_in_memory_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97","nativeSrc":"34781:221:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"34879:6:10","nodeType":"YulTypedName","src":"34879:6:10","type":""}],"src":"34781:221:10"},{"body":{"nativeSrc":"35154:220:10","nodeType":"YulBlock","src":"35154:220:10","statements":[{"nativeSrc":"35164:74:10","nodeType":"YulAssignment","src":"35164:74:10","value":{"arguments":[{"name":"pos","nativeSrc":"35230:3:10","nodeType":"YulIdentifier","src":"35230:3:10"},{"kind":"number","nativeSrc":"35235:2:10","nodeType":"YulLiteral","src":"35235:2:10","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"35171:58:10","nodeType":"YulIdentifier","src":"35171:58:10"},"nativeSrc":"35171:67:10","nodeType":"YulFunctionCall","src":"35171:67:10"},"variableNames":[{"name":"pos","nativeSrc":"35164:3:10","nodeType":"YulIdentifier","src":"35164:3:10"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"35336:3:10","nodeType":"YulIdentifier","src":"35336:3:10"}],"functionName":{"name":"store_literal_in_memory_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97","nativeSrc":"35247:88:10","nodeType":"YulIdentifier","src":"35247:88:10"},"nativeSrc":"35247:93:10","nodeType":"YulFunctionCall","src":"35247:93:10"},"nativeSrc":"35247:93:10","nodeType":"YulExpressionStatement","src":"35247:93:10"},{"nativeSrc":"35349:19:10","nodeType":"YulAssignment","src":"35349:19:10","value":{"arguments":[{"name":"pos","nativeSrc":"35360:3:10","nodeType":"YulIdentifier","src":"35360:3:10"},{"kind":"number","nativeSrc":"35365:2:10","nodeType":"YulLiteral","src":"35365:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"35356:3:10","nodeType":"YulIdentifier","src":"35356:3:10"},"nativeSrc":"35356:12:10","nodeType":"YulFunctionCall","src":"35356:12:10"},"variableNames":[{"name":"end","nativeSrc":"35349:3:10","nodeType":"YulIdentifier","src":"35349:3:10"}]}]},"name":"abi_encode_t_stringliteral_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97_to_t_string_memory_ptr_fromStack","nativeSrc":"35008:366:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"35142:3:10","nodeType":"YulTypedName","src":"35142:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"35150:3:10","nodeType":"YulTypedName","src":"35150:3:10","type":""}],"src":"35008:366:10"},{"body":{"nativeSrc":"35551:248:10","nodeType":"YulBlock","src":"35551:248:10","statements":[{"nativeSrc":"35561:26:10","nodeType":"YulAssignment","src":"35561:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"35573:9:10","nodeType":"YulIdentifier","src":"35573:9:10"},{"kind":"number","nativeSrc":"35584:2:10","nodeType":"YulLiteral","src":"35584:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"35569:3:10","nodeType":"YulIdentifier","src":"35569:3:10"},"nativeSrc":"35569:18:10","nodeType":"YulFunctionCall","src":"35569:18:10"},"variableNames":[{"name":"tail","nativeSrc":"35561:4:10","nodeType":"YulIdentifier","src":"35561:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"35608:9:10","nodeType":"YulIdentifier","src":"35608:9:10"},{"kind":"number","nativeSrc":"35619:1:10","nodeType":"YulLiteral","src":"35619:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"35604:3:10","nodeType":"YulIdentifier","src":"35604:3:10"},"nativeSrc":"35604:17:10","nodeType":"YulFunctionCall","src":"35604:17:10"},{"arguments":[{"name":"tail","nativeSrc":"35627:4:10","nodeType":"YulIdentifier","src":"35627:4:10"},{"name":"headStart","nativeSrc":"35633:9:10","nodeType":"YulIdentifier","src":"35633:9:10"}],"functionName":{"name":"sub","nativeSrc":"35623:3:10","nodeType":"YulIdentifier","src":"35623:3:10"},"nativeSrc":"35623:20:10","nodeType":"YulFunctionCall","src":"35623:20:10"}],"functionName":{"name":"mstore","nativeSrc":"35597:6:10","nodeType":"YulIdentifier","src":"35597:6:10"},"nativeSrc":"35597:47:10","nodeType":"YulFunctionCall","src":"35597:47:10"},"nativeSrc":"35597:47:10","nodeType":"YulExpressionStatement","src":"35597:47:10"},{"nativeSrc":"35653:139:10","nodeType":"YulAssignment","src":"35653:139:10","value":{"arguments":[{"name":"tail","nativeSrc":"35787:4:10","nodeType":"YulIdentifier","src":"35787:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97_to_t_string_memory_ptr_fromStack","nativeSrc":"35661:124:10","nodeType":"YulIdentifier","src":"35661:124:10"},"nativeSrc":"35661:131:10","nodeType":"YulFunctionCall","src":"35661:131:10"},"variableNames":[{"name":"tail","nativeSrc":"35653:4:10","nodeType":"YulIdentifier","src":"35653:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"35380:419:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"35531:9:10","nodeType":"YulTypedName","src":"35531:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"35546:4:10","nodeType":"YulTypedName","src":"35546:4:10","type":""}],"src":"35380:419:10"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_string_memory_ptr_t_uint256__to_t_bool_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISP_$495_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ISP_$495_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISP_$495_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ISP_$495__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISP_$495_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // bytes[]\n    function abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_uint64t_bytes_calldata_ptrt_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_enum$_DataLocation_$606(value) {\n        if iszero(lt(value, 4)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_DataLocation_$606_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_enum$_DataLocation_$606(value)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    // bytes[]\n    function abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := mload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_bytes_memory_ptr_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bytes[]\n    function abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    // struct Attestation\n    function abi_decode_t_struct$_Attestation_$592_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x0140) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x0140)\n\n        {\n            // schemaId\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint64_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // linkedAttestationId\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint64_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // attestTimestamp\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint64_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // revokeTimestamp\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint64_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // attester\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // validUntil\n\n            let offset := 160\n\n            mstore(add(value, 0xa0), abi_decode_t_uint64_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // dataLocation\n\n            let offset := 192\n\n            mstore(add(value, 0xc0), abi_decode_t_enum$_DataLocation_$606_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // revoked\n\n            let offset := 224\n\n            mstore(add(value, 0xe0), abi_decode_t_bool_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // recipients\n\n            let offset := mload(add(headStart, 256))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x0100), abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // data\n\n            let offset := mload(add(headStart, 288))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x0120), abi_decode_t_bytes_memory_ptr_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_Attestation_$592_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_Attestation_$592_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint64(value) -> ret {\n        value := cleanup_t_uint64(value)\n        if eq(value, 0xffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_51c209187ee368fc1e4dbf500f07ad2d83fbbce262a3a955007d41b55a072cd7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Credential schema not set\")\n\n    }\n\n    function abi_encode_t_stringliteral_51c209187ee368fc1e4dbf500f07ad2d83fbbce262a3a955007d41b55a072cd7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_51c209187ee368fc1e4dbf500f07ad2d83fbbce262a3a955007d41b55a072cd7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_51c209187ee368fc1e4dbf500f07ad2d83fbbce262a3a955007d41b55a072cd7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_51c209187ee368fc1e4dbf500f07ad2d83fbbce262a3a955007d41b55a072cd7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function validator_assert_t_enum$_DataLocation_$606(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_DataLocation_$606(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_DataLocation_$606(value)\n    }\n\n    function convert_t_enum$_DataLocation_$606_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_DataLocation_$606(value)\n    }\n\n    function abi_encode_t_enum$_DataLocation_$606_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_DataLocation_$606_to_t_uint8(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // bytes[] -> bytes[]\n    function abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    // struct Attestation -> struct Attestation\n    function abi_encode_t_struct$_Attestation_$592_memory_ptr_to_t_struct$_Attestation_$592_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x0140)\n\n        {\n            // schemaId\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint64_to_t_uint64(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // linkedAttestationId\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint64_to_t_uint64(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // attestTimestamp\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint64_to_t_uint64(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // revokeTimestamp\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint64_to_t_uint64(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // attester\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // validUntil\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint64_to_t_uint64(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // dataLocation\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_enum$_DataLocation_$606_to_t_uint8(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // revoked\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // recipients\n\n            let memberValue0 := mload(add(value, 0x0100))\n\n            mstore(add(pos, 0x0100), sub(tail, pos))\n            tail := abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // data\n\n            let memberValue0 := mload(add(value, 0x0120))\n\n            mstore(add(pos, 0x0120), sub(tail, pos))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_t_struct$_Attestation_$592_memory_ptr_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_struct$_Attestation_$592_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 128)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_Attestation_$592_memory_ptr_to_t_struct$_Attestation_$592_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_string_memory_ptr_fromStack( tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack( tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_tuple_t_uint64_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_3f7f8a0302ff255928d1a72eedf8fbacb95deed18c475d5a03e0d82ca55cffbb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid schema ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_3f7f8a0302ff255928d1a72eedf8fbacb95deed18c475d5a03e0d82ca55cffbb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_3f7f8a0302ff255928d1a72eedf8fbacb95deed18c475d5a03e0d82ca55cffbb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3f7f8a0302ff255928d1a72eedf8fbacb95deed18c475d5a03e0d82ca55cffbb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3f7f8a0302ff255928d1a72eedf8fbacb95deed18c475d5a03e0d82ca55cffbb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8f7ab3f7e792b273608ffaf89527bcbb9272ea245b3f5800d21a92a6aefb7013(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only one recipient allowed\")\n\n    }\n\n    function abi_encode_t_stringliteral_8f7ab3f7e792b273608ffaf89527bcbb9272ea245b3f5800d21a92a6aefb7013_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_8f7ab3f7e792b273608ffaf89527bcbb9272ea245b3f5800d21a92a6aefb7013(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8f7ab3f7e792b273608ffaf89527bcbb9272ea245b3f5800d21a92a6aefb7013__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8f7ab3f7e792b273608ffaf89527bcbb9272ea245b3f5800d21a92a6aefb7013_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988(memPtr) {\n\n        mstore(add(memPtr, 0), \"Course name cannot be empty\")\n\n    }\n\n    function abi_encode_t_stringliteral_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97(memPtr) {\n\n        mstore(add(memPtr, 0), \"Issue date cannot be in the futu\")\n\n        mstore(add(memPtr, 32), \"re\")\n\n    }\n\n    function abi_encode_t_stringliteral_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA8C5DC33 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA8C5DC33 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0xB4C4A054 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xE14E071B EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0xF84DD785 EQ PUSH2 0x1BD JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x70DD0DBC EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x8E9841D0 EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x8E9D660F EQ PUSH2 0x12D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0xC5B JUMP JUMPDEST PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDD PUSH2 0x4B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE7 PUSH2 0x4C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x117 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x112 SWAP2 SWAP1 PUSH2 0xF15 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xFA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x142 SWAP2 SWAP1 PUSH2 0xC5B JUMP JUMPDEST PUSH2 0x7F0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x151 PUSH2 0x83C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x1021 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16F PUSH2 0x862 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0xFA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x1068 JUMP JUMPDEST PUSH2 0x87C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0xC5B JUMP JUMPDEST PUSH2 0x8B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x114B JUMP JUMPDEST PUSH2 0x936 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x62252880 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0xFA7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x29C JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x3AB JUMPI PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x2E0 JUMPI POP DUP1 PUSH1 0xE0 ADD MLOAD ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2F2 JUMPI POP PUSH1 0x0 DUP2 PUSH2 0x100 ADD MLOAD MLOAD GT JUMPDEST ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP2 PUSH2 0x100 ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x312 JUMPI PUSH2 0x311 PUSH2 0x1579 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x377 JUMPI POP DUP4 DUP3 PUSH1 0x40 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND GT JUMPDEST ISZERO PUSH2 0x395 JUMPI PUSH1 0x1 SWAP6 POP DUP3 SWAP5 POP DUP2 PUSH1 0x40 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP4 POP JUMPDEST POP JUMPDEST POP DUP1 DUP1 PUSH2 0x3A3 SWAP1 PUSH2 0x1642 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x202 JUMP JUMPDEST POP DUP3 PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x62252880 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x430 SWAP2 SWAP1 PUSH2 0xFA7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x44D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x476 SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH2 0x120 ADD MLOAD DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x16F7 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x1 DUP3 DUP3 SWAP9 POP SWAP9 POP SWAP9 POP POP POP POP POP POP POP JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH2 0x4B8 PUSH2 0xA96 JUMP JUMPDEST PUSH2 0x4C2 PUSH1 0x0 PUSH2 0xB1D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SUB PUSH2 0x551 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x548 SWAP1 PUSH2 0x179F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x566 SWAP3 SWAP2 SWAP1 PUSH2 0x17BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x594 JUMPI PUSH2 0x593 PUSH2 0xDBE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5C7 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x5B2 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x5FE JUMPI PUSH2 0x5FD PUSH2 0x1579 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x678 PUSH2 0xBE1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6B8 JUMPI PUSH2 0x6B7 PUSH2 0x17EF JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB82916CB DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72F SWAP2 SWAP1 PUSH2 0x1AE5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x74E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x772 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST SWAP1 POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x793 PUSH2 0xBE1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3CDCE538B6DB111FCF97C8CDFC0F65DCD4C7EAEEA28ABF410F46AD76DAED828B DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0x7DA SWAP3 SWAP2 SWAP1 PUSH2 0x17BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 SWAP5 POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x7F8 PUSH2 0xA96 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x884 PUSH2 0xA96 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x8B8 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x92A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x921 SWAP2 SWAP1 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x933 DUP2 PUSH2 0xB1D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99B SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP4 DUP4 SWAP1 POP EQ PUSH2 0x9EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E1 SWAP1 PUSH2 0x1C25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 DUP7 DUP2 ADD SWAP1 PUSH2 0x9FC SWAP2 SWAP1 PUSH2 0x1C45 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP3 MLOAD GT PUSH2 0xA44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3B SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP2 GT ISZERO PUSH2 0xA87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7E SWAP1 PUSH2 0x1D7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA9E PUSH2 0xBE1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xABC PUSH2 0x4C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB1B JUMPI PUSH2 0xADF PUSH2 0xBE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB12 SWAP2 SWAP1 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC28 DUP3 PUSH2 0xBFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC38 DUP2 PUSH2 0xC1D JUMP JUMPDEST DUP2 EQ PUSH2 0xC43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC55 DUP2 PUSH2 0xC2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC71 JUMPI PUSH2 0xC70 PUSH2 0xBF3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC7F DUP5 DUP3 DUP6 ADD PUSH2 0xC46 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC9D DUP2 PUSH2 0xC88 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCDD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xCC2 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD05 DUP3 PUSH2 0xCA3 JUMP JUMPDEST PUSH2 0xD0F DUP2 DUP6 PUSH2 0xCAE JUMP JUMPDEST SWAP4 POP PUSH2 0xD1F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xCBF JUMP JUMPDEST PUSH2 0xD28 DUP2 PUSH2 0xCE9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD46 DUP2 PUSH2 0xD33 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD61 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xC94 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xD73 DUP2 DUP6 PUSH2 0xCFA JUMP JUMPDEST SWAP1 POP PUSH2 0xD82 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD3D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xD93 DUP2 PUSH2 0xC1D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDAE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xDF6 DUP3 PUSH2 0xCE9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xE15 JUMPI PUSH2 0xE14 PUSH2 0xDBE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE28 PUSH2 0xBE9 JUMP JUMPDEST SWAP1 POP PUSH2 0xE34 DUP3 DUP3 PUSH2 0xDED JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE54 JUMPI PUSH2 0xE53 PUSH2 0xDBE JUMP JUMPDEST JUMPDEST PUSH2 0xE5D DUP3 PUSH2 0xCE9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE8C PUSH2 0xE87 DUP5 PUSH2 0xE39 JUMP JUMPDEST PUSH2 0xE1E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xEA8 JUMPI PUSH2 0xEA7 PUSH2 0xDB9 JUMP JUMPDEST JUMPDEST PUSH2 0xEB3 DUP5 DUP3 DUP6 PUSH2 0xE6A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xED0 JUMPI PUSH2 0xECF PUSH2 0xDB4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xEE0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xE79 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEF2 DUP2 PUSH2 0xD33 JUMP JUMPDEST DUP2 EQ PUSH2 0xEFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF0F DUP2 PUSH2 0xEE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF2E JUMPI PUSH2 0xF2D PUSH2 0xBF3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF3C DUP7 DUP3 DUP8 ADD PUSH2 0xC46 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF5D JUMPI PUSH2 0xF5C PUSH2 0xBF8 JUMP JUMPDEST JUMPDEST PUSH2 0xF69 DUP7 DUP3 DUP8 ADD PUSH2 0xEBB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF7A DUP7 DUP3 DUP8 ADD PUSH2 0xF00 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFA1 DUP2 PUSH2 0xF84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFBC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE7 PUSH2 0xFE2 PUSH2 0xFDD DUP5 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0xFC2 JUMP JUMPDEST PUSH2 0xBFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF9 DUP3 PUSH2 0xFCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100B DUP3 PUSH2 0xFEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x101B DUP2 PUSH2 0x1000 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1036 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1012 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1045 DUP2 PUSH2 0xF84 JUMP JUMPDEST DUP2 EQ PUSH2 0x1050 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1062 DUP2 PUSH2 0x103C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x107E JUMPI PUSH2 0x107D PUSH2 0xBF3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x108C DUP5 DUP3 DUP6 ADD PUSH2 0x1053 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x10B5 JUMPI PUSH2 0x10B4 PUSH2 0xDB4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10D2 JUMPI PUSH2 0x10D1 PUSH2 0x1095 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x10EE JUMPI PUSH2 0x10ED PUSH2 0x109A JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x110B JUMPI PUSH2 0x110A PUSH2 0xDB4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1128 JUMPI PUSH2 0x1127 PUSH2 0x1095 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1144 JUMPI PUSH2 0x1143 PUSH2 0x109A JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1167 JUMPI PUSH2 0x1166 PUSH2 0xBF3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1175 DUP9 DUP3 DUP10 ADD PUSH2 0x1053 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1196 JUMPI PUSH2 0x1195 PUSH2 0xBF8 JUMP JUMPDEST JUMPDEST PUSH2 0x11A2 DUP9 DUP3 DUP10 ADD PUSH2 0x109F JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11C5 JUMPI PUSH2 0x11C4 PUSH2 0xBF8 JUMP JUMPDEST JUMPDEST PUSH2 0x11D1 DUP9 DUP3 DUP10 ADD PUSH2 0x10F5 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11F5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC94 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1214 DUP2 PUSH2 0x103C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1229 DUP2 PUSH2 0xC2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x123C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x124E DUP2 PUSH2 0x122F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x125D DUP2 PUSH2 0xC88 JUMP JUMPDEST DUP2 EQ PUSH2 0x1268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x127A DUP2 PUSH2 0x1254 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x129B JUMPI PUSH2 0x129A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x12C7 JUMPI PUSH2 0x12C6 PUSH2 0xDBE JUMP JUMPDEST JUMPDEST PUSH2 0x12D0 DUP3 PUSH2 0xCE9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12F0 PUSH2 0x12EB DUP5 PUSH2 0x12AC JUMP JUMPDEST PUSH2 0xE1E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x130C JUMPI PUSH2 0x130B PUSH2 0xDB9 JUMP JUMPDEST JUMPDEST PUSH2 0x1317 DUP5 DUP3 DUP6 PUSH2 0xCBF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1334 JUMPI PUSH2 0x1333 PUSH2 0xDB4 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1344 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x12DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1360 PUSH2 0x135B DUP5 PUSH2 0x1280 JUMP JUMPDEST PUSH2 0xE1E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1383 JUMPI PUSH2 0x1382 PUSH2 0x109A JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13CA JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13A8 JUMPI PUSH2 0x13A7 PUSH2 0xDB4 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x13B5 DUP10 DUP3 PUSH2 0x131F JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1385 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x13E9 JUMPI PUSH2 0x13E8 PUSH2 0xDB4 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x13F9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x134D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1419 JUMPI PUSH2 0x1418 PUSH2 0x11FB JUMP JUMPDEST JUMPDEST PUSH2 0x1424 PUSH2 0x140 PUSH2 0xE1E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1434 DUP5 DUP3 DUP6 ADD PUSH2 0x1205 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1448 DUP5 DUP3 DUP6 ADD PUSH2 0x1205 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x145C DUP5 DUP3 DUP6 ADD PUSH2 0x1205 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x1470 DUP5 DUP3 DUP6 ADD PUSH2 0x1205 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x1484 DUP5 DUP3 DUP6 ADD PUSH2 0x121A JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x1498 DUP5 DUP3 DUP6 ADD PUSH2 0x1205 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x14AC DUP5 DUP3 DUP6 ADD PUSH2 0x123F JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x14C0 DUP5 DUP3 DUP6 ADD PUSH2 0x126B JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14E5 JUMPI PUSH2 0x14E4 PUSH2 0x1200 JUMP JUMPDEST JUMPDEST PUSH2 0x14F1 DUP5 DUP3 DUP6 ADD PUSH2 0x13D4 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP PUSH2 0x120 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1517 JUMPI PUSH2 0x1516 PUSH2 0x1200 JUMP JUMPDEST JUMPDEST PUSH2 0x1523 DUP5 DUP3 DUP6 ADD PUSH2 0x131F JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1546 JUMPI PUSH2 0x1545 PUSH2 0xBF3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1564 JUMPI PUSH2 0x1563 PUSH2 0xBF8 JUMP JUMPDEST JUMPDEST PUSH2 0x1570 DUP5 DUP3 DUP6 ADD PUSH2 0x1402 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15B3 DUP3 PUSH2 0xBFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15C3 DUP2 PUSH2 0x15A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x15CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x15E0 DUP2 PUSH2 0x15BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15FC JUMPI PUSH2 0x15FB PUSH2 0xBF3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x160A DUP5 DUP3 DUP6 ADD PUSH2 0x15D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x164D DUP3 PUSH2 0xF84 JUMP JUMPDEST SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1667 JUMPI PUSH2 0x1666 PUSH2 0x1613 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1685 PUSH2 0x1680 DUP5 PUSH2 0xE39 JUMP JUMPDEST PUSH2 0xE1E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x16A1 JUMPI PUSH2 0x16A0 PUSH2 0xDB9 JUMP JUMPDEST JUMPDEST PUSH2 0x16AC DUP5 DUP3 DUP6 PUSH2 0xCBF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16C9 JUMPI PUSH2 0x16C8 PUSH2 0xDB4 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x16D9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1672 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x16F1 DUP2 PUSH2 0xEE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x170E JUMPI PUSH2 0x170D PUSH2 0xBF3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x172C JUMPI PUSH2 0x172B PUSH2 0xBF8 JUMP JUMPDEST JUMPDEST PUSH2 0x1738 DUP6 DUP3 DUP7 ADD PUSH2 0x16B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1749 DUP6 DUP3 DUP7 ADD PUSH2 0x16E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726564656E7469616C20736368656D61206E6F742073657400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1789 PUSH1 0x19 DUP4 PUSH2 0xCAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1794 DUP3 PUSH2 0x1753 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17B8 DUP2 PUSH2 0x177C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17D9 DUP2 DUP6 PUSH2 0xCFA JUMP JUMPDEST SWAP1 POP PUSH2 0x17E8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD3D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1827 DUP2 PUSH2 0xF84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1836 DUP2 PUSH2 0xC1D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x184D JUMPI PUSH2 0x184C PUSH2 0x17EF JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x185E DUP3 PUSH2 0x183C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x186E DUP3 PUSH2 0x1850 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x187E DUP2 PUSH2 0x1863 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x188D DUP2 PUSH2 0xC88 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E6 DUP3 PUSH2 0x18BF JUMP JUMPDEST PUSH2 0x18F0 DUP2 DUP6 PUSH2 0x18CA JUMP JUMPDEST SWAP4 POP PUSH2 0x1900 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xCBF JUMP JUMPDEST PUSH2 0x1909 DUP2 PUSH2 0xCE9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1920 DUP4 DUP4 PUSH2 0x18DB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1940 DUP3 PUSH2 0x1893 JUMP JUMPDEST PUSH2 0x194A DUP2 DUP6 PUSH2 0x189E JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x195C DUP6 PUSH2 0x18AF JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1998 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x1979 DUP6 DUP3 PUSH2 0x1914 JUMP JUMPDEST SWAP5 POP PUSH2 0x1984 DUP4 PUSH2 0x1928 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1960 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x19C3 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x181E JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x19D6 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x181E JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x19E9 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x181E JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x19FC PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x181E JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x1A0F PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x182D JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x1A22 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x181E JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x1A35 PUSH1 0xC0 DUP7 ADD DUP3 PUSH2 0x1875 JUMP JUMPDEST POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x1A48 PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0x1884 JUMP JUMPDEST POP PUSH2 0x100 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x1A62 DUP3 DUP3 PUSH2 0x1935 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x120 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x1A7E DUP3 DUP3 PUSH2 0x18DB JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A9B PUSH1 0x0 DUP4 PUSH2 0xCAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA6 DUP3 PUSH2 0x1A8B JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ACF PUSH1 0x0 DUP4 PUSH2 0x1AB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ADA DUP3 PUSH2 0x1A8B JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AFF DUP2 DUP5 PUSH2 0x19AA JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1B12 DUP2 PUSH2 0x1A8E JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1B25 DUP2 PUSH2 0x1AC2 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1B38 DUP2 PUSH2 0x1AC2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B56 JUMPI PUSH2 0x1B55 PUSH2 0xBF3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B64 DUP5 DUP3 DUP6 ADD PUSH2 0x1205 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420736368656D61204944000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA3 PUSH1 0x11 DUP4 PUSH2 0xCAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1BAE DUP3 PUSH2 0x1B6D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BD2 DUP2 PUSH2 0x1B96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F6E6520726563697069656E7420616C6C6F776564000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0F PUSH1 0x1A DUP4 PUSH2 0xCAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1C1A DUP3 PUSH2 0x1BD9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C3E DUP2 PUSH2 0x1C02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C5C JUMPI PUSH2 0x1C5B PUSH2 0xBF3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C7A JUMPI PUSH2 0x1C79 PUSH2 0xBF8 JUMP JUMPDEST JUMPDEST PUSH2 0x1C86 DUP6 DUP3 DUP7 ADD PUSH2 0xEBB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C97 DUP6 DUP3 DUP7 ADD PUSH2 0xF00 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F75727365206E616D652063616E6E6F7420626520656D7074790000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD7 PUSH1 0x1B DUP4 PUSH2 0xCAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE2 DUP3 PUSH2 0x1CA1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D06 DUP2 PUSH2 0x1CCA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x497373756520646174652063616E6E6F7420626520696E207468652066757475 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D69 PUSH1 0x22 DUP4 PUSH2 0xCAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1D74 DUP3 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D98 DUP2 PUSH2 0x1D5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 0xD2 SLT PUSH0 SWAP8 0xE2 SWAP13 0xB5 0xB1 CALLDATALOAD SWAP13 0x4D TLOAD PREVRANDAO GT 0xEB GT SHL 0xB5 CREATE SWAP8 EXTCODEHASH BLOCKHASH 0xC6 SSTORE 0xE8 BLOBHASH 0xE6 SELFBALANCE SWAP7 0xB5 SGT PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"374:3941:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1960:1670;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2293:101:6;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;879:1075:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;651:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;422:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;449:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;760:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3636:677:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1960:1670;2025:4;2031:13;2046:7;2129:10;2142:5;2129:18;;2157:19;2190:27;2326:8;2337:1;2326:12;;2321:930;2365:10;;;;;;;;;;;:25;;;2391:1;2365:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2361:880;3221:5;2361:880;2546:18;;;;;;;;;;;2522:42;;:11;:20;;;:42;;;:87;;;;;2590:11;:19;;;2589:20;2522:87;:144;;;;;2665:1;2633:11;:22;;;:29;:33;2522:144;2518:578;;;2711:17;2742:11;:22;;;2765:1;2742:25;;;;;;;;:::i;:::-;;;;;;;;2731:48;;;;;;;;;;;;:::i;:::-;2711:68;;2839:6;2826:19;;:9;:19;;;:72;;;;;2879:19;2849:11;:27;;;:49;;;2826:72;2822:256;;;2934:4;2926:12;;2979:1;2964:16;;3028:11;:27;;;3006:49;;;;2822:256;2668:428;2518:578;2394:716;2342:3;;;;;:::i;:::-;;;;2321:930;;;;3266:5;3261:58;;3295:5;3306:1;3287:21;;;;;;;;;;;;;;;;;;;;;;;;3261:58;3378:40;3421:10;;;;;;;;;;;:25;;;3447:12;3421:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3378:82;;3480:20;3502:17;3534:21;:26;;;3523:57;;;;;;;;;;;;:::i;:::-;3479:101;;;;3599:4;3605:6;3613:9;3591:32;;;;;;;;;;;;1960:1670;;;;;;:::o;2293:101:6:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;879:1075:9:-;1012:6;1060:1;1038:18;;;;;;;;;;;:23;;;1030:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1140:17;1171:6;1179:9;1160:29;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1140:49;;1234:25;1274:1;1262:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1234:42;;1313:9;1302:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;1286:10;1297:1;1286:13;;;;;;;;:::i;:::-;;;;;;;:37;;;;1334:30;1367:364;;;;;;;;1403:18;;;;;;;;;;;1367:364;;;;;;1456:1;1367:364;;;;;;1488:1;1367:364;;;;;;1520:1;1367:364;;;;;;1545:12;:10;:12::i;:::-;1367:364;;;;;;1583:1;1367:364;;;;;;1612:20;1367:364;;;;;;;;:::i;:::-;;;;;;1655:5;1367:364;;;;;;1686:10;1367:364;;;;1716:4;1367:364;;;1334:397;;1775:20;1798:10;;;;;;;;;;;:17;;;1816:11;1798:42;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1775:65;;1887:9;1856:60;;1873:12;:10;:12::i;:::-;1856:60;;;1898:6;1906:9;1856:60;;;;;;;:::i;:::-;;;;;;;;1934:13;1927:20;;;;;;879:1075;;;;;:::o;651:103::-;1531:13:6;:11;:13::i;:::-;738:8:9::1;721:10;;:26;;;;;;;;;;;;;;;;;;651:103:::0;:::o;422:21::-;;;;;;;;;;;;;:::o;449:32::-;;;;;;;;;;;;;:::o;760:113::-;1531:13:6;:11;:13::i;:::-;858:8:9::1;837:18;;:29;;;;;;;;;;;;;;;;;;760:113:::0;:::o;2543:215:6:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;3636:677:9:-;3776:4;3812:18;;;;;;;;;;;3800:30;;:8;:30;;;3792:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;3891:1;3870:10;;:17;;:22;3862:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;3973:20;3995:17;4027:4;;4016:35;;;;;;;:::i;:::-;3972:79;;;;4166:1;4149:6;4143:20;:24;4135:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;4230:15;4217:9;:28;;4209:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;4302:4;4295:11;;;;3636:677;;;;;;;:::o;1796:162:6:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;7:75:10:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:99::-;1439:6;1473:5;1467:12;1457:22;;1387:99;;;:::o;1492:169::-;1576:11;1610:6;1605:3;1598:19;1650:4;1645:3;1641:14;1626:29;;1492:169;;;;:::o;1667:246::-;1748:1;1758:113;1772:6;1769:1;1766:13;1758:113;;;1857:1;1852:3;1848:11;1842:18;1838:1;1833:3;1829:11;1822:39;1794:2;1791:1;1787:10;1782:15;;1758:113;;;1905:1;1896:6;1891:3;1887:16;1880:27;1729:184;1667:246;;;:::o;1919:102::-;1960:6;2011:2;2007:7;2002:2;1995:5;1991:14;1987:28;1977:38;;1919:102;;;:::o;2027:377::-;2115:3;2143:39;2176:5;2143:39;:::i;:::-;2198:71;2262:6;2257:3;2198:71;:::i;:::-;2191:78;;2278:65;2336:6;2331:3;2324:4;2317:5;2313:16;2278:65;:::i;:::-;2368:29;2390:6;2368:29;:::i;:::-;2363:3;2359:39;2352:46;;2119:285;2027:377;;;;:::o;2410:77::-;2447:7;2476:5;2465:16;;2410:77;;;:::o;2493:118::-;2580:24;2598:5;2580:24;:::i;:::-;2575:3;2568:37;2493:118;;:::o;2617:521::-;2780:4;2818:2;2807:9;2803:18;2795:26;;2831:65;2893:1;2882:9;2878:17;2869:6;2831:65;:::i;:::-;2943:9;2937:4;2933:20;2928:2;2917:9;2913:18;2906:48;2971:78;3044:4;3035:6;2971:78;:::i;:::-;2963:86;;3059:72;3127:2;3116:9;3112:18;3103:6;3059:72;:::i;:::-;2617:521;;;;;;:::o;3144:118::-;3231:24;3249:5;3231:24;:::i;:::-;3226:3;3219:37;3144:118;;:::o;3268:222::-;3361:4;3399:2;3388:9;3384:18;3376:26;;3412:71;3480:1;3469:9;3465:17;3456:6;3412:71;:::i;:::-;3268:222;;;;:::o;3496:117::-;3605:1;3602;3595:12;3619:117;3728:1;3725;3718:12;3742:180;3790:77;3787:1;3780:88;3887:4;3884:1;3877:15;3911:4;3908:1;3901:15;3928:281;4011:27;4033:4;4011:27;:::i;:::-;4003:6;3999:40;4141:6;4129:10;4126:22;4105:18;4093:10;4090:34;4087:62;4084:88;;;4152:18;;:::i;:::-;4084:88;4192:10;4188:2;4181:22;3971:238;3928:281;;:::o;4215:129::-;4249:6;4276:20;;:::i;:::-;4266:30;;4305:33;4333:4;4325:6;4305:33;:::i;:::-;4215:129;;;:::o;4350:308::-;4412:4;4502:18;4494:6;4491:30;4488:56;;;4524:18;;:::i;:::-;4488:56;4562:29;4584:6;4562:29;:::i;:::-;4554:37;;4646:4;4640;4636:15;4628:23;;4350:308;;;:::o;4664:146::-;4761:6;4756:3;4751;4738:30;4802:1;4793:6;4788:3;4784:16;4777:27;4664:146;;;:::o;4816:425::-;4894:5;4919:66;4935:49;4977:6;4935:49;:::i;:::-;4919:66;:::i;:::-;4910:75;;5008:6;5001:5;4994:21;5046:4;5039:5;5035:16;5084:3;5075:6;5070:3;5066:16;5063:25;5060:112;;;5091:79;;:::i;:::-;5060:112;5181:54;5228:6;5223:3;5218;5181:54;:::i;:::-;4900:341;4816:425;;;;;:::o;5261:340::-;5317:5;5366:3;5359:4;5351:6;5347:17;5343:27;5333:122;;5374:79;;:::i;:::-;5333:122;5491:6;5478:20;5516:79;5591:3;5583:6;5576:4;5568:6;5564:17;5516:79;:::i;:::-;5507:88;;5323:278;5261:340;;;;:::o;5607:122::-;5680:24;5698:5;5680:24;:::i;:::-;5673:5;5670:35;5660:63;;5719:1;5716;5709:12;5660:63;5607:122;:::o;5735:139::-;5781:5;5819:6;5806:20;5797:29;;5835:33;5862:5;5835:33;:::i;:::-;5735:139;;;;:::o;5880:799::-;5967:6;5975;5983;6032:2;6020:9;6011:7;6007:23;6003:32;6000:119;;;6038:79;;:::i;:::-;6000:119;6158:1;6183:53;6228:7;6219:6;6208:9;6204:22;6183:53;:::i;:::-;6173:63;;6129:117;6313:2;6302:9;6298:18;6285:32;6344:18;6336:6;6333:30;6330:117;;;6366:79;;:::i;:::-;6330:117;6471:63;6526:7;6517:6;6506:9;6502:22;6471:63;:::i;:::-;6461:73;;6256:288;6583:2;6609:53;6654:7;6645:6;6634:9;6630:22;6609:53;:::i;:::-;6599:63;;6554:118;5880:799;;;;;:::o;6685:101::-;6721:7;6761:18;6754:5;6750:30;6739:41;;6685:101;;;:::o;6792:115::-;6877:23;6894:5;6877:23;:::i;:::-;6872:3;6865:36;6792:115;;:::o;6913:218::-;7004:4;7042:2;7031:9;7027:18;7019:26;;7055:69;7121:1;7110:9;7106:17;7097:6;7055:69;:::i;:::-;6913:218;;;;:::o;7137:60::-;7165:3;7186:5;7179:12;;7137:60;;;:::o;7203:142::-;7253:9;7286:53;7304:34;7313:24;7331:5;7313:24;:::i;:::-;7304:34;:::i;:::-;7286:53;:::i;:::-;7273:66;;7203:142;;;:::o;7351:126::-;7401:9;7434:37;7465:5;7434:37;:::i;:::-;7421:50;;7351:126;;;:::o;7483:137::-;7544:9;7577:37;7608:5;7577:37;:::i;:::-;7564:50;;7483:137;;;:::o;7626:153::-;7724:48;7766:5;7724:48;:::i;:::-;7719:3;7712:61;7626:153;;:::o;7785:244::-;7889:4;7927:2;7916:9;7912:18;7904:26;;7940:82;8019:1;8008:9;8004:17;7995:6;7940:82;:::i;:::-;7785:244;;;;:::o;8035:120::-;8107:23;8124:5;8107:23;:::i;:::-;8100:5;8097:34;8087:62;;8145:1;8142;8135:12;8087:62;8035:120;:::o;8161:137::-;8206:5;8244:6;8231:20;8222:29;;8260:32;8286:5;8260:32;:::i;:::-;8161:137;;;;:::o;8304:327::-;8362:6;8411:2;8399:9;8390:7;8386:23;8382:32;8379:119;;;8417:79;;:::i;:::-;8379:119;8537:1;8562:52;8606:7;8597:6;8586:9;8582:22;8562:52;:::i;:::-;8552:62;;8508:116;8304:327;;;;:::o;8637:117::-;8746:1;8743;8736:12;8760:117;8869:1;8866;8859:12;8896:552;8953:8;8963:6;9013:3;9006:4;8998:6;8994:17;8990:27;8980:122;;9021:79;;:::i;:::-;8980:122;9134:6;9121:20;9111:30;;9164:18;9156:6;9153:30;9150:117;;;9186:79;;:::i;:::-;9150:117;9300:4;9292:6;9288:17;9276:29;;9354:3;9346:4;9338:6;9334:17;9324:8;9320:32;9317:41;9314:128;;;9361:79;;:::i;:::-;9314:128;8896:552;;;;;:::o;9469:579::-;9553:8;9563:6;9613:3;9606:4;9598:6;9594:17;9590:27;9580:122;;9621:79;;:::i;:::-;9580:122;9734:6;9721:20;9711:30;;9764:18;9756:6;9753:30;9750:117;;;9786:79;;:::i;:::-;9750:117;9900:4;9892:6;9888:17;9876:29;;9954:3;9946:4;9938:6;9934:17;9924:8;9920:32;9917:41;9914:128;;;9961:79;;:::i;:::-;9914:128;9469:579;;;;;:::o;10054:1067::-;10179:6;10187;10195;10203;10211;10260:2;10248:9;10239:7;10235:23;10231:32;10228:119;;;10266:79;;:::i;:::-;10228:119;10386:1;10411:52;10455:7;10446:6;10435:9;10431:22;10411:52;:::i;:::-;10401:62;;10357:116;10540:2;10529:9;10525:18;10512:32;10571:18;10563:6;10560:30;10557:117;;;10593:79;;:::i;:::-;10557:117;10706:64;10762:7;10753:6;10742:9;10738:22;10706:64;:::i;:::-;10688:82;;;;10483:297;10847:2;10836:9;10832:18;10819:32;10878:18;10870:6;10867:30;10864:117;;;10900:79;;:::i;:::-;10864:117;11013:91;11096:7;11087:6;11076:9;11072:22;11013:91;:::i;:::-;10995:109;;;;10790:324;10054:1067;;;;;;;;:::o;11127:210::-;11214:4;11252:2;11241:9;11237:18;11229:26;;11265:65;11327:1;11316:9;11312:17;11303:6;11265:65;:::i;:::-;11127:210;;;;:::o;11343:117::-;11452:1;11449;11442:12;11466:117;11575:1;11572;11565:12;11589:141;11645:5;11676:6;11670:13;11661:22;;11692:32;11718:5;11692:32;:::i;:::-;11589:141;;;;:::o;11736:143::-;11793:5;11824:6;11818:13;11809:22;;11840:33;11867:5;11840:33;:::i;:::-;11736:143;;;;:::o;11885:115::-;11974:1;11967:5;11964:12;11954:40;;11990:1;11987;11980:12;11954:40;11885:115;:::o;12006:175::-;12079:5;12110:6;12104:13;12095:22;;12126:49;12169:5;12126:49;:::i;:::-;12006:175;;;;:::o;12187:116::-;12257:21;12272:5;12257:21;:::i;:::-;12250:5;12247:32;12237:60;;12293:1;12290;12283:12;12237:60;12187:116;:::o;12309:137::-;12363:5;12394:6;12388:13;12379:22;;12410:30;12434:5;12410:30;:::i;:::-;12309:137;;;;:::o;12452:320::-;12538:4;12628:18;12620:6;12617:30;12614:56;;;12650:18;;:::i;:::-;12614:56;12700:4;12692:6;12688:17;12680:25;;12760:4;12754;12750:15;12742:23;;12452:320;;;:::o;12778:307::-;12839:4;12929:18;12921:6;12918:30;12915:56;;;12951:18;;:::i;:::-;12915:56;12989:29;13011:6;12989:29;:::i;:::-;12981:37;;13073:4;13067;13063:15;13055:23;;12778:307;;;:::o;13091:432::-;13179:5;13204:65;13220:48;13261:6;13220:48;:::i;:::-;13204:65;:::i;:::-;13195:74;;13292:6;13285:5;13278:21;13330:4;13323:5;13319:16;13368:3;13359:6;13354:3;13350:16;13347:25;13344:112;;;13375:79;;:::i;:::-;13344:112;13465:52;13510:6;13505:3;13500;13465:52;:::i;:::-;13185:338;13091:432;;;;;:::o;13542:353::-;13608:5;13657:3;13650:4;13642:6;13638:17;13634:27;13624:122;;13665:79;;:::i;:::-;13624:122;13775:6;13769:13;13800:89;13885:3;13877:6;13870:4;13862:6;13858:17;13800:89;:::i;:::-;13791:98;;13614:281;13542:353;;;;:::o;13916:957::-;14032:5;14057:90;14073:73;14139:6;14073:73;:::i;:::-;14057:90;:::i;:::-;14048:99;;14167:5;14196:6;14189:5;14182:21;14230:4;14223:5;14219:16;14212:23;;14283:4;14275:6;14271:17;14263:6;14259:30;14312:3;14304:6;14301:15;14298:122;;;14331:79;;:::i;:::-;14298:122;14446:6;14429:438;14463:6;14458:3;14455:15;14429:438;;;14545:3;14539:10;14581:18;14568:11;14565:35;14562:122;;;14603:79;;:::i;:::-;14562:122;14727:11;14719:6;14715:24;14765:57;14818:3;14806:10;14765:57;:::i;:::-;14760:3;14753:70;14852:4;14847:3;14843:14;14836:21;;14505:362;;14489:4;14484:3;14480:14;14473:21;;14429:438;;;14433:21;14038:835;;13916:957;;;;;:::o;14894:403::-;14985:5;15034:3;15027:4;15019:6;15015:17;15011:27;15001:122;;15042:79;;:::i;:::-;15001:122;15152:6;15146:13;15177:114;15287:3;15279:6;15272:4;15264:6;15260:17;15177:114;:::i;:::-;15168:123;;14991:306;14894:403;;;;:::o;15329:2425::-;15417:5;15461:6;15449:9;15444:3;15440:19;15436:32;15433:119;;;15471:79;;:::i;:::-;15433:119;15570:23;15586:6;15570:23;:::i;:::-;15561:32;;15656:1;15696:59;15751:3;15742:6;15731:9;15727:22;15696:59;:::i;:::-;15689:4;15682:5;15678:16;15671:85;15603:164;15841:2;15882:59;15937:3;15928:6;15917:9;15913:22;15882:59;:::i;:::-;15875:4;15868:5;15864:16;15857:85;15777:176;16023:2;16064:59;16119:3;16110:6;16099:9;16095:22;16064:59;:::i;:::-;16057:4;16050:5;16046:16;16039:85;15963:172;16205:2;16246:59;16301:3;16292:6;16281:9;16277:22;16246:59;:::i;:::-;16239:4;16232:5;16228:16;16221:85;16145:172;16380:3;16422:60;16478:3;16469:6;16458:9;16454:22;16422:60;:::i;:::-;16415:4;16408:5;16404:16;16397:86;16327:167;16559:3;16601:59;16656:3;16647:6;16636:9;16632:22;16601:59;:::i;:::-;16594:4;16587:5;16583:16;16576:85;16504:168;16739:3;16781:76;16853:3;16844:6;16833:9;16829:22;16781:76;:::i;:::-;16774:4;16767:5;16763:16;16756:102;16682:187;16931:3;16973:57;17026:3;17017:6;17006:9;17002:22;16973:57;:::i;:::-;16966:4;16959:5;16955:16;16948:83;16879:163;17128:3;17117:9;17113:19;17107:26;17160:18;17152:6;17149:30;17146:117;;;17182:79;;:::i;:::-;17146:117;17304:94;17394:3;17385:6;17374:9;17370:22;17304:94;:::i;:::-;17295:6;17288:5;17284:18;17277:122;17052:358;17490:3;17479:9;17475:19;17469:26;17522:18;17514:6;17511:30;17508:117;;;17544:79;;:::i;:::-;17508:117;17666:69;17731:3;17722:6;17711:9;17707:22;17666:69;:::i;:::-;17657:6;17650:5;17646:18;17639:97;17420:327;15329:2425;;;;:::o;17760:560::-;17858:6;17907:2;17895:9;17886:7;17882:23;17878:32;17875:119;;;17913:79;;:::i;:::-;17875:119;18054:1;18043:9;18039:17;18033:24;18084:18;18076:6;18073:30;18070:117;;;18106:79;;:::i;:::-;18070:117;18211:92;18295:7;18286:6;18275:9;18271:22;18211:92;:::i;:::-;18201:102;;18004:309;17760:560;;;;:::o;18326:180::-;18374:77;18371:1;18364:88;18471:4;18468:1;18461:15;18495:4;18492:1;18485:15;18512:104;18557:7;18586:24;18604:5;18586:24;:::i;:::-;18575:35;;18512:104;;;:::o;18622:138::-;18703:32;18729:5;18703:32;:::i;:::-;18696:5;18693:43;18683:71;;18750:1;18747;18740:12;18683:71;18622:138;:::o;18766:159::-;18831:5;18862:6;18856:13;18847:22;;18878:41;18913:5;18878:41;:::i;:::-;18766:159;;;;:::o;18931:367::-;19009:6;19058:2;19046:9;19037:7;19033:23;19029:32;19026:119;;;19064:79;;:::i;:::-;19026:119;19184:1;19209:72;19273:7;19264:6;19253:9;19249:22;19209:72;:::i;:::-;19199:82;;19155:136;18931:367;;;;:::o;19304:180::-;19352:77;19349:1;19342:88;19449:4;19446:1;19439:15;19473:4;19470:1;19463:15;19490:183;19528:3;19551:23;19568:5;19551:23;:::i;:::-;19542:32;;19596:18;19589:5;19586:29;19583:55;;19618:18;;:::i;:::-;19583:55;19665:1;19658:5;19654:13;19647:20;;19490:183;;;:::o;19679:434::-;19768:5;19793:66;19809:49;19851:6;19809:49;:::i;:::-;19793:66;:::i;:::-;19784:75;;19882:6;19875:5;19868:21;19920:4;19913:5;19909:16;19958:3;19949:6;19944:3;19940:16;19937:25;19934:112;;;19965:79;;:::i;:::-;19934:112;20055:52;20100:6;20095:3;20090;20055:52;:::i;:::-;19774:339;19679:434;;;;;:::o;20133:355::-;20200:5;20249:3;20242:4;20234:6;20230:17;20226:27;20216:122;;20257:79;;:::i;:::-;20216:122;20367:6;20361:13;20392:90;20478:3;20470:6;20463:4;20455:6;20451:17;20392:90;:::i;:::-;20383:99;;20206:282;20133:355;;;;:::o;20494:143::-;20551:5;20582:6;20576:13;20567:22;;20598:33;20625:5;20598:33;:::i;:::-;20494:143;;;;:::o;20643:680::-;20732:6;20740;20789:2;20777:9;20768:7;20764:23;20760:32;20757:119;;;20795:79;;:::i;:::-;20757:119;20936:1;20925:9;20921:17;20915:24;20966:18;20958:6;20955:30;20952:117;;;20988:79;;:::i;:::-;20952:117;21093:74;21159:7;21150:6;21139:9;21135:22;21093:74;:::i;:::-;21083:84;;20886:291;21216:2;21242:64;21298:7;21289:6;21278:9;21274:22;21242:64;:::i;:::-;21232:74;;21187:129;20643:680;;;;;:::o;21329:175::-;21469:27;21465:1;21457:6;21453:14;21446:51;21329:175;:::o;21510:366::-;21652:3;21673:67;21737:2;21732:3;21673:67;:::i;:::-;21666:74;;21749:93;21838:3;21749:93;:::i;:::-;21867:2;21862:3;21858:12;21851:19;;21510:366;;;:::o;21882:419::-;22048:4;22086:2;22075:9;22071:18;22063:26;;22135:9;22129:4;22125:20;22121:1;22110:9;22106:17;22099:47;22163:131;22289:4;22163:131;:::i;:::-;22155:139;;21882:419;;;:::o;22307:423::-;22448:4;22486:2;22475:9;22471:18;22463:26;;22535:9;22529:4;22525:20;22521:1;22510:9;22506:17;22499:47;22563:78;22636:4;22627:6;22563:78;:::i;:::-;22555:86;;22651:72;22719:2;22708:9;22704:18;22695:6;22651:72;:::i;:::-;22307:423;;;;;:::o;22736:180::-;22784:77;22781:1;22774:88;22881:4;22878:1;22871:15;22905:4;22902:1;22895:15;22922:105;22997:23;23014:5;22997:23;:::i;:::-;22992:3;22985:36;22922:105;;:::o;23033:108::-;23110:24;23128:5;23110:24;:::i;:::-;23105:3;23098:37;23033:108;;:::o;23147:121::-;23236:1;23229:5;23226:12;23216:46;;23242:18;;:::i;:::-;23216:46;23147:121;:::o;23274:143::-;23327:7;23356:5;23345:16;;23362:49;23405:5;23362:49;:::i;:::-;23274:143;;;:::o;23423:::-;23487:9;23520:40;23554:5;23520:40;:::i;:::-;23507:53;;23423:143;;;:::o;23572:149::-;23663:51;23708:5;23663:51;:::i;:::-;23658:3;23651:64;23572:149;;:::o;23727:99::-;23798:21;23813:5;23798:21;:::i;:::-;23793:3;23786:34;23727:99;;:::o;23832:123::-;23908:6;23942:5;23936:12;23926:22;;23832:123;;;:::o;23961:183::-;24059:11;24093:6;24088:3;24081:19;24133:4;24128:3;24124:14;24109:29;;23961:183;;;;:::o;24150:141::-;24226:4;24249:3;24241:11;;24279:4;24274:3;24270:14;24262:22;;24150:141;;;:::o;24297:98::-;24348:6;24382:5;24376:12;24366:22;;24297:98;;;:::o;24401:158::-;24474:11;24508:6;24503:3;24496:19;24548:4;24543:3;24539:14;24524:29;;24401:158;;;;:::o;24565:353::-;24641:3;24669:38;24701:5;24669:38;:::i;:::-;24723:60;24776:6;24771:3;24723:60;:::i;:::-;24716:67;;24792:65;24850:6;24845:3;24838:4;24831:5;24827:16;24792:65;:::i;:::-;24882:29;24904:6;24882:29;:::i;:::-;24877:3;24873:39;24866:46;;24645:273;24565:353;;;;:::o;24924:192::-;25011:10;25046:64;25106:3;25098:6;25046:64;:::i;:::-;25032:78;;24924:192;;;;:::o;25122:122::-;25201:4;25233;25228:3;25224:14;25216:22;;25122:122;;;:::o;25276:963::-;25403:3;25432:63;25489:5;25432:63;:::i;:::-;25511:85;25589:6;25584:3;25511:85;:::i;:::-;25504:92;;25622:3;25667:4;25659:6;25655:17;25650:3;25646:27;25697:65;25756:5;25697:65;:::i;:::-;25785:7;25816:1;25801:393;25826:6;25823:1;25820:13;25801:393;;;25897:9;25891:4;25887:20;25882:3;25875:33;25948:6;25942:13;25976:82;26053:4;26038:13;25976:82;:::i;:::-;25968:90;;26081:69;26143:6;26081:69;:::i;:::-;26071:79;;26179:4;26174:3;26170:14;26163:21;;25861:333;25848:1;25845;25841:9;25836:14;;25801:393;;;25805:14;26210:4;26203:11;;26230:3;26223:10;;25408:831;;;;;25276:963;;;;:::o;26293:2197::-;26418:3;26454:6;26449:3;26445:16;26547:4;26540:5;26536:16;26530:23;26566:61;26621:4;26616:3;26612:14;26598:12;26566:61;:::i;:::-;26471:166;26734:4;26727:5;26723:16;26717:23;26753:61;26808:4;26803:3;26799:14;26785:12;26753:61;:::i;:::-;26647:177;26917:4;26910:5;26906:16;26900:23;26936:61;26991:4;26986:3;26982:14;26968:12;26936:61;:::i;:::-;26834:173;27100:4;27093:5;27089:16;27083:23;27119:61;27174:4;27169:3;27165:14;27151:12;27119:61;:::i;:::-;27017:173;27276:4;27269:5;27265:16;27259:23;27295:63;27352:4;27347:3;27343:14;27329:12;27295:63;:::i;:::-;27200:168;27456:4;27449:5;27445:16;27439:23;27475:61;27530:4;27525:3;27521:14;27507:12;27475:61;:::i;:::-;27378:168;27636:4;27629:5;27625:16;27619:23;27655:77;27726:4;27721:3;27717:14;27703:12;27655:77;:::i;:::-;27556:186;27827:4;27820:5;27816:16;27810:23;27846:57;27897:4;27892:3;27888:14;27874:12;27846:57;:::i;:::-;27752:161;28001:6;27994:5;27990:18;27984:25;28058:3;28052:4;28048:14;28039:6;28034:3;28030:16;28023:40;28084:121;28200:4;28186:12;28084:121;:::i;:::-;28076:129;;27923:293;28298:6;28291:5;28287:18;28281:25;28355:3;28349:4;28345:14;28336:6;28331:3;28327:16;28320:40;28381:71;28447:4;28433:12;28381:71;:::i;:::-;28373:79;;28226:237;28480:4;28473:11;;26423:2067;26293:2197;;;;:::o;28496:114::-;;:::o;28616:364::-;28758:3;28779:66;28843:1;28838:3;28779:66;:::i;:::-;28772:73;;28854:93;28943:3;28854:93;:::i;:::-;28972:1;28967:3;28963:11;28956:18;;28616:364;;;:::o;28986:168::-;29069:11;29103:6;29098:3;29091:19;29143:4;29138:3;29134:14;29119:29;;28986:168;;;;:::o;29160:362::-;29301:3;29322:65;29385:1;29380:3;29322:65;:::i;:::-;29315:72;;29396:93;29485:3;29396:93;:::i;:::-;29514:1;29509:3;29505:11;29498:18;;29160:362;;;:::o;29528:1303::-;29978:4;30016:3;30005:9;30001:19;29993:27;;30066:9;30060:4;30056:20;30052:1;30041:9;30037:17;30030:47;30094:114;30203:4;30194:6;30094:114;:::i;:::-;30086:122;;30255:9;30249:4;30245:20;30240:2;30229:9;30225:18;30218:48;30283:131;30409:4;30283:131;:::i;:::-;30275:139;;30461:9;30455:4;30451:20;30446:2;30435:9;30431:18;30424:48;30489:130;30614:4;30489:130;:::i;:::-;30481:138;;30666:9;30660:4;30656:20;30651:2;30640:9;30636:18;30629:48;30694:130;30819:4;30694:130;:::i;:::-;30686:138;;29528:1303;;;;:::o;30837:349::-;30906:6;30955:2;30943:9;30934:7;30930:23;30926:32;30923:119;;;30961:79;;:::i;:::-;30923:119;31081:1;31106:63;31161:7;31152:6;31141:9;31137:22;31106:63;:::i;:::-;31096:73;;31052:127;30837:349;;;;:::o;31192:167::-;31332:19;31328:1;31320:6;31316:14;31309:43;31192:167;:::o;31365:366::-;31507:3;31528:67;31592:2;31587:3;31528:67;:::i;:::-;31521:74;;31604:93;31693:3;31604:93;:::i;:::-;31722:2;31717:3;31713:12;31706:19;;31365:366;;;:::o;31737:419::-;31903:4;31941:2;31930:9;31926:18;31918:26;;31990:9;31984:4;31980:20;31976:1;31965:9;31961:17;31954:47;32018:131;32144:4;32018:131;:::i;:::-;32010:139;;31737:419;;;:::o;32162:176::-;32302:28;32298:1;32290:6;32286:14;32279:52;32162:176;:::o;32344:366::-;32486:3;32507:67;32571:2;32566:3;32507:67;:::i;:::-;32500:74;;32583:93;32672:3;32583:93;:::i;:::-;32701:2;32696:3;32692:12;32685:19;;32344:366;;;:::o;32716:419::-;32882:4;32920:2;32909:9;32905:18;32897:26;;32969:9;32963:4;32959:20;32955:1;32944:9;32940:17;32933:47;32997:131;33123:4;32997:131;:::i;:::-;32989:139;;32716:419;;;:::o;33141:654::-;33219:6;33227;33276:2;33264:9;33255:7;33251:23;33247:32;33244:119;;;33282:79;;:::i;:::-;33244:119;33430:1;33419:9;33415:17;33402:31;33460:18;33452:6;33449:30;33446:117;;;33482:79;;:::i;:::-;33446:117;33587:63;33642:7;33633:6;33622:9;33618:22;33587:63;:::i;:::-;33577:73;;33373:287;33699:2;33725:53;33770:7;33761:6;33750:9;33746:22;33725:53;:::i;:::-;33715:63;;33670:118;33141:654;;;;;:::o;33801:177::-;33941:29;33937:1;33929:6;33925:14;33918:53;33801:177;:::o;33984:366::-;34126:3;34147:67;34211:2;34206:3;34147:67;:::i;:::-;34140:74;;34223:93;34312:3;34223:93;:::i;:::-;34341:2;34336:3;34332:12;34325:19;;33984:366;;;:::o;34356:419::-;34522:4;34560:2;34549:9;34545:18;34537:26;;34609:9;34603:4;34599:20;34595:1;34584:9;34580:17;34573:47;34637:131;34763:4;34637:131;:::i;:::-;34629:139;;34356:419;;;:::o;34781:221::-;34921:34;34917:1;34909:6;34905:14;34898:58;34990:4;34985:2;34977:6;34973:15;34966:29;34781:221;:::o;35008:366::-;35150:3;35171:67;35235:2;35230:3;35171:67;:::i;:::-;35164:74;;35247:93;35336:3;35247:93;:::i;:::-;35365:2;35360:3;35356:12;35349:19;;35008:366;;;:::o;35380:419::-;35546:4;35584:2;35573:9;35569:18;35561:26;;35633:9;35627:4;35623:20;35619:1;35608:9;35604:17;35597:47;35661:131;35787:4;35661:131;:::i;:::-;35653:139;;35380:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1527400","executionCost":"infinite","totalCost":"infinite"},"external":{"credentialSchemaId()":"2543","issueCredential(address,string,uint256)":"infinite","owner()":"2567","renounceOwnership()":"infinite","schemaHook(uint64,bytes,bytes[])":"infinite","setCredentialSchemaID(uint64)":"infinite","setSPInstance(address)":"infinite","spInstance()":"infinite","transferOwnership(address)":"infinite","verifyCredential(address)":"infinite"}},"methodIdentifiers":{"credentialSchemaId()":"b4c4a054","issueCredential(address,string,uint256)":"8e9841d0","owner()":"8da5cb5b","renounceOwnership()":"715018a6","schemaHook(uint64,bytes,bytes[])":"f84dd785","setCredentialSchemaID(uint64)":"e14e071b","setSPInstance(address)":"8e9d660f","spInstance()":"a8c5dc33","transferOwnership(address)":"f2fde38b","verifyCredential(address)":"70dd0dbc"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"institution\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"course\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"issueDate\",\"type\":\"uint256\"}],\"name\":\"CredentialIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"credentialSchemaId\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"course\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"issueDate\",\"type\":\"uint256\"}],\"name\":\"issueCredential\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"recipients\",\"type\":\"bytes[]\"}],\"name\":\"schemaHook\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"}],\"name\":\"setCredentialSchemaID\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"instance\",\"type\":\"address\"}],\"name\":\"setSPInstance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spInstance\",\"outputs\":[{\"internalType\":\"contract ISP\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"verifyCredential\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"EducationalCredential\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ethsign/sign-protocol-evm/src/interfaces/ISP.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { IVersionable } from \\\"./IVersionable.sol\\\";\\nimport { Schema } from \\\"../models/Schema.sol\\\";\\nimport { Attestation, OffchainAttestation } from \\\"../models/Attestation.sol\\\";\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/**\\n * @title Sign Protocol Interface\\n * @author Jack Xu @ EthSign\\n */\\ninterface ISP is IVersionable {\\n    event SchemaRegistered(uint64 schemaId);\\n    event AttestationMade(uint64 attestationId, string indexingKey);\\n    event AttestationRevoked(uint64 attestationId, string reason);\\n    event OffchainAttestationMade(string attestationId);\\n    event OffchainAttestationRevoked(string attestationId, string reason);\\n\\n    /**\\n     * @dev 0x9e87fac8\\n     */\\n    error Paused();\\n    /**\\n     * @dev 0x38f8c6c4\\n     */\\n    error SchemaNonexistent();\\n    /**\\n     * @dev 0x71984561\\n     */\\n    error SchemaWrongRegistrant();\\n    /**\\n     * @dev 0x8ac42f49\\n     */\\n    error AttestationIrrevocable();\\n    /**\\n     * @dev 0x54681a13\\n     */\\n    error AttestationNonexistent();\\n    /**\\n     * @dev 0xa65e02ed\\n     */\\n    error AttestationInvalidDuration();\\n    /**\\n     * @dev 0xd8c3da86\\n     */\\n    error AttestationAlreadyRevoked();\\n    /**\\n     * @dev 0xa9ad2007\\n     */\\n    error AttestationWrongAttester();\\n    /**\\n     * @dev 0xc83e3cdf\\n     */\\n    error OffchainAttestationExists();\\n    /**\\n     * @dev 0xa006519a\\n     */\\n    error OffchainAttestationNonexistent();\\n    /**\\n     * @dev 0xa0671d20\\n     */\\n    error OffchainAttestationAlreadyRevoked();\\n    /**\\n     * @dev 0xfdf4e6f9\\n     */\\n    error InvalidDelegateSignature();\\n    /**\\n     * @dev 0x5c34b9cc\\n     */\\n    error LegacySPRequired();\\n\\n    /**\\n     * @notice Registers a Schema.\\n     * @dev Emits `SchemaRegistered`.\\n     * @param schema See `Schema`.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\\\"\\\"` or `0x`\\n     * otherwise.\\n     * @return schemaId The assigned ID of the registered schema.\\n     */\\n    function register(Schema memory schema, bytes calldata delegateSignature) external returns (uint64 schemaId);\\n\\n    /**\\n     * @notice Makes an attestation.\\n     * @dev Emits `AttestationMade`.\\n     * @param attestation See `Attestation`.\\n     * @param indexingKey Used by the frontend to aid indexing.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\\\"\\\"` or `0x`\\n     * otherwise.\\n     * @param extraData This is forwarded to the resolver directly.\\n     * @return attestationId The assigned ID of the attestation.\\n     */\\n    function attest(\\n        Attestation calldata attestation,\\n        string calldata indexingKey,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        returns (uint64 attestationId);\\n\\n    /**\\n     * @notice Makes an attestation where the schema hook expects ETH payment.\\n     * @dev Emits `AttestationMade`.\\n     * @param attestation See `Attestation`.\\n     * @param resolverFeesETH Amount of funds to send to the hook.\\n     * @param indexingKey Used by the frontend to aid indexing.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\\\"\\\"` or `0x`\\n     * otherwise.\\n     * @param extraData This is forwarded to the resolver directly.\\n     * @return attestationId The assigned ID of the attestation.\\n     */\\n    function attest(\\n        Attestation calldata attestation,\\n        uint256 resolverFeesETH,\\n        string calldata indexingKey,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        payable\\n        returns (uint64 attestationId);\\n\\n    /**\\n     * @notice Makes an attestation where the schema hook expects ERC20 payment.\\n     * @dev Emits `AttestationMade`.\\n     * @param attestation See `Attestation`.\\n     * @param resolverFeesERC20Token ERC20 token address used for payment.\\n     * @param resolverFeesERC20Amount Amount of funds to send to the hook.\\n     * @param indexingKey Used by the frontend to aid indexing.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\\\"\\\"` or `0x`\\n     * otherwise.\\n     * @param extraData This is forwarded to the resolver directly.\\n     * @return attestationId The assigned ID of the attestation.\\n     */\\n    function attest(\\n        Attestation calldata attestation,\\n        IERC20 resolverFeesERC20Token,\\n        uint256 resolverFeesERC20Amount,\\n        string calldata indexingKey,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        returns (uint64 attestationId);\\n\\n    /**\\n     * @notice Timestamps an off-chain data ID.\\n     * @dev Emits `OffchainAttestationMade`.\\n     * @param offchainAttestationId The off-chain data ID.\\n     * @param delegateAttester An optional delegated attester that authorized the caller to attest on their behalf if\\n     * this is a delegated attestation. Use `address(0)` otherwise.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\\\"\\\"` or `0x`\\n     * otherwise. Use `\\\"\\\"` or `0x` otherwise.\\n     */\\n    function attestOffchain(\\n        string calldata offchainAttestationId,\\n        address delegateAttester,\\n        bytes calldata delegateSignature\\n    )\\n        external;\\n\\n    /**\\n     * @notice Revokes an existing revocable attestation.\\n     * @dev Emits `AttestationRevoked`. Must be called by the attester.\\n     * @param attestationId An existing attestation ID.\\n     * @param reason The revocation reason. This is only emitted as an event to save gas.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation.\\n     * @param extraData This is forwarded to the resolver directly.\\n     */\\n    function revoke(\\n        uint64 attestationId,\\n        string calldata reason,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external;\\n\\n    /**\\n     * @notice Revokes an existing revocable attestation where the schema hook expects ERC20 payment.\\n     * @dev Emits `AttestationRevoked`. Must be called by the attester.\\n     * @param attestationId An existing attestation ID.\\n     * @param reason The revocation reason. This is only emitted as an event to save gas.\\n     * @param resolverFeesETH Amount of funds to send to the hook.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation.\\n     * @param extraData This is forwarded to the resolver directly.\\n     */\\n    function revoke(\\n        uint64 attestationId,\\n        string calldata reason,\\n        uint256 resolverFeesETH,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        payable;\\n\\n    /**\\n     * @notice Revokes an existing revocable attestation where the schema hook expects ERC20 payment.\\n     * @dev Emits `AttestationRevoked`. Must be called by the attester.\\n     * @param attestationId An existing attestation ID.\\n     * @param reason The revocation reason. This is only emitted as an event to save gas.\\n     * @param resolverFeesERC20Token ERC20 token address used for payment.\\n     * @param resolverFeesERC20Amount Amount of funds to send to the hook.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation.\\n     * @param extraData This is forwarded to the resolver directly.\\n     */\\n    function revoke(\\n        uint64 attestationId,\\n        string calldata reason,\\n        IERC20 resolverFeesERC20Token,\\n        uint256 resolverFeesERC20Amount,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external;\\n\\n    /**\\n     * @notice Revokes an existing offchain attestation.\\n     * @dev Emits `OffchainAttestationRevoked`. Must be called by the attester.\\n     * @param offchainAttestationId An existing attestation ID.\\n     * @param reason The revocation reason. This is only emitted as an event to save gas.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation.\\n     */\\n    function revokeOffchain(\\n        string calldata offchainAttestationId,\\n        string calldata reason,\\n        bytes calldata delegateSignature\\n    )\\n        external;\\n\\n    /**\\n     * @notice Batch registers a Schema.\\n     */\\n    function registerBatch(\\n        Schema[] calldata schemas,\\n        bytes calldata delegateSignature\\n    )\\n        external\\n        returns (uint64[] calldata schemaIds);\\n\\n    /**\\n     * @notice Batch attests.\\n     */\\n    function attestBatch(\\n        Attestation[] calldata attestations,\\n        string[] calldata indexingKeys,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        returns (uint64[] calldata attestationIds);\\n\\n    /**\\n     * @notice Batch attests where the schema hook expects ETH payment.\\n     */\\n    function attestBatch(\\n        Attestation[] calldata attestations,\\n        uint256[] calldata resolverFeesETH,\\n        string[] calldata indexingKeys,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        payable\\n        returns (uint64[] calldata attestationIds);\\n\\n    /**\\n     * @notice Batch attests where the schema hook expects ERC20 payment.\\n     */\\n    function attestBatch(\\n        Attestation[] calldata attestations,\\n        IERC20[] calldata resolverFeesERC20Tokens,\\n        uint256[] calldata resolverFeesERC20Amount,\\n        string[] calldata indexingKeys,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        returns (uint64[] calldata attestationIds);\\n\\n    /**\\n     * @notice Batch timestamps off-chain data IDs.\\n     */\\n    function attestOffchainBatch(\\n        string[] calldata offchainAttestationIds,\\n        address delegateAttester,\\n        bytes calldata delegateSignature\\n    )\\n        external;\\n\\n    /**\\n     * @notice Batch revokes revocable on-chain attestations.\\n     */\\n    function revokeBatch(\\n        uint64[] calldata attestationIds,\\n        string[] calldata reasons,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external;\\n\\n    /**\\n     * @notice Batch revokes revocable on-chain attestations where the schema hook expects ETH payment.\\n     */\\n    function revokeBatch(\\n        uint64[] calldata attestationIds,\\n        string[] calldata reasons,\\n        uint256[] calldata resolverFeesETH,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        payable;\\n\\n    /**\\n     * @notice Batch revokes revocable on-chain attestations where the schema hook expects ERC20 payment.\\n     */\\n    function revokeBatch(\\n        uint64[] calldata attestationIds,\\n        string[] calldata reasons,\\n        IERC20[] calldata resolverFeesERC20Tokens,\\n        uint256[] calldata resolverFeesERC20Amount,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external;\\n\\n    /**\\n     * @notice Batch revokes off-chain attestations.\\n     */\\n    function revokeOffchainBatch(\\n        string[] calldata offchainAttestationIds,\\n        string[] calldata reasons,\\n        bytes calldata delegateSignature\\n    )\\n        external;\\n\\n    /**\\n     * @notice Returns the specified `Schema`.\\n     */\\n    function getSchema(uint64 schemaId) external view returns (Schema calldata);\\n\\n    /**\\n     * @notice Returns the specified `Attestation`.\\n     */\\n    function getAttestation(uint64 attestationId) external view returns (Attestation calldata);\\n\\n    /**\\n     * @notice Returns the specified `OffchainAttestation`.\\n     */\\n    function getOffchainAttestation(string calldata offchainAttestationId)\\n        external\\n        view\\n        returns (OffchainAttestation calldata);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated registration.\\n     */\\n    function getDelegatedRegisterHash(Schema memory schema) external pure returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated batch registration.\\n     */\\n    function getDelegatedRegisterBatchHash(Schema[] memory schemas) external pure returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated attestation.\\n     */\\n    function getDelegatedAttestHash(Attestation calldata attestation) external pure returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated batch attestation.\\n     */\\n    function getDelegatedAttestBatchHash(Attestation[] calldata attestations) external pure returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated offchain attestation.\\n     */\\n    function getDelegatedOffchainAttestHash(string calldata offchainAttestationId) external pure returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated batch offchain attestation.\\n     */\\n    function getDelegatedOffchainAttestBatchHash(string[] calldata offchainAttestationIds)\\n        external\\n        pure\\n        returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated revocation.\\n     */\\n    function getDelegatedRevokeHash(uint64 attestationId, string memory reason) external pure returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated batch revocation.\\n     */\\n    function getDelegatedRevokeBatchHash(\\n        uint64[] memory attestationIds,\\n        string[] memory reasons\\n    )\\n        external\\n        pure\\n        returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated offchain revocation.\\n     */\\n    function getDelegatedOffchainRevokeHash(\\n        string memory offchainAttestationId,\\n        string memory reason\\n    )\\n        external\\n        pure\\n        returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated batch offchain revocation.\\n     */\\n    function getDelegatedOffchainRevokeBatchHash(\\n        string[] memory offchainAttestationIds,\\n        string[] memory reasons\\n    )\\n        external\\n        pure\\n        returns (bytes32);\\n\\n    /**\\n     * @notice Returns the current schema counter. This is incremented for each `Schema` registered.\\n     */\\n    function schemaCounter() external view returns (uint64);\\n\\n    /**\\n     * @notice Returns the current on-chain attestation counter. This is incremented for each `Attestation` made.\\n     */\\n    function attestationCounter() external view returns (uint64);\\n}\\n\",\"keccak256\":\"0xd5ddbb7cc6af2ee4c11d6c5dac739fc6254d84e13167bc054eb4477244490756\",\"license\":\"MIT\"},\"@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/**\\n * @title SIGN Attestation Protocol Resolver Interface\\n * @author Jack Xu @ EthSign\\n */\\ninterface ISPHook {\\n    function didReceiveAttestation(\\n        address attester,\\n        uint64 schemaId,\\n        uint64 attestationId,\\n        bytes calldata extraData\\n    )\\n        external\\n        payable;\\n\\n    function didReceiveAttestation(\\n        address attester,\\n        uint64 schemaId,\\n        uint64 attestationId,\\n        IERC20 resolverFeeERC20Token,\\n        uint256 resolverFeeERC20Amount,\\n        bytes calldata extraData\\n    )\\n        external;\\n\\n    function didReceiveRevocation(\\n        address attester,\\n        uint64 schemaId,\\n        uint64 attestationId,\\n        bytes calldata extraData\\n    )\\n        external\\n        payable;\\n\\n    function didReceiveRevocation(\\n        address attester,\\n        uint64 schemaId,\\n        uint64 attestationId,\\n        IERC20 resolverFeeERC20Token,\\n        uint256 resolverFeeERC20Amount,\\n        bytes calldata extraData\\n    )\\n        external;\\n}\\n\",\"keccak256\":\"0xa42159d34c4b8fa91507efacad81c14106f466efdc63b81a7d566dc0d2e736f4\",\"license\":\"MIT\"},\"@ethsign/sign-protocol-evm/src/interfaces/IVersionable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title IVersionable\\n * @author Jack Xu @ EthSign\\n * @dev This interface helps contracts to keep track of their versioning for upgrade compatibility checks.\\n */\\ninterface IVersionable {\\n    function version() external pure returns (string memory);\\n}\\n\",\"keccak256\":\"0xbcf1955aa8423f4f77a46a988a7cd41a46ae92af42aa4546cfebdc2a92916129\",\"license\":\"MIT\"},\"@ethsign/sign-protocol-evm/src/models/Attestation.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { DataLocation } from \\\"./DataLocation.sol\\\";\\n\\n/**\\n * @title Attestation\\n * @author Jack Xu @ EthSign\\n * @notice This struct represents an on-chain attestation record. This record is not deleted after revocation.\\n *\\n * `schemaId`: The `Schema` that this Attestation is based on. It must exist.\\n * `linkedAttestationId`: Useful if the current Attestation references a previous Attestation. It can either be 0 or an\\n * existing attestation ID.\\n * `attestTimestamp`: When the attestation was made. This is automatically populated by `_attest(...)`.\\n * `revokeTimestamp`: When the attestation was revoked. This is automatically populated by `_revoke(...)`.\\n * `attester`: The attester. At this time, the attester must be the caller of `attest()`.\\n * `validUntil`: The expiration timestamp of the Attestation. Must respect `Schema.maxValidFor`. 0 indicates no\\n * expiration date.\\n * `dataLocation`: Where `Attestation.data` is stored. See `DataLocation.DataLocation`.\\n * `revoked`: If the Attestation has been revoked. It is possible to make a revoked Attestation.\\n * `recipients`: The intended ABI-encoded recipients of this Attestation. This is of type `bytes` to support non-EVM\\n * repicients.\\n * `data`: The raw data of the Attestation based on `Schema.schema`. There is no enforcement here, however. Recommended\\n * to use `abi.encode`.\\n */\\nstruct Attestation {\\n    uint64 schemaId;\\n    uint64 linkedAttestationId;\\n    uint64 attestTimestamp;\\n    uint64 revokeTimestamp;\\n    address attester;\\n    uint64 validUntil;\\n    DataLocation dataLocation;\\n    bool revoked;\\n    bytes[] recipients;\\n    bytes data;\\n}\\n\\n/**\\n * @title OffchainAttestation\\n * @author Jack Xu @ EthSign\\n * @notice This struct represents an off-chain attestation record. This record is not deleted after revocation.\\n *\\n * `attester`: The attester. At this time, the attester must be the caller of `attestOffchain()`.\\n * `timestamp`: The `block.timestamp` of the function call.\\n */\\nstruct OffchainAttestation {\\n    address attester;\\n    uint64 timestamp;\\n}\\n\",\"keccak256\":\"0x8e2a182141d06bfdcce1325d70e8dd307f7d6b3d7b6fafcedc2dbabeb99fa30f\",\"license\":\"MIT\"},\"@ethsign/sign-protocol-evm/src/models/DataLocation.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title DataLocation\\n * @author Jack Xu @ EthSign\\n * @notice This enum indicates where `Schema.data` and `Attestation.data` are stored.\\n */\\nenum DataLocation {\\n    ONCHAIN,\\n    ARWEAVE,\\n    IPFS,\\n    CUSTOM\\n}\\n\",\"keccak256\":\"0x14f64929317cae8ae822a0dd2c20315ac141f10fa255cd2b13a0a4962385ec10\",\"license\":\"MIT\"},\"@ethsign/sign-protocol-evm/src/models/Schema.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { ISPHook } from \\\"../interfaces/ISPHook.sol\\\";\\nimport { DataLocation } from \\\"./DataLocation.sol\\\";\\n\\n/**\\n * @title Schema\\n * @author Jack Xu @ EthSign\\n * @notice This struct represents an on-chain Schema that Attestations can conform to.\\n *\\n * `registrant`: The address that registered this schema.\\n * `revocable`: Whether Attestations that adopt this Schema can be revoked.\\n * `dataLocation`: Where `Schema.data` is stored. See `DataLocation.DataLocation`.\\n * `maxValidFor`: The maximum number of seconds that an Attestation can remain valid. 0 means Attestations can be valid\\n * forever. This is enforced through `Attestation.validUntil`.\\n * `hook`: The `ISPHook` that is called at the end of every function. 0 means there is no hook set. See\\n * `ISPHook`.\\n * `timestamp`: When the schema was registered. This is automatically populated by `_register(...)`.\\n * `data`: The raw schema that `Attestation.data` should follow. Since there is no way to enforce this, it is a `string`\\n * for easy readability.\\n */\\nstruct Schema {\\n    address registrant;\\n    bool revocable;\\n    DataLocation dataLocation;\\n    uint64 maxValidFor;\\n    ISPHook hook;\\n    uint64 timestamp;\\n    string data;\\n}\\n\",\"keccak256\":\"0xcf3bd964790fdc7f72bacc86380b307e58bf15fa5f7332852d4969fe0db58216\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport { ISP } from \\\"@ethsign/sign-protocol-evm/src/interfaces/ISP.sol\\\";\\nimport { Attestation } from \\\"@ethsign/sign-protocol-evm/src/models/Attestation.sol\\\";\\nimport { DataLocation } from \\\"@ethsign/sign-protocol-evm/src/models/DataLocation.sol\\\";\\n\\ncontract EducationalCredential is Ownable {\\n    ISP public spInstance;\\n    uint64 public credentialSchemaId;\\n\\n    event CredentialIssued(address indexed institution, address indexed recipient, string course, uint256 issueDate);\\n\\n    constructor() Ownable(_msgSender()) {}\\n\\n    function setSPInstance(address instance) external onlyOwner {\\n        spInstance = ISP(instance);\\n    }\\n\\n    function setCredentialSchemaID(uint64 schemaId) external onlyOwner {\\n        credentialSchemaId = schemaId;\\n    }\\n\\n    function issueCredential(\\n        address recipient,\\n        string memory course,\\n        uint256 issueDate\\n    ) external returns (uint64) {\\n        require(credentialSchemaId != 0, \\\"Credential schema not set\\\");\\n\\n        // Encode the credential data\\n        bytes memory data = abi.encode(course, issueDate);\\n\\n        // Create the attestation\\n        bytes[] memory recipients = new bytes[](1);\\n        recipients[0] = abi.encode(recipient);\\n\\n        Attestation memory attestation = Attestation({\\n            schemaId: credentialSchemaId,\\n            linkedAttestationId: 0,\\n            attestTimestamp: 0,\\n            revokeTimestamp: 0,\\n            attester: _msgSender(),\\n            validUntil: 0,\\n            dataLocation: DataLocation.ONCHAIN,\\n            revoked: false,\\n            recipients: recipients,\\n            data: data\\n        });\\n\\n        // Issue the attestation\\n        uint64 attestationId = spInstance.attest(attestation, \\\"\\\", \\\"\\\", \\\"\\\");\\n\\n        emit CredentialIssued(_msgSender(), recipient, course, issueDate);\\n\\n        return attestationId;\\n    }\\n\\n    function verifyCredential(address wallet) external view returns (bool, string memory, uint256) {\\n        // Variables to store the most recent valid attestation\\n        bool found = false;\\n        uint64 mostRecentId = 0;\\n        uint256 mostRecentTimestamp = 0;\\n\\n        // Iterate through attestations to find the most recent one for the given wallet\\n        for (uint64 i = 1; ; i++) {\\n            try spInstance.getAttestation(i) returns (Attestation memory attestation) {\\n                // Check if the attestation matches our criteria\\n                if (attestation.schemaId == credentialSchemaId && \\n                    !attestation.revoked &&\\n                    attestation.recipients.length > 0) {\\n                    \\n                    address recipient = abi.decode(attestation.recipients[0], (address));\\n                    \\n                    if (recipient == wallet && attestation.attestTimestamp > mostRecentTimestamp) {\\n                        found = true;\\n                        mostRecentId = i;\\n                        mostRecentTimestamp = attestation.attestTimestamp;\\n                    }\\n                }\\n            } catch {\\n                // If we've reached an attestation that doesn't exist, break the loop\\n                break;\\n            }\\n        }\\n\\n        if (!found) {\\n            return (false, \\\"\\\", 0);\\n        }\\n\\n        // Get the most recent valid attestation\\n        Attestation memory mostRecentAttestation = spInstance.getAttestation(mostRecentId);\\n        \\n        (string memory course, uint256 issueDate) = abi.decode(mostRecentAttestation.data, (string, uint256));\\n\\n        return (true, course, issueDate);\\n    }\\n\\n    function schemaHook(\\n        uint64 schemaId,\\n        bytes calldata data,\\n        bytes[] calldata recipients\\n    ) external view returns (bool) {\\n        require(schemaId == credentialSchemaId, \\\"Invalid schema ID\\\");\\n        require(recipients.length == 1, \\\"Only one recipient allowed\\\");\\n\\n        // Decode the credential data\\n        (string memory course, uint256 issueDate) = abi.decode(data, (string, uint256));\\n\\n        // Add your custom validation logic here\\n        // For example:\\n        require(bytes(course).length > 0, \\\"Course name cannot be empty\\\");\\n        require(issueDate <= block.timestamp, \\\"Issue date cannot be in the future\\\");\\n\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x5ba09e68cf1f51322939479e8fa7004709b6e39364c79de09f497c68e60ae62b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":639,"contract":"contracts/FundMe.sol:EducationalCredential","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":901,"contract":"contracts/FundMe.sol:EducationalCredential","label":"spInstance","offset":0,"slot":"1","type":"t_contract(ISP)495"},{"astId":903,"contract":"contracts/FundMe.sol:EducationalCredential","label":"credentialSchemaId","offset":20,"slot":"1","type":"t_uint64"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(ISP)495":{"encoding":"inplace","label":"contract ISP","numberOfBytes":"20"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}