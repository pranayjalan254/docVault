{"id":"9d2533c47676bd1b9ab89a89c143d1a8","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@ethsign/sign-protocol-evm/src/interfaces/ISP.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport { IVersionable } from \"./IVersionable.sol\";\nimport { Schema } from \"../models/Schema.sol\";\nimport { Attestation, OffchainAttestation } from \"../models/Attestation.sol\";\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @title Sign Protocol Interface\n * @author Jack Xu @ EthSign\n */\ninterface ISP is IVersionable {\n    event SchemaRegistered(uint64 schemaId);\n    event AttestationMade(uint64 attestationId, string indexingKey);\n    event AttestationRevoked(uint64 attestationId, string reason);\n    event OffchainAttestationMade(string attestationId);\n    event OffchainAttestationRevoked(string attestationId, string reason);\n\n    /**\n     * @dev 0x9e87fac8\n     */\n    error Paused();\n    /**\n     * @dev 0x38f8c6c4\n     */\n    error SchemaNonexistent();\n    /**\n     * @dev 0x71984561\n     */\n    error SchemaWrongRegistrant();\n    /**\n     * @dev 0x8ac42f49\n     */\n    error AttestationIrrevocable();\n    /**\n     * @dev 0x54681a13\n     */\n    error AttestationNonexistent();\n    /**\n     * @dev 0xa65e02ed\n     */\n    error AttestationInvalidDuration();\n    /**\n     * @dev 0xd8c3da86\n     */\n    error AttestationAlreadyRevoked();\n    /**\n     * @dev 0xa9ad2007\n     */\n    error AttestationWrongAttester();\n    /**\n     * @dev 0xc83e3cdf\n     */\n    error OffchainAttestationExists();\n    /**\n     * @dev 0xa006519a\n     */\n    error OffchainAttestationNonexistent();\n    /**\n     * @dev 0xa0671d20\n     */\n    error OffchainAttestationAlreadyRevoked();\n    /**\n     * @dev 0xfdf4e6f9\n     */\n    error InvalidDelegateSignature();\n    /**\n     * @dev 0x5c34b9cc\n     */\n    error LegacySPRequired();\n\n    /**\n     * @notice Registers a Schema.\n     * @dev Emits `SchemaRegistered`.\n     * @param schema See `Schema`.\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\"\"` or `0x`\n     * otherwise.\n     * @return schemaId The assigned ID of the registered schema.\n     */\n    function register(Schema memory schema, bytes calldata delegateSignature) external returns (uint64 schemaId);\n\n    /**\n     * @notice Makes an attestation.\n     * @dev Emits `AttestationMade`.\n     * @param attestation See `Attestation`.\n     * @param indexingKey Used by the frontend to aid indexing.\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\"\"` or `0x`\n     * otherwise.\n     * @param extraData This is forwarded to the resolver directly.\n     * @return attestationId The assigned ID of the attestation.\n     */\n    function attest(\n        Attestation calldata attestation,\n        string calldata indexingKey,\n        bytes calldata delegateSignature,\n        bytes calldata extraData\n    )\n        external\n        returns (uint64 attestationId);\n\n    /**\n     * @notice Makes an attestation where the schema hook expects ETH payment.\n     * @dev Emits `AttestationMade`.\n     * @param attestation See `Attestation`.\n     * @param resolverFeesETH Amount of funds to send to the hook.\n     * @param indexingKey Used by the frontend to aid indexing.\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\"\"` or `0x`\n     * otherwise.\n     * @param extraData This is forwarded to the resolver directly.\n     * @return attestationId The assigned ID of the attestation.\n     */\n    function attest(\n        Attestation calldata attestation,\n        uint256 resolverFeesETH,\n        string calldata indexingKey,\n        bytes calldata delegateSignature,\n        bytes calldata extraData\n    )\n        external\n        payable\n        returns (uint64 attestationId);\n\n    /**\n     * @notice Makes an attestation where the schema hook expects ERC20 payment.\n     * @dev Emits `AttestationMade`.\n     * @param attestation See `Attestation`.\n     * @param resolverFeesERC20Token ERC20 token address used for payment.\n     * @param resolverFeesERC20Amount Amount of funds to send to the hook.\n     * @param indexingKey Used by the frontend to aid indexing.\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\"\"` or `0x`\n     * otherwise.\n     * @param extraData This is forwarded to the resolver directly.\n     * @return attestationId The assigned ID of the attestation.\n     */\n    function attest(\n        Attestation calldata attestation,\n        IERC20 resolverFeesERC20Token,\n        uint256 resolverFeesERC20Amount,\n        string calldata indexingKey,\n        bytes calldata delegateSignature,\n        bytes calldata extraData\n    )\n        external\n        returns (uint64 attestationId);\n\n    /**\n     * @notice Timestamps an off-chain data ID.\n     * @dev Emits `OffchainAttestationMade`.\n     * @param offchainAttestationId The off-chain data ID.\n     * @param delegateAttester An optional delegated attester that authorized the caller to attest on their behalf if\n     * this is a delegated attestation. Use `address(0)` otherwise.\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\"\"` or `0x`\n     * otherwise. Use `\"\"` or `0x` otherwise.\n     */\n    function attestOffchain(\n        string calldata offchainAttestationId,\n        address delegateAttester,\n        bytes calldata delegateSignature\n    )\n        external;\n\n    /**\n     * @notice Revokes an existing revocable attestation.\n     * @dev Emits `AttestationRevoked`. Must be called by the attester.\n     * @param attestationId An existing attestation ID.\n     * @param reason The revocation reason. This is only emitted as an event to save gas.\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation.\n     * @param extraData This is forwarded to the resolver directly.\n     */\n    function revoke(\n        uint64 attestationId,\n        string calldata reason,\n        bytes calldata delegateSignature,\n        bytes calldata extraData\n    )\n        external;\n\n    /**\n     * @notice Revokes an existing revocable attestation where the schema hook expects ERC20 payment.\n     * @dev Emits `AttestationRevoked`. Must be called by the attester.\n     * @param attestationId An existing attestation ID.\n     * @param reason The revocation reason. This is only emitted as an event to save gas.\n     * @param resolverFeesETH Amount of funds to send to the hook.\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation.\n     * @param extraData This is forwarded to the resolver directly.\n     */\n    function revoke(\n        uint64 attestationId,\n        string calldata reason,\n        uint256 resolverFeesETH,\n        bytes calldata delegateSignature,\n        bytes calldata extraData\n    )\n        external\n        payable;\n\n    /**\n     * @notice Revokes an existing revocable attestation where the schema hook expects ERC20 payment.\n     * @dev Emits `AttestationRevoked`. Must be called by the attester.\n     * @param attestationId An existing attestation ID.\n     * @param reason The revocation reason. This is only emitted as an event to save gas.\n     * @param resolverFeesERC20Token ERC20 token address used for payment.\n     * @param resolverFeesERC20Amount Amount of funds to send to the hook.\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation.\n     * @param extraData This is forwarded to the resolver directly.\n     */\n    function revoke(\n        uint64 attestationId,\n        string calldata reason,\n        IERC20 resolverFeesERC20Token,\n        uint256 resolverFeesERC20Amount,\n        bytes calldata delegateSignature,\n        bytes calldata extraData\n    )\n        external;\n\n    /**\n     * @notice Revokes an existing offchain attestation.\n     * @dev Emits `OffchainAttestationRevoked`. Must be called by the attester.\n     * @param offchainAttestationId An existing attestation ID.\n     * @param reason The revocation reason. This is only emitted as an event to save gas.\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation.\n     */\n    function revokeOffchain(\n        string calldata offchainAttestationId,\n        string calldata reason,\n        bytes calldata delegateSignature\n    )\n        external;\n\n    /**\n     * @notice Batch registers a Schema.\n     */\n    function registerBatch(\n        Schema[] calldata schemas,\n        bytes calldata delegateSignature\n    )\n        external\n        returns (uint64[] calldata schemaIds);\n\n    /**\n     * @notice Batch attests.\n     */\n    function attestBatch(\n        Attestation[] calldata attestations,\n        string[] calldata indexingKeys,\n        bytes calldata delegateSignature,\n        bytes calldata extraData\n    )\n        external\n        returns (uint64[] calldata attestationIds);\n\n    /**\n     * @notice Batch attests where the schema hook expects ETH payment.\n     */\n    function attestBatch(\n        Attestation[] calldata attestations,\n        uint256[] calldata resolverFeesETH,\n        string[] calldata indexingKeys,\n        bytes calldata delegateSignature,\n        bytes calldata extraData\n    )\n        external\n        payable\n        returns (uint64[] calldata attestationIds);\n\n    /**\n     * @notice Batch attests where the schema hook expects ERC20 payment.\n     */\n    function attestBatch(\n        Attestation[] calldata attestations,\n        IERC20[] calldata resolverFeesERC20Tokens,\n        uint256[] calldata resolverFeesERC20Amount,\n        string[] calldata indexingKeys,\n        bytes calldata delegateSignature,\n        bytes calldata extraData\n    )\n        external\n        returns (uint64[] calldata attestationIds);\n\n    /**\n     * @notice Batch timestamps off-chain data IDs.\n     */\n    function attestOffchainBatch(\n        string[] calldata offchainAttestationIds,\n        address delegateAttester,\n        bytes calldata delegateSignature\n    )\n        external;\n\n    /**\n     * @notice Batch revokes revocable on-chain attestations.\n     */\n    function revokeBatch(\n        uint64[] calldata attestationIds,\n        string[] calldata reasons,\n        bytes calldata delegateSignature,\n        bytes calldata extraData\n    )\n        external;\n\n    /**\n     * @notice Batch revokes revocable on-chain attestations where the schema hook expects ETH payment.\n     */\n    function revokeBatch(\n        uint64[] calldata attestationIds,\n        string[] calldata reasons,\n        uint256[] calldata resolverFeesETH,\n        bytes calldata delegateSignature,\n        bytes calldata extraData\n    )\n        external\n        payable;\n\n    /**\n     * @notice Batch revokes revocable on-chain attestations where the schema hook expects ERC20 payment.\n     */\n    function revokeBatch(\n        uint64[] calldata attestationIds,\n        string[] calldata reasons,\n        IERC20[] calldata resolverFeesERC20Tokens,\n        uint256[] calldata resolverFeesERC20Amount,\n        bytes calldata delegateSignature,\n        bytes calldata extraData\n    )\n        external;\n\n    /**\n     * @notice Batch revokes off-chain attestations.\n     */\n    function revokeOffchainBatch(\n        string[] calldata offchainAttestationIds,\n        string[] calldata reasons,\n        bytes calldata delegateSignature\n    )\n        external;\n\n    /**\n     * @notice Returns the specified `Schema`.\n     */\n    function getSchema(uint64 schemaId) external view returns (Schema calldata);\n\n    /**\n     * @notice Returns the specified `Attestation`.\n     */\n    function getAttestation(uint64 attestationId) external view returns (Attestation calldata);\n\n    /**\n     * @notice Returns the specified `OffchainAttestation`.\n     */\n    function getOffchainAttestation(string calldata offchainAttestationId)\n        external\n        view\n        returns (OffchainAttestation calldata);\n\n    /**\n     * @notice Returns the hash that will be used to authorize a delegated registration.\n     */\n    function getDelegatedRegisterHash(Schema memory schema) external pure returns (bytes32);\n\n    /**\n     * @notice Returns the hash that will be used to authorize a delegated batch registration.\n     */\n    function getDelegatedRegisterBatchHash(Schema[] memory schemas) external pure returns (bytes32);\n\n    /**\n     * @notice Returns the hash that will be used to authorize a delegated attestation.\n     */\n    function getDelegatedAttestHash(Attestation calldata attestation) external pure returns (bytes32);\n\n    /**\n     * @notice Returns the hash that will be used to authorize a delegated batch attestation.\n     */\n    function getDelegatedAttestBatchHash(Attestation[] calldata attestations) external pure returns (bytes32);\n\n    /**\n     * @notice Returns the hash that will be used to authorize a delegated offchain attestation.\n     */\n    function getDelegatedOffchainAttestHash(string calldata offchainAttestationId) external pure returns (bytes32);\n\n    /**\n     * @notice Returns the hash that will be used to authorize a delegated batch offchain attestation.\n     */\n    function getDelegatedOffchainAttestBatchHash(string[] calldata offchainAttestationIds)\n        external\n        pure\n        returns (bytes32);\n\n    /**\n     * @notice Returns the hash that will be used to authorize a delegated revocation.\n     */\n    function getDelegatedRevokeHash(uint64 attestationId, string memory reason) external pure returns (bytes32);\n\n    /**\n     * @notice Returns the hash that will be used to authorize a delegated batch revocation.\n     */\n    function getDelegatedRevokeBatchHash(\n        uint64[] memory attestationIds,\n        string[] memory reasons\n    )\n        external\n        pure\n        returns (bytes32);\n\n    /**\n     * @notice Returns the hash that will be used to authorize a delegated offchain revocation.\n     */\n    function getDelegatedOffchainRevokeHash(\n        string memory offchainAttestationId,\n        string memory reason\n    )\n        external\n        pure\n        returns (bytes32);\n\n    /**\n     * @notice Returns the hash that will be used to authorize a delegated batch offchain revocation.\n     */\n    function getDelegatedOffchainRevokeBatchHash(\n        string[] memory offchainAttestationIds,\n        string[] memory reasons\n    )\n        external\n        pure\n        returns (bytes32);\n\n    /**\n     * @notice Returns the current schema counter. This is incremented for each `Schema` registered.\n     */\n    function schemaCounter() external view returns (uint64);\n\n    /**\n     * @notice Returns the current on-chain attestation counter. This is incremented for each `Attestation` made.\n     */\n    function attestationCounter() external view returns (uint64);\n}\n"},"@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @title SIGN Attestation Protocol Resolver Interface\n * @author Jack Xu @ EthSign\n */\ninterface ISPHook {\n    function didReceiveAttestation(\n        address attester,\n        uint64 schemaId,\n        uint64 attestationId,\n        bytes calldata extraData\n    )\n        external\n        payable;\n\n    function didReceiveAttestation(\n        address attester,\n        uint64 schemaId,\n        uint64 attestationId,\n        IERC20 resolverFeeERC20Token,\n        uint256 resolverFeeERC20Amount,\n        bytes calldata extraData\n    )\n        external;\n\n    function didReceiveRevocation(\n        address attester,\n        uint64 schemaId,\n        uint64 attestationId,\n        bytes calldata extraData\n    )\n        external\n        payable;\n\n    function didReceiveRevocation(\n        address attester,\n        uint64 schemaId,\n        uint64 attestationId,\n        IERC20 resolverFeeERC20Token,\n        uint256 resolverFeeERC20Amount,\n        bytes calldata extraData\n    )\n        external;\n}\n"},"@ethsign/sign-protocol-evm/src/interfaces/IVersionable.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/**\n * @title IVersionable\n * @author Jack Xu @ EthSign\n * @dev This interface helps contracts to keep track of their versioning for upgrade compatibility checks.\n */\ninterface IVersionable {\n    function version() external pure returns (string memory);\n}\n"},"@ethsign/sign-protocol-evm/src/models/Attestation.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport { DataLocation } from \"./DataLocation.sol\";\n\n/**\n * @title Attestation\n * @author Jack Xu @ EthSign\n * @notice This struct represents an on-chain attestation record. This record is not deleted after revocation.\n *\n * `schemaId`: The `Schema` that this Attestation is based on. It must exist.\n * `linkedAttestationId`: Useful if the current Attestation references a previous Attestation. It can either be 0 or an\n * existing attestation ID.\n * `attestTimestamp`: When the attestation was made. This is automatically populated by `_attest(...)`.\n * `revokeTimestamp`: When the attestation was revoked. This is automatically populated by `_revoke(...)`.\n * `attester`: The attester. At this time, the attester must be the caller of `attest()`.\n * `validUntil`: The expiration timestamp of the Attestation. Must respect `Schema.maxValidFor`. 0 indicates no\n * expiration date.\n * `dataLocation`: Where `Attestation.data` is stored. See `DataLocation.DataLocation`.\n * `revoked`: If the Attestation has been revoked. It is possible to make a revoked Attestation.\n * `recipients`: The intended ABI-encoded recipients of this Attestation. This is of type `bytes` to support non-EVM\n * repicients.\n * `data`: The raw data of the Attestation based on `Schema.schema`. There is no enforcement here, however. Recommended\n * to use `abi.encode`.\n */\nstruct Attestation {\n    uint64 schemaId;\n    uint64 linkedAttestationId;\n    uint64 attestTimestamp;\n    uint64 revokeTimestamp;\n    address attester;\n    uint64 validUntil;\n    DataLocation dataLocation;\n    bool revoked;\n    bytes[] recipients;\n    bytes data;\n}\n\n/**\n * @title OffchainAttestation\n * @author Jack Xu @ EthSign\n * @notice This struct represents an off-chain attestation record. This record is not deleted after revocation.\n *\n * `attester`: The attester. At this time, the attester must be the caller of `attestOffchain()`.\n * `timestamp`: The `block.timestamp` of the function call.\n */\nstruct OffchainAttestation {\n    address attester;\n    uint64 timestamp;\n}\n"},"@ethsign/sign-protocol-evm/src/models/DataLocation.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/**\n * @title DataLocation\n * @author Jack Xu @ EthSign\n * @notice This enum indicates where `Schema.data` and `Attestation.data` are stored.\n */\nenum DataLocation {\n    ONCHAIN,\n    ARWEAVE,\n    IPFS,\n    CUSTOM\n}\n"},"@ethsign/sign-protocol-evm/src/models/Schema.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport { ISPHook } from \"../interfaces/ISPHook.sol\";\nimport { DataLocation } from \"./DataLocation.sol\";\n\n/**\n * @title Schema\n * @author Jack Xu @ EthSign\n * @notice This struct represents an on-chain Schema that Attestations can conform to.\n *\n * `registrant`: The address that registered this schema.\n * `revocable`: Whether Attestations that adopt this Schema can be revoked.\n * `dataLocation`: Where `Schema.data` is stored. See `DataLocation.DataLocation`.\n * `maxValidFor`: The maximum number of seconds that an Attestation can remain valid. 0 means Attestations can be valid\n * forever. This is enforced through `Attestation.validUntil`.\n * `hook`: The `ISPHook` that is called at the end of every function. 0 means there is no hook set. See\n * `ISPHook`.\n * `timestamp`: When the schema was registered. This is automatically populated by `_register(...)`.\n * `data`: The raw schema that `Attestation.data` should follow. Since there is no way to enforce this, it is a `string`\n * for easy readability.\n */\nstruct Schema {\n    address registrant;\n    bool revocable;\n    DataLocation dataLocation;\n    uint64 maxValidFor;\n    ISPHook hook;\n    uint64 timestamp;\n    string data;\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"contracts/EducationalCredential.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\nimport { Ownable } from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport { ISP } from \"@ethsign/sign-protocol-evm/src/interfaces/ISP.sol\";\n\ncontract EducationalCredential is Ownable {\n    struct Credential {\n        string course;\n        uint256 issueDate;\n    }\n\n    ISP public spInstance;\n    uint64 public constant CREDENTIAL_SCHEMA_ID = 1; // Set your schema ID here\n\n    mapping(address => Credential[]) private credentials;\n\n    event CredentialIssued(address indexed institution, address indexed recipient, string course, uint256 issueDate);\n\n    constructor(address spInstanceAddress) Ownable(_msgSender()) {\n        require(spInstanceAddress != address(0), \"Invalid SP instance address\");\n        spInstance = ISP(spInstanceAddress);\n    }\n\n    function setSPInstance(address instance) external onlyOwner {\n        require(instance != address(0), \"Invalid SP instance address\");\n        spInstance = ISP(instance);\n    }\n\n    function issueCredential(\n        address recipient,\n        string memory course,\n        uint256 issueDate\n    ) external onlyOwner {\n        require(recipient != address(0), \"Invalid recipient address\");\n        require(bytes(course).length > 0, \"Course name cannot be empty\");\n        require(issueDate <= block.timestamp, \"Issue date cannot be in the future\");\n\n        // Validate with schemaHook\n        bool isValid = schemaHook(CREDENTIAL_SCHEMA_ID, abi.encode(course, issueDate), recipient);\n        require(isValid, \"Data validation failed\");\n\n        credentials[recipient].push(Credential(course, issueDate));\n        emit CredentialIssued(_msgSender(), recipient, course, issueDate);\n    }\n\n    function getCredentials(address wallet) external view returns (string[] memory courses, uint256[] memory issueDates) {\n        Credential[] memory userCredentials = credentials[wallet];\n        uint256 credentialCount = userCredentials.length;\n\n        courses = new string[](credentialCount);\n        issueDates = new uint256[](credentialCount);\n\n        for (uint256 i = 0; i < credentialCount; i++) {\n            courses[i] = userCredentials[i].course;\n            issueDates[i] = userCredentials[i].issueDate;\n        }\n\n        return (courses, issueDates);\n    }\n\n    function getLatestCredential(address wallet) external view returns (bool found, string memory course, uint256 issueDate) {\n        Credential[] memory userCredentials = credentials[wallet];\n        \n        if (userCredentials.length == 0) {\n            return (false, \"\", 0);\n        }\n\n        Credential memory latestCredential = userCredentials[userCredentials.length - 1];\n        return (true, latestCredential.course, latestCredential.issueDate);\n    }\n\n    function schemaHook(\n        uint64 schemaId,\n        bytes memory data,\n        address recipient\n    ) internal view returns (bool) {\n        require(schemaId == CREDENTIAL_SCHEMA_ID, \"Invalid schema ID\");\n        require(recipient != address(0), \"Invalid recipient address\");\n\n        (string memory course, uint256 issueDate) = abi.decode(data, (string, uint256));\n\n        require(bytes(course).length > 0, \"Course name cannot be empty\");\n        require(issueDate <= block.timestamp, \"Issue date cannot be in the future\");\n\n        return true;\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout","devdoc","userdoc","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@ethsign/sign-protocol-evm/src/interfaces/ISP.sol":{"ast":{"absolutePath":"@ethsign/sign-protocol-evm/src/interfaces/ISP.sol","exportedSymbols":{"Attestation":[592],"IERC20":[856],"ISP":[495],"IVersionable":[564],"OffchainAttestation":[598],"Schema":[630]},"id":496,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:0"},{"absolutePath":"@ethsign/sign-protocol-evm/src/interfaces/IVersionable.sol","file":"./IVersionable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":496,"sourceUnit":565,"src":"58:50:0","symbolAliases":[{"foreign":{"id":2,"name":"IVersionable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"67:12:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@ethsign/sign-protocol-evm/src/models/Schema.sol","file":"../models/Schema.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":496,"sourceUnit":631,"src":"109:46:0","symbolAliases":[{"foreign":{"id":4,"name":"Schema","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"118:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@ethsign/sign-protocol-evm/src/models/Attestation.sol","file":"../models/Attestation.sol","id":8,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":496,"sourceUnit":599,"src":"156:77:0","symbolAliases":[{"foreign":{"id":6,"name":"Attestation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"165:11:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":7,"name":"OffchainAttestation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"178:19:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":10,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":496,"sourceUnit":857,"src":"234:72:0","symbolAliases":[{"foreign":{"id":9,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"243:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":12,"name":"IVersionable","nameLocations":["396:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":564,"src":"396:12:0"},"id":13,"nodeType":"InheritanceSpecifier","src":"396:12:0"}],"canonicalName":"ISP","contractDependencies":[],"contractKind":"interface","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"308:70:0","text":" @title Sign Protocol Interface\n @author Jack Xu @ EthSign"},"fullyImplemented":false,"id":495,"linearizedBaseContracts":[495,564],"name":"ISP","nameLocation":"389:3:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"d0f9818d35b9c7d941f89e81a08a7f4761384ae32aeaf4a913b94319a321e7ff","id":17,"name":"SchemaRegistered","nameLocation":"421:16:0","nodeType":"EventDefinition","parameters":{"id":16,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15,"indexed":false,"mutability":"mutable","name":"schemaId","nameLocation":"445:8:0","nodeType":"VariableDeclaration","scope":17,"src":"438:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14,"name":"uint64","nodeType":"ElementaryTypeName","src":"438:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"437:17:0"},"src":"415:40:0"},{"anonymous":false,"eventSelector":"38b331f00373c8b0f9af5a4273ca1b91e894fec999bfa4ec787e8c90a5c8b05c","id":23,"name":"AttestationMade","nameLocation":"466:15:0","nodeType":"EventDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"indexed":false,"mutability":"mutable","name":"attestationId","nameLocation":"489:13:0","nodeType":"VariableDeclaration","scope":23,"src":"482:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":18,"name":"uint64","nodeType":"ElementaryTypeName","src":"482:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":21,"indexed":false,"mutability":"mutable","name":"indexingKey","nameLocation":"511:11:0","nodeType":"VariableDeclaration","scope":23,"src":"504:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":20,"name":"string","nodeType":"ElementaryTypeName","src":"504:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"481:42:0"},"src":"460:64:0"},{"anonymous":false,"eventSelector":"294c02ce66be799794a712d72e9926c40a3cb2738a51571523ffe23be2c6fb01","id":29,"name":"AttestationRevoked","nameLocation":"535:18:0","nodeType":"EventDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25,"indexed":false,"mutability":"mutable","name":"attestationId","nameLocation":"561:13:0","nodeType":"VariableDeclaration","scope":29,"src":"554:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":24,"name":"uint64","nodeType":"ElementaryTypeName","src":"554:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":27,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"583:6:0","nodeType":"VariableDeclaration","scope":29,"src":"576:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":26,"name":"string","nodeType":"ElementaryTypeName","src":"576:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"553:37:0"},"src":"529:62:0"},{"anonymous":false,"eventSelector":"6f0bf119c2fc55752051c1cfde5d145fdd499c7f748df7920409c72319ff6027","id":33,"name":"OffchainAttestationMade","nameLocation":"602:23:0","nodeType":"EventDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31,"indexed":false,"mutability":"mutable","name":"attestationId","nameLocation":"633:13:0","nodeType":"VariableDeclaration","scope":33,"src":"626:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":30,"name":"string","nodeType":"ElementaryTypeName","src":"626:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"625:22:0"},"src":"596:52:0"},{"anonymous":false,"eventSelector":"8cdef7ac4262df432ef960b4d902483c56118d54647a70746d99abc05cb970ba","id":39,"name":"OffchainAttestationRevoked","nameLocation":"659:26:0","nodeType":"EventDefinition","parameters":{"id":38,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"indexed":false,"mutability":"mutable","name":"attestationId","nameLocation":"693:13:0","nodeType":"VariableDeclaration","scope":39,"src":"686:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":34,"name":"string","nodeType":"ElementaryTypeName","src":"686:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"715:6:0","nodeType":"VariableDeclaration","scope":39,"src":"708:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":36,"name":"string","nodeType":"ElementaryTypeName","src":"708:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"685:37:0"},"src":"653:70:0"},{"documentation":{"id":40,"nodeType":"StructuredDocumentation","src":"729:34:0","text":" @dev 0x9e87fac8"},"errorSelector":"9e87fac8","id":42,"name":"Paused","nameLocation":"774:6:0","nodeType":"ErrorDefinition","parameters":{"id":41,"nodeType":"ParameterList","parameters":[],"src":"780:2:0"},"src":"768:15:0"},{"documentation":{"id":43,"nodeType":"StructuredDocumentation","src":"788:34:0","text":" @dev 0x38f8c6c4"},"errorSelector":"a3ad7828","id":45,"name":"SchemaNonexistent","nameLocation":"833:17:0","nodeType":"ErrorDefinition","parameters":{"id":44,"nodeType":"ParameterList","parameters":[],"src":"850:2:0"},"src":"827:26:0"},{"documentation":{"id":46,"nodeType":"StructuredDocumentation","src":"858:34:0","text":" @dev 0x71984561"},"errorSelector":"71984561","id":48,"name":"SchemaWrongRegistrant","nameLocation":"903:21:0","nodeType":"ErrorDefinition","parameters":{"id":47,"nodeType":"ParameterList","parameters":[],"src":"924:2:0"},"src":"897:30:0"},{"documentation":{"id":49,"nodeType":"StructuredDocumentation","src":"932:34:0","text":" @dev 0x8ac42f49"},"errorSelector":"d1994a9a","id":51,"name":"AttestationIrrevocable","nameLocation":"977:22:0","nodeType":"ErrorDefinition","parameters":{"id":50,"nodeType":"ParameterList","parameters":[],"src":"999:2:0"},"src":"971:31:0"},{"documentation":{"id":52,"nodeType":"StructuredDocumentation","src":"1007:34:0","text":" @dev 0x54681a13"},"errorSelector":"ccc2eda0","id":54,"name":"AttestationNonexistent","nameLocation":"1052:22:0","nodeType":"ErrorDefinition","parameters":{"id":53,"nodeType":"ParameterList","parameters":[],"src":"1074:2:0"},"src":"1046:31:0"},{"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1082:34:0","text":" @dev 0xa65e02ed"},"errorSelector":"2a9e0beb","id":57,"name":"AttestationInvalidDuration","nameLocation":"1127:26:0","nodeType":"ErrorDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1153:2:0"},"src":"1121:35:0"},{"documentation":{"id":58,"nodeType":"StructuredDocumentation","src":"1161:34:0","text":" @dev 0xd8c3da86"},"errorSelector":"10a0e42f","id":60,"name":"AttestationAlreadyRevoked","nameLocation":"1206:25:0","nodeType":"ErrorDefinition","parameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1231:2:0"},"src":"1200:34:0"},{"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"1239:34:0","text":" @dev 0xa9ad2007"},"errorSelector":"688731b1","id":63,"name":"AttestationWrongAttester","nameLocation":"1284:24:0","nodeType":"ErrorDefinition","parameters":{"id":62,"nodeType":"ParameterList","parameters":[],"src":"1308:2:0"},"src":"1278:33:0"},{"documentation":{"id":64,"nodeType":"StructuredDocumentation","src":"1316:34:0","text":" @dev 0xc83e3cdf"},"errorSelector":"ee5ae86a","id":66,"name":"OffchainAttestationExists","nameLocation":"1361:25:0","nodeType":"ErrorDefinition","parameters":{"id":65,"nodeType":"ParameterList","parameters":[],"src":"1386:2:0"},"src":"1355:34:0"},{"documentation":{"id":67,"nodeType":"StructuredDocumentation","src":"1394:34:0","text":" @dev 0xa006519a"},"errorSelector":"a1a740f6","id":69,"name":"OffchainAttestationNonexistent","nameLocation":"1439:30:0","nodeType":"ErrorDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[],"src":"1469:2:0"},"src":"1433:39:0"},{"documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"1477:34:0","text":" @dev 0xa0671d20"},"errorSelector":"ac8606f3","id":72,"name":"OffchainAttestationAlreadyRevoked","nameLocation":"1522:33:0","nodeType":"ErrorDefinition","parameters":{"id":71,"nodeType":"ParameterList","parameters":[],"src":"1555:2:0"},"src":"1516:42:0"},{"documentation":{"id":73,"nodeType":"StructuredDocumentation","src":"1563:34:0","text":" @dev 0xfdf4e6f9"},"errorSelector":"fdf4e6f9","id":75,"name":"InvalidDelegateSignature","nameLocation":"1608:24:0","nodeType":"ErrorDefinition","parameters":{"id":74,"nodeType":"ParameterList","parameters":[],"src":"1632:2:0"},"src":"1602:33:0"},{"documentation":{"id":76,"nodeType":"StructuredDocumentation","src":"1640:34:0","text":" @dev 0x5c34b9cc"},"errorSelector":"cc504239","id":78,"name":"LegacySPRequired","nameLocation":"1685:16:0","nodeType":"ErrorDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[],"src":"1701:2:0"},"src":"1679:25:0"},{"documentation":{"id":79,"nodeType":"StructuredDocumentation","src":"1710:324:0","text":" @notice Registers a Schema.\n @dev Emits `SchemaRegistered`.\n @param schema See `Schema`.\n @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\"\"` or `0x`\n otherwise.\n @return schemaId The assigned ID of the registered schema."},"functionSelector":"e117a861","id":89,"implemented":false,"kind":"function","modifiers":[],"name":"register","nameLocation":"2048:8:0","nodeType":"FunctionDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"schema","nameLocation":"2071:6:0","nodeType":"VariableDeclaration","scope":89,"src":"2057:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Schema_$630_memory_ptr","typeString":"struct Schema"},"typeName":{"id":81,"nodeType":"UserDefinedTypeName","pathNode":{"id":80,"name":"Schema","nameLocations":["2057:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"2057:6:0"},"referencedDeclaration":630,"src":"2057:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Schema_$630_storage_ptr","typeString":"struct Schema"}},"visibility":"internal"},{"constant":false,"id":84,"mutability":"mutable","name":"delegateSignature","nameLocation":"2094:17:0","nodeType":"VariableDeclaration","scope":89,"src":"2079:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":83,"name":"bytes","nodeType":"ElementaryTypeName","src":"2079:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2056:56:0"},"returnParameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"mutability":"mutable","name":"schemaId","nameLocation":"2138:8:0","nodeType":"VariableDeclaration","scope":89,"src":"2131:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":86,"name":"uint64","nodeType":"ElementaryTypeName","src":"2131:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2130:17:0"},"scope":495,"src":"2039:109:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2154:466:0","text":" @notice Makes an attestation.\n @dev Emits `AttestationMade`.\n @param attestation See `Attestation`.\n @param indexingKey Used by the frontend to aid indexing.\n @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\"\"` or `0x`\n otherwise.\n @param extraData This is forwarded to the resolver directly.\n @return attestationId The assigned ID of the attestation."},"functionSelector":"b82916cb","id":104,"implemented":false,"kind":"function","modifiers":[],"name":"attest","nameLocation":"2634:6:0","nodeType":"FunctionDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"attestation","nameLocation":"2671:11:0","nodeType":"VariableDeclaration","scope":104,"src":"2650:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_calldata_ptr","typeString":"struct Attestation"},"typeName":{"id":92,"nodeType":"UserDefinedTypeName","pathNode":{"id":91,"name":"Attestation","nameLocations":["2650:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":592,"src":"2650:11:0"},"referencedDeclaration":592,"src":"2650:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_storage_ptr","typeString":"struct Attestation"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"indexingKey","nameLocation":"2708:11:0","nodeType":"VariableDeclaration","scope":104,"src":"2692:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":94,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"delegateSignature","nameLocation":"2744:17:0","nodeType":"VariableDeclaration","scope":104,"src":"2729:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":96,"name":"bytes","nodeType":"ElementaryTypeName","src":"2729:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"extraData","nameLocation":"2786:9:0","nodeType":"VariableDeclaration","scope":104,"src":"2771:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":98,"name":"bytes","nodeType":"ElementaryTypeName","src":"2771:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2640:161:0"},"returnParameters":{"id":103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102,"mutability":"mutable","name":"attestationId","nameLocation":"2843:13:0","nodeType":"VariableDeclaration","scope":104,"src":"2836:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":101,"name":"uint64","nodeType":"ElementaryTypeName","src":"2836:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2835:22:0"},"scope":495,"src":"2625:233:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":105,"nodeType":"StructuredDocumentation","src":"2864:575:0","text":" @notice Makes an attestation where the schema hook expects ETH payment.\n @dev Emits `AttestationMade`.\n @param attestation See `Attestation`.\n @param resolverFeesETH Amount of funds to send to the hook.\n @param indexingKey Used by the frontend to aid indexing.\n @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\"\"` or `0x`\n otherwise.\n @param extraData This is forwarded to the resolver directly.\n @return attestationId The assigned ID of the attestation."},"functionSelector":"e09f1b7a","id":121,"implemented":false,"kind":"function","modifiers":[],"name":"attest","nameLocation":"3453:6:0","nodeType":"FunctionDefinition","parameters":{"id":117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":108,"mutability":"mutable","name":"attestation","nameLocation":"3490:11:0","nodeType":"VariableDeclaration","scope":121,"src":"3469:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_calldata_ptr","typeString":"struct Attestation"},"typeName":{"id":107,"nodeType":"UserDefinedTypeName","pathNode":{"id":106,"name":"Attestation","nameLocations":["3469:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":592,"src":"3469:11:0"},"referencedDeclaration":592,"src":"3469:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_storage_ptr","typeString":"struct Attestation"}},"visibility":"internal"},{"constant":false,"id":110,"mutability":"mutable","name":"resolverFeesETH","nameLocation":"3519:15:0","nodeType":"VariableDeclaration","scope":121,"src":"3511:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":109,"name":"uint256","nodeType":"ElementaryTypeName","src":"3511:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":112,"mutability":"mutable","name":"indexingKey","nameLocation":"3560:11:0","nodeType":"VariableDeclaration","scope":121,"src":"3544:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":111,"name":"string","nodeType":"ElementaryTypeName","src":"3544:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":114,"mutability":"mutable","name":"delegateSignature","nameLocation":"3596:17:0","nodeType":"VariableDeclaration","scope":121,"src":"3581:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":113,"name":"bytes","nodeType":"ElementaryTypeName","src":"3581:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":116,"mutability":"mutable","name":"extraData","nameLocation":"3638:9:0","nodeType":"VariableDeclaration","scope":121,"src":"3623:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":115,"name":"bytes","nodeType":"ElementaryTypeName","src":"3623:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3459:194:0"},"returnParameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"attestationId","nameLocation":"3711:13:0","nodeType":"VariableDeclaration","scope":121,"src":"3704:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":118,"name":"uint64","nodeType":"ElementaryTypeName","src":"3704:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3703:22:0"},"scope":495,"src":"3444:282:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":122,"nodeType":"StructuredDocumentation","src":"3732:660:0","text":" @notice Makes an attestation where the schema hook expects ERC20 payment.\n @dev Emits `AttestationMade`.\n @param attestation See `Attestation`.\n @param resolverFeesERC20Token ERC20 token address used for payment.\n @param resolverFeesERC20Amount Amount of funds to send to the hook.\n @param indexingKey Used by the frontend to aid indexing.\n @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\"\"` or `0x`\n otherwise.\n @param extraData This is forwarded to the resolver directly.\n @return attestationId The assigned ID of the attestation."},"functionSelector":"812c255f","id":141,"implemented":false,"kind":"function","modifiers":[],"name":"attest","nameLocation":"4406:6:0","nodeType":"FunctionDefinition","parameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":125,"mutability":"mutable","name":"attestation","nameLocation":"4443:11:0","nodeType":"VariableDeclaration","scope":141,"src":"4422:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_calldata_ptr","typeString":"struct Attestation"},"typeName":{"id":124,"nodeType":"UserDefinedTypeName","pathNode":{"id":123,"name":"Attestation","nameLocations":["4422:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":592,"src":"4422:11:0"},"referencedDeclaration":592,"src":"4422:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_storage_ptr","typeString":"struct Attestation"}},"visibility":"internal"},{"constant":false,"id":128,"mutability":"mutable","name":"resolverFeesERC20Token","nameLocation":"4471:22:0","nodeType":"VariableDeclaration","scope":141,"src":"4464:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$856","typeString":"contract IERC20"},"typeName":{"id":127,"nodeType":"UserDefinedTypeName","pathNode":{"id":126,"name":"IERC20","nameLocations":["4464:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":856,"src":"4464:6:0"},"referencedDeclaration":856,"src":"4464:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$856","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":130,"mutability":"mutable","name":"resolverFeesERC20Amount","nameLocation":"4511:23:0","nodeType":"VariableDeclaration","scope":141,"src":"4503:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":129,"name":"uint256","nodeType":"ElementaryTypeName","src":"4503:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":132,"mutability":"mutable","name":"indexingKey","nameLocation":"4560:11:0","nodeType":"VariableDeclaration","scope":141,"src":"4544:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":131,"name":"string","nodeType":"ElementaryTypeName","src":"4544:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"delegateSignature","nameLocation":"4596:17:0","nodeType":"VariableDeclaration","scope":141,"src":"4581:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":133,"name":"bytes","nodeType":"ElementaryTypeName","src":"4581:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":136,"mutability":"mutable","name":"extraData","nameLocation":"4638:9:0","nodeType":"VariableDeclaration","scope":141,"src":"4623:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":135,"name":"bytes","nodeType":"ElementaryTypeName","src":"4623:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4412:241:0"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"attestationId","nameLocation":"4695:13:0","nodeType":"VariableDeclaration","scope":141,"src":"4688:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":138,"name":"uint64","nodeType":"ElementaryTypeName","src":"4688:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4687:22:0"},"scope":495,"src":"4397:313:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":142,"nodeType":"StructuredDocumentation","src":"4716:516:0","text":" @notice Timestamps an off-chain data ID.\n @dev Emits `OffchainAttestationMade`.\n @param offchainAttestationId The off-chain data ID.\n @param delegateAttester An optional delegated attester that authorized the caller to attest on their behalf if\n this is a delegated attestation. Use `address(0)` otherwise.\n @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\"\"` or `0x`\n otherwise. Use `\"\"` or `0x` otherwise."},"functionSelector":"a01fb774","id":151,"implemented":false,"kind":"function","modifiers":[],"name":"attestOffchain","nameLocation":"5246:14:0","nodeType":"FunctionDefinition","parameters":{"id":149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"offchainAttestationId","nameLocation":"5286:21:0","nodeType":"VariableDeclaration","scope":151,"src":"5270:37:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":143,"name":"string","nodeType":"ElementaryTypeName","src":"5270:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":146,"mutability":"mutable","name":"delegateAttester","nameLocation":"5325:16:0","nodeType":"VariableDeclaration","scope":151,"src":"5317:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"5317:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":148,"mutability":"mutable","name":"delegateSignature","nameLocation":"5366:17:0","nodeType":"VariableDeclaration","scope":151,"src":"5351:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":147,"name":"bytes","nodeType":"ElementaryTypeName","src":"5351:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5260:129:0"},"returnParameters":{"id":150,"nodeType":"ParameterList","parameters":[],"src":"5406:0:0"},"scope":495,"src":"5237:170:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":152,"nodeType":"StructuredDocumentation","src":"5413:458:0","text":" @notice Revokes an existing revocable attestation.\n @dev Emits `AttestationRevoked`. Must be called by the attester.\n @param attestationId An existing attestation ID.\n @param reason The revocation reason. This is only emitted as an event to save gas.\n @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation.\n @param extraData This is forwarded to the resolver directly."},"functionSelector":"24855e60","id":163,"implemented":false,"kind":"function","modifiers":[],"name":"revoke","nameLocation":"5885:6:0","nodeType":"FunctionDefinition","parameters":{"id":161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":154,"mutability":"mutable","name":"attestationId","nameLocation":"5908:13:0","nodeType":"VariableDeclaration","scope":163,"src":"5901:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":153,"name":"uint64","nodeType":"ElementaryTypeName","src":"5901:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":156,"mutability":"mutable","name":"reason","nameLocation":"5947:6:0","nodeType":"VariableDeclaration","scope":163,"src":"5931:22:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":155,"name":"string","nodeType":"ElementaryTypeName","src":"5931:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"delegateSignature","nameLocation":"5978:17:0","nodeType":"VariableDeclaration","scope":163,"src":"5963:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":157,"name":"bytes","nodeType":"ElementaryTypeName","src":"5963:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"extraData","nameLocation":"6020:9:0","nodeType":"VariableDeclaration","scope":163,"src":"6005:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":159,"name":"bytes","nodeType":"ElementaryTypeName","src":"6005:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5891:144:0"},"returnParameters":{"id":162,"nodeType":"ParameterList","parameters":[],"src":"6052:0:0"},"scope":495,"src":"5876:177:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":164,"nodeType":"StructuredDocumentation","src":"6059:569:0","text":" @notice Revokes an existing revocable attestation where the schema hook expects ERC20 payment.\n @dev Emits `AttestationRevoked`. Must be called by the attester.\n @param attestationId An existing attestation ID.\n @param reason The revocation reason. This is only emitted as an event to save gas.\n @param resolverFeesETH Amount of funds to send to the hook.\n @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation.\n @param extraData This is forwarded to the resolver directly."},"functionSelector":"f83b92b7","id":177,"implemented":false,"kind":"function","modifiers":[],"name":"revoke","nameLocation":"6642:6:0","nodeType":"FunctionDefinition","parameters":{"id":175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"attestationId","nameLocation":"6665:13:0","nodeType":"VariableDeclaration","scope":177,"src":"6658:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":165,"name":"uint64","nodeType":"ElementaryTypeName","src":"6658:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":168,"mutability":"mutable","name":"reason","nameLocation":"6704:6:0","nodeType":"VariableDeclaration","scope":177,"src":"6688:22:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":167,"name":"string","nodeType":"ElementaryTypeName","src":"6688:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":170,"mutability":"mutable","name":"resolverFeesETH","nameLocation":"6728:15:0","nodeType":"VariableDeclaration","scope":177,"src":"6720:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":169,"name":"uint256","nodeType":"ElementaryTypeName","src":"6720:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":172,"mutability":"mutable","name":"delegateSignature","nameLocation":"6768:17:0","nodeType":"VariableDeclaration","scope":177,"src":"6753:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":171,"name":"bytes","nodeType":"ElementaryTypeName","src":"6753:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"extraData","nameLocation":"6810:9:0","nodeType":"VariableDeclaration","scope":177,"src":"6795:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":173,"name":"bytes","nodeType":"ElementaryTypeName","src":"6795:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6648:177:0"},"returnParameters":{"id":176,"nodeType":"ParameterList","parameters":[],"src":"6858:0:0"},"scope":495,"src":"6633:226:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"6865:652:0","text":" @notice Revokes an existing revocable attestation where the schema hook expects ERC20 payment.\n @dev Emits `AttestationRevoked`. Must be called by the attester.\n @param attestationId An existing attestation ID.\n @param reason The revocation reason. This is only emitted as an event to save gas.\n @param resolverFeesERC20Token ERC20 token address used for payment.\n @param resolverFeesERC20Amount Amount of funds to send to the hook.\n @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation.\n @param extraData This is forwarded to the resolver directly."},"functionSelector":"9b7f8318","id":194,"implemented":false,"kind":"function","modifiers":[],"name":"revoke","nameLocation":"7531:6:0","nodeType":"FunctionDefinition","parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"mutability":"mutable","name":"attestationId","nameLocation":"7554:13:0","nodeType":"VariableDeclaration","scope":194,"src":"7547:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":179,"name":"uint64","nodeType":"ElementaryTypeName","src":"7547:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"reason","nameLocation":"7593:6:0","nodeType":"VariableDeclaration","scope":194,"src":"7577:22:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":181,"name":"string","nodeType":"ElementaryTypeName","src":"7577:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":185,"mutability":"mutable","name":"resolverFeesERC20Token","nameLocation":"7616:22:0","nodeType":"VariableDeclaration","scope":194,"src":"7609:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$856","typeString":"contract IERC20"},"typeName":{"id":184,"nodeType":"UserDefinedTypeName","pathNode":{"id":183,"name":"IERC20","nameLocations":["7609:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":856,"src":"7609:6:0"},"referencedDeclaration":856,"src":"7609:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$856","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"resolverFeesERC20Amount","nameLocation":"7656:23:0","nodeType":"VariableDeclaration","scope":194,"src":"7648:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"7648:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":189,"mutability":"mutable","name":"delegateSignature","nameLocation":"7704:17:0","nodeType":"VariableDeclaration","scope":194,"src":"7689:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":188,"name":"bytes","nodeType":"ElementaryTypeName","src":"7689:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"extraData","nameLocation":"7746:9:0","nodeType":"VariableDeclaration","scope":194,"src":"7731:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":190,"name":"bytes","nodeType":"ElementaryTypeName","src":"7731:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7537:224:0"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[],"src":"7778:0:0"},"scope":495,"src":"7522:257:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":195,"nodeType":"StructuredDocumentation","src":"7785:405:0","text":" @notice Revokes an existing offchain attestation.\n @dev Emits `OffchainAttestationRevoked`. Must be called by the attester.\n @param offchainAttestationId An existing attestation ID.\n @param reason The revocation reason. This is only emitted as an event to save gas.\n @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation."},"functionSelector":"574a3066","id":204,"implemented":false,"kind":"function","modifiers":[],"name":"revokeOffchain","nameLocation":"8204:14:0","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"offchainAttestationId","nameLocation":"8244:21:0","nodeType":"VariableDeclaration","scope":204,"src":"8228:37:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":196,"name":"string","nodeType":"ElementaryTypeName","src":"8228:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"reason","nameLocation":"8291:6:0","nodeType":"VariableDeclaration","scope":204,"src":"8275:22:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":198,"name":"string","nodeType":"ElementaryTypeName","src":"8275:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"delegateSignature","nameLocation":"8322:17:0","nodeType":"VariableDeclaration","scope":204,"src":"8307:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":200,"name":"bytes","nodeType":"ElementaryTypeName","src":"8307:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8218:127:0"},"returnParameters":{"id":203,"nodeType":"ParameterList","parameters":[],"src":"8362:0:0"},"scope":495,"src":"8195:168:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":205,"nodeType":"StructuredDocumentation","src":"8369:52:0","text":" @notice Batch registers a Schema."},"functionSelector":"5e7689b7","id":217,"implemented":false,"kind":"function","modifiers":[],"name":"registerBatch","nameLocation":"8435:13:0","nodeType":"FunctionDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"schemas","nameLocation":"8476:7:0","nodeType":"VariableDeclaration","scope":217,"src":"8458:25:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Schema_$630_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Schema[]"},"typeName":{"baseType":{"id":207,"nodeType":"UserDefinedTypeName","pathNode":{"id":206,"name":"Schema","nameLocations":["8458:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"8458:6:0"},"referencedDeclaration":630,"src":"8458:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Schema_$630_storage_ptr","typeString":"struct Schema"}},"id":208,"nodeType":"ArrayTypeName","src":"8458:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Schema_$630_storage_$dyn_storage_ptr","typeString":"struct Schema[]"}},"visibility":"internal"},{"constant":false,"id":211,"mutability":"mutable","name":"delegateSignature","nameLocation":"8508:17:0","nodeType":"VariableDeclaration","scope":217,"src":"8493:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":210,"name":"bytes","nodeType":"ElementaryTypeName","src":"8493:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8448:83:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"schemaIds","nameLocation":"8584:9:0","nodeType":"VariableDeclaration","scope":217,"src":"8566:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_calldata_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":213,"name":"uint64","nodeType":"ElementaryTypeName","src":"8566:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":214,"nodeType":"ArrayTypeName","src":"8566:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"}],"src":"8565:29:0"},"scope":495,"src":"8426:169:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"8601:41:0","text":" @notice Batch attests."},"functionSelector":"d98934ff","id":235,"implemented":false,"kind":"function","modifiers":[],"name":"attestBatch","nameLocation":"8656:11:0","nodeType":"FunctionDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"attestations","nameLocation":"8700:12:0","nodeType":"VariableDeclaration","scope":235,"src":"8677:35:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$592_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Attestation[]"},"typeName":{"baseType":{"id":220,"nodeType":"UserDefinedTypeName","pathNode":{"id":219,"name":"Attestation","nameLocations":["8677:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":592,"src":"8677:11:0"},"referencedDeclaration":592,"src":"8677:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_storage_ptr","typeString":"struct Attestation"}},"id":221,"nodeType":"ArrayTypeName","src":"8677:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$592_storage_$dyn_storage_ptr","typeString":"struct Attestation[]"}},"visibility":"internal"},{"constant":false,"id":225,"mutability":"mutable","name":"indexingKeys","nameLocation":"8740:12:0","nodeType":"VariableDeclaration","scope":235,"src":"8722:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":223,"name":"string","nodeType":"ElementaryTypeName","src":"8722:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":224,"nodeType":"ArrayTypeName","src":"8722:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":227,"mutability":"mutable","name":"delegateSignature","nameLocation":"8777:17:0","nodeType":"VariableDeclaration","scope":235,"src":"8762:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":226,"name":"bytes","nodeType":"ElementaryTypeName","src":"8762:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":229,"mutability":"mutable","name":"extraData","nameLocation":"8819:9:0","nodeType":"VariableDeclaration","scope":235,"src":"8804:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":228,"name":"bytes","nodeType":"ElementaryTypeName","src":"8804:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8667:167:0"},"returnParameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"attestationIds","nameLocation":"8887:14:0","nodeType":"VariableDeclaration","scope":235,"src":"8869:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_calldata_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":231,"name":"uint64","nodeType":"ElementaryTypeName","src":"8869:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":232,"nodeType":"ArrayTypeName","src":"8869:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"}],"src":"8868:34:0"},"scope":495,"src":"8647:256:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":236,"nodeType":"StructuredDocumentation","src":"8909:83:0","text":" @notice Batch attests where the schema hook expects ETH payment."},"functionSelector":"4e6ac1d5","id":256,"implemented":false,"kind":"function","modifiers":[],"name":"attestBatch","nameLocation":"9006:11:0","nodeType":"FunctionDefinition","parameters":{"id":251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"attestations","nameLocation":"9050:12:0","nodeType":"VariableDeclaration","scope":256,"src":"9027:35:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$592_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Attestation[]"},"typeName":{"baseType":{"id":238,"nodeType":"UserDefinedTypeName","pathNode":{"id":237,"name":"Attestation","nameLocations":["9027:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":592,"src":"9027:11:0"},"referencedDeclaration":592,"src":"9027:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_storage_ptr","typeString":"struct Attestation"}},"id":239,"nodeType":"ArrayTypeName","src":"9027:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$592_storage_$dyn_storage_ptr","typeString":"struct Attestation[]"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"resolverFeesETH","nameLocation":"9091:15:0","nodeType":"VariableDeclaration","scope":256,"src":"9072:34:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":241,"name":"uint256","nodeType":"ElementaryTypeName","src":"9072:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":242,"nodeType":"ArrayTypeName","src":"9072:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":246,"mutability":"mutable","name":"indexingKeys","nameLocation":"9134:12:0","nodeType":"VariableDeclaration","scope":256,"src":"9116:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":244,"name":"string","nodeType":"ElementaryTypeName","src":"9116:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":245,"nodeType":"ArrayTypeName","src":"9116:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":248,"mutability":"mutable","name":"delegateSignature","nameLocation":"9171:17:0","nodeType":"VariableDeclaration","scope":256,"src":"9156:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":247,"name":"bytes","nodeType":"ElementaryTypeName","src":"9156:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":250,"mutability":"mutable","name":"extraData","nameLocation":"9213:9:0","nodeType":"VariableDeclaration","scope":256,"src":"9198:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":249,"name":"bytes","nodeType":"ElementaryTypeName","src":"9198:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9017:211:0"},"returnParameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"attestationIds","nameLocation":"9297:14:0","nodeType":"VariableDeclaration","scope":256,"src":"9279:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_calldata_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":252,"name":"uint64","nodeType":"ElementaryTypeName","src":"9279:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":253,"nodeType":"ArrayTypeName","src":"9279:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"}],"src":"9278:34:0"},"scope":495,"src":"8997:316:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"9319:85:0","text":" @notice Batch attests where the schema hook expects ERC20 payment."},"functionSelector":"59d9a12f","id":281,"implemented":false,"kind":"function","modifiers":[],"name":"attestBatch","nameLocation":"9418:11:0","nodeType":"FunctionDefinition","parameters":{"id":276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"attestations","nameLocation":"9462:12:0","nodeType":"VariableDeclaration","scope":281,"src":"9439:35:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$592_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Attestation[]"},"typeName":{"baseType":{"id":259,"nodeType":"UserDefinedTypeName","pathNode":{"id":258,"name":"Attestation","nameLocations":["9439:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":592,"src":"9439:11:0"},"referencedDeclaration":592,"src":"9439:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_storage_ptr","typeString":"struct Attestation"}},"id":260,"nodeType":"ArrayTypeName","src":"9439:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$592_storage_$dyn_storage_ptr","typeString":"struct Attestation[]"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"resolverFeesERC20Tokens","nameLocation":"9502:23:0","nodeType":"VariableDeclaration","scope":281,"src":"9484:41:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$856_$dyn_calldata_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":263,"nodeType":"UserDefinedTypeName","pathNode":{"id":262,"name":"IERC20","nameLocations":["9484:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":856,"src":"9484:6:0"},"referencedDeclaration":856,"src":"9484:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$856","typeString":"contract IERC20"}},"id":264,"nodeType":"ArrayTypeName","src":"9484:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$856_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":268,"mutability":"mutable","name":"resolverFeesERC20Amount","nameLocation":"9554:23:0","nodeType":"VariableDeclaration","scope":281,"src":"9535:42:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":266,"name":"uint256","nodeType":"ElementaryTypeName","src":"9535:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":267,"nodeType":"ArrayTypeName","src":"9535:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":271,"mutability":"mutable","name":"indexingKeys","nameLocation":"9605:12:0","nodeType":"VariableDeclaration","scope":281,"src":"9587:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":269,"name":"string","nodeType":"ElementaryTypeName","src":"9587:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":270,"nodeType":"ArrayTypeName","src":"9587:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"delegateSignature","nameLocation":"9642:17:0","nodeType":"VariableDeclaration","scope":281,"src":"9627:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":272,"name":"bytes","nodeType":"ElementaryTypeName","src":"9627:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":275,"mutability":"mutable","name":"extraData","nameLocation":"9684:9:0","nodeType":"VariableDeclaration","scope":281,"src":"9669:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":274,"name":"bytes","nodeType":"ElementaryTypeName","src":"9669:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9429:270:0"},"returnParameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"attestationIds","nameLocation":"9752:14:0","nodeType":"VariableDeclaration","scope":281,"src":"9734:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_calldata_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":277,"name":"uint64","nodeType":"ElementaryTypeName","src":"9734:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":278,"nodeType":"ArrayTypeName","src":"9734:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"}],"src":"9733:34:0"},"scope":495,"src":"9409:359:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":282,"nodeType":"StructuredDocumentation","src":"9774:63:0","text":" @notice Batch timestamps off-chain data IDs."},"functionSelector":"1916749d","id":292,"implemented":false,"kind":"function","modifiers":[],"name":"attestOffchainBatch","nameLocation":"9851:19:0","nodeType":"FunctionDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"mutability":"mutable","name":"offchainAttestationIds","nameLocation":"9898:22:0","nodeType":"VariableDeclaration","scope":292,"src":"9880:40:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":283,"name":"string","nodeType":"ElementaryTypeName","src":"9880:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":284,"nodeType":"ArrayTypeName","src":"9880:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":287,"mutability":"mutable","name":"delegateAttester","nameLocation":"9938:16:0","nodeType":"VariableDeclaration","scope":292,"src":"9930:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"9930:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":289,"mutability":"mutable","name":"delegateSignature","nameLocation":"9979:17:0","nodeType":"VariableDeclaration","scope":292,"src":"9964:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":288,"name":"bytes","nodeType":"ElementaryTypeName","src":"9964:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9870:132:0"},"returnParameters":{"id":291,"nodeType":"ParameterList","parameters":[],"src":"10019:0:0"},"scope":495,"src":"9842:178:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":293,"nodeType":"StructuredDocumentation","src":"10026:73:0","text":" @notice Batch revokes revocable on-chain attestations."},"functionSelector":"65ae13b3","id":306,"implemented":false,"kind":"function","modifiers":[],"name":"revokeBatch","nameLocation":"10113:11:0","nodeType":"FunctionDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":296,"mutability":"mutable","name":"attestationIds","nameLocation":"10152:14:0","nodeType":"VariableDeclaration","scope":306,"src":"10134:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_calldata_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":294,"name":"uint64","nodeType":"ElementaryTypeName","src":"10134:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":295,"nodeType":"ArrayTypeName","src":"10134:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"},{"constant":false,"id":299,"mutability":"mutable","name":"reasons","nameLocation":"10194:7:0","nodeType":"VariableDeclaration","scope":306,"src":"10176:25:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":297,"name":"string","nodeType":"ElementaryTypeName","src":"10176:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":298,"nodeType":"ArrayTypeName","src":"10176:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":301,"mutability":"mutable","name":"delegateSignature","nameLocation":"10226:17:0","nodeType":"VariableDeclaration","scope":306,"src":"10211:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":300,"name":"bytes","nodeType":"ElementaryTypeName","src":"10211:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"extraData","nameLocation":"10268:9:0","nodeType":"VariableDeclaration","scope":306,"src":"10253:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":302,"name":"bytes","nodeType":"ElementaryTypeName","src":"10253:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10124:159:0"},"returnParameters":{"id":305,"nodeType":"ParameterList","parameters":[],"src":"10300:0:0"},"scope":495,"src":"10104:197:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"10307:115:0","text":" @notice Batch revokes revocable on-chain attestations where the schema hook expects ETH payment."},"functionSelector":"d7681235","id":323,"implemented":false,"kind":"function","modifiers":[],"name":"revokeBatch","nameLocation":"10436:11:0","nodeType":"FunctionDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"mutability":"mutable","name":"attestationIds","nameLocation":"10475:14:0","nodeType":"VariableDeclaration","scope":323,"src":"10457:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_calldata_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":308,"name":"uint64","nodeType":"ElementaryTypeName","src":"10457:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":309,"nodeType":"ArrayTypeName","src":"10457:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"},{"constant":false,"id":313,"mutability":"mutable","name":"reasons","nameLocation":"10517:7:0","nodeType":"VariableDeclaration","scope":323,"src":"10499:25:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":311,"name":"string","nodeType":"ElementaryTypeName","src":"10499:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":312,"nodeType":"ArrayTypeName","src":"10499:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":316,"mutability":"mutable","name":"resolverFeesETH","nameLocation":"10553:15:0","nodeType":"VariableDeclaration","scope":323,"src":"10534:34:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"10534:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":315,"nodeType":"ArrayTypeName","src":"10534:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":318,"mutability":"mutable","name":"delegateSignature","nameLocation":"10593:17:0","nodeType":"VariableDeclaration","scope":323,"src":"10578:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":317,"name":"bytes","nodeType":"ElementaryTypeName","src":"10578:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"extraData","nameLocation":"10635:9:0","nodeType":"VariableDeclaration","scope":323,"src":"10620:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":319,"name":"bytes","nodeType":"ElementaryTypeName","src":"10620:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10447:203:0"},"returnParameters":{"id":322,"nodeType":"ParameterList","parameters":[],"src":"10683:0:0"},"scope":495,"src":"10427:257:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":324,"nodeType":"StructuredDocumentation","src":"10690:117:0","text":" @notice Batch revokes revocable on-chain attestations where the schema hook expects ERC20 payment."},"functionSelector":"fd397913","id":344,"implemented":false,"kind":"function","modifiers":[],"name":"revokeBatch","nameLocation":"10821:11:0","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"attestationIds","nameLocation":"10860:14:0","nodeType":"VariableDeclaration","scope":344,"src":"10842:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_calldata_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":325,"name":"uint64","nodeType":"ElementaryTypeName","src":"10842:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":326,"nodeType":"ArrayTypeName","src":"10842:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"},{"constant":false,"id":330,"mutability":"mutable","name":"reasons","nameLocation":"10902:7:0","nodeType":"VariableDeclaration","scope":344,"src":"10884:25:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":328,"name":"string","nodeType":"ElementaryTypeName","src":"10884:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":329,"nodeType":"ArrayTypeName","src":"10884:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":334,"mutability":"mutable","name":"resolverFeesERC20Tokens","nameLocation":"10937:23:0","nodeType":"VariableDeclaration","scope":344,"src":"10919:41:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$856_$dyn_calldata_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":332,"nodeType":"UserDefinedTypeName","pathNode":{"id":331,"name":"IERC20","nameLocations":["10919:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":856,"src":"10919:6:0"},"referencedDeclaration":856,"src":"10919:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$856","typeString":"contract IERC20"}},"id":333,"nodeType":"ArrayTypeName","src":"10919:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$856_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":337,"mutability":"mutable","name":"resolverFeesERC20Amount","nameLocation":"10989:23:0","nodeType":"VariableDeclaration","scope":344,"src":"10970:42:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"10970:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":336,"nodeType":"ArrayTypeName","src":"10970:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"delegateSignature","nameLocation":"11037:17:0","nodeType":"VariableDeclaration","scope":344,"src":"11022:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":338,"name":"bytes","nodeType":"ElementaryTypeName","src":"11022:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"extraData","nameLocation":"11079:9:0","nodeType":"VariableDeclaration","scope":344,"src":"11064:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":340,"name":"bytes","nodeType":"ElementaryTypeName","src":"11064:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10832:262:0"},"returnParameters":{"id":343,"nodeType":"ParameterList","parameters":[],"src":"11111:0:0"},"scope":495,"src":"10812:300:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"11118:64:0","text":" @notice Batch revokes off-chain attestations."},"functionSelector":"ba97637d","id":356,"implemented":false,"kind":"function","modifiers":[],"name":"revokeOffchainBatch","nameLocation":"11196:19:0","nodeType":"FunctionDefinition","parameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"offchainAttestationIds","nameLocation":"11243:22:0","nodeType":"VariableDeclaration","scope":356,"src":"11225:40:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":346,"name":"string","nodeType":"ElementaryTypeName","src":"11225:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":347,"nodeType":"ArrayTypeName","src":"11225:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":351,"mutability":"mutable","name":"reasons","nameLocation":"11293:7:0","nodeType":"VariableDeclaration","scope":356,"src":"11275:25:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":349,"name":"string","nodeType":"ElementaryTypeName","src":"11275:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":350,"nodeType":"ArrayTypeName","src":"11275:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":353,"mutability":"mutable","name":"delegateSignature","nameLocation":"11325:17:0","nodeType":"VariableDeclaration","scope":356,"src":"11310:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":352,"name":"bytes","nodeType":"ElementaryTypeName","src":"11310:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11215:133:0"},"returnParameters":{"id":355,"nodeType":"ParameterList","parameters":[],"src":"11365:0:0"},"scope":495,"src":"11187:179:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"11372:58:0","text":" @notice Returns the specified `Schema`."},"functionSelector":"8d1be875","id":365,"implemented":false,"kind":"function","modifiers":[],"name":"getSchema","nameLocation":"11444:9:0","nodeType":"FunctionDefinition","parameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"schemaId","nameLocation":"11461:8:0","nodeType":"VariableDeclaration","scope":365,"src":"11454:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":358,"name":"uint64","nodeType":"ElementaryTypeName","src":"11454:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"11453:17:0"},"returnParameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":365,"src":"11494:15:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Schema_$630_calldata_ptr","typeString":"struct Schema"},"typeName":{"id":362,"nodeType":"UserDefinedTypeName","pathNode":{"id":361,"name":"Schema","nameLocations":["11494:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"11494:6:0"},"referencedDeclaration":630,"src":"11494:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Schema_$630_storage_ptr","typeString":"struct Schema"}},"visibility":"internal"}],"src":"11493:17:0"},"scope":495,"src":"11435:76:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"11517:63:0","text":" @notice Returns the specified `Attestation`."},"functionSelector":"62252880","id":374,"implemented":false,"kind":"function","modifiers":[],"name":"getAttestation","nameLocation":"11594:14:0","nodeType":"FunctionDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"attestationId","nameLocation":"11616:13:0","nodeType":"VariableDeclaration","scope":374,"src":"11609:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":367,"name":"uint64","nodeType":"ElementaryTypeName","src":"11609:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"11608:22:0"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":374,"src":"11654:20:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_calldata_ptr","typeString":"struct Attestation"},"typeName":{"id":371,"nodeType":"UserDefinedTypeName","pathNode":{"id":370,"name":"Attestation","nameLocations":["11654:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":592,"src":"11654:11:0"},"referencedDeclaration":592,"src":"11654:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_storage_ptr","typeString":"struct Attestation"}},"visibility":"internal"}],"src":"11653:22:0"},"scope":495,"src":"11585:91:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":375,"nodeType":"StructuredDocumentation","src":"11682:71:0","text":" @notice Returns the specified `OffchainAttestation`."},"functionSelector":"6a67651c","id":383,"implemented":false,"kind":"function","modifiers":[],"name":"getOffchainAttestation","nameLocation":"11767:22:0","nodeType":"FunctionDefinition","parameters":{"id":378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":377,"mutability":"mutable","name":"offchainAttestationId","nameLocation":"11806:21:0","nodeType":"VariableDeclaration","scope":383,"src":"11790:37:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":376,"name":"string","nodeType":"ElementaryTypeName","src":"11790:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11789:39:0"},"returnParameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":383,"src":"11876:28:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_OffchainAttestation_$598_calldata_ptr","typeString":"struct OffchainAttestation"},"typeName":{"id":380,"nodeType":"UserDefinedTypeName","pathNode":{"id":379,"name":"OffchainAttestation","nameLocations":["11876:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":598,"src":"11876:19:0"},"referencedDeclaration":598,"src":"11876:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_OffchainAttestation_$598_storage_ptr","typeString":"struct OffchainAttestation"}},"visibility":"internal"}],"src":"11875:30:0"},"scope":495,"src":"11758:148:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"11912:100:0","text":" @notice Returns the hash that will be used to authorize a delegated registration."},"functionSelector":"570b7434","id":392,"implemented":false,"kind":"function","modifiers":[],"name":"getDelegatedRegisterHash","nameLocation":"12026:24:0","nodeType":"FunctionDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":387,"mutability":"mutable","name":"schema","nameLocation":"12065:6:0","nodeType":"VariableDeclaration","scope":392,"src":"12051:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Schema_$630_memory_ptr","typeString":"struct Schema"},"typeName":{"id":386,"nodeType":"UserDefinedTypeName","pathNode":{"id":385,"name":"Schema","nameLocations":["12051:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"12051:6:0"},"referencedDeclaration":630,"src":"12051:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Schema_$630_storage_ptr","typeString":"struct Schema"}},"visibility":"internal"}],"src":"12050:22:0"},"returnParameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":392,"src":"12096:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":389,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12096:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12095:9:0"},"scope":495,"src":"12017:88:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":393,"nodeType":"StructuredDocumentation","src":"12111:106:0","text":" @notice Returns the hash that will be used to authorize a delegated batch registration."},"functionSelector":"00f0f855","id":402,"implemented":false,"kind":"function","modifiers":[],"name":"getDelegatedRegisterBatchHash","nameLocation":"12231:29:0","nodeType":"FunctionDefinition","parameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"mutability":"mutable","name":"schemas","nameLocation":"12277:7:0","nodeType":"VariableDeclaration","scope":402,"src":"12261:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Schema_$630_memory_ptr_$dyn_memory_ptr","typeString":"struct Schema[]"},"typeName":{"baseType":{"id":395,"nodeType":"UserDefinedTypeName","pathNode":{"id":394,"name":"Schema","nameLocations":["12261:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"12261:6:0"},"referencedDeclaration":630,"src":"12261:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Schema_$630_storage_ptr","typeString":"struct Schema"}},"id":396,"nodeType":"ArrayTypeName","src":"12261:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Schema_$630_storage_$dyn_storage_ptr","typeString":"struct Schema[]"}},"visibility":"internal"}],"src":"12260:25:0"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":402,"src":"12309:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":399,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12309:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12308:9:0"},"scope":495,"src":"12222:96:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":403,"nodeType":"StructuredDocumentation","src":"12324:99:0","text":" @notice Returns the hash that will be used to authorize a delegated attestation."},"functionSelector":"8ef1fbc1","id":411,"implemented":false,"kind":"function","modifiers":[],"name":"getDelegatedAttestHash","nameLocation":"12437:22:0","nodeType":"FunctionDefinition","parameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"attestation","nameLocation":"12481:11:0","nodeType":"VariableDeclaration","scope":411,"src":"12460:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_calldata_ptr","typeString":"struct Attestation"},"typeName":{"id":405,"nodeType":"UserDefinedTypeName","pathNode":{"id":404,"name":"Attestation","nameLocations":["12460:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":592,"src":"12460:11:0"},"referencedDeclaration":592,"src":"12460:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_storage_ptr","typeString":"struct Attestation"}},"visibility":"internal"}],"src":"12459:34:0"},"returnParameters":{"id":410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":411,"src":"12517:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":408,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12517:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12516:9:0"},"scope":495,"src":"12428:98:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":412,"nodeType":"StructuredDocumentation","src":"12532:105:0","text":" @notice Returns the hash that will be used to authorize a delegated batch attestation."},"functionSelector":"3f50fb76","id":421,"implemented":false,"kind":"function","modifiers":[],"name":"getDelegatedAttestBatchHash","nameLocation":"12651:27:0","nodeType":"FunctionDefinition","parameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"attestations","nameLocation":"12702:12:0","nodeType":"VariableDeclaration","scope":421,"src":"12679:35:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$592_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Attestation[]"},"typeName":{"baseType":{"id":414,"nodeType":"UserDefinedTypeName","pathNode":{"id":413,"name":"Attestation","nameLocations":["12679:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":592,"src":"12679:11:0"},"referencedDeclaration":592,"src":"12679:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$592_storage_ptr","typeString":"struct Attestation"}},"id":415,"nodeType":"ArrayTypeName","src":"12679:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$592_storage_$dyn_storage_ptr","typeString":"struct Attestation[]"}},"visibility":"internal"}],"src":"12678:37:0"},"returnParameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":421,"src":"12739:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12739:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12738:9:0"},"scope":495,"src":"12642:106:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":422,"nodeType":"StructuredDocumentation","src":"12754:108:0","text":" @notice Returns the hash that will be used to authorize a delegated offchain attestation."},"functionSelector":"be919fb1","id":429,"implemented":false,"kind":"function","modifiers":[],"name":"getDelegatedOffchainAttestHash","nameLocation":"12876:30:0","nodeType":"FunctionDefinition","parameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"offchainAttestationId","nameLocation":"12923:21:0","nodeType":"VariableDeclaration","scope":429,"src":"12907:37:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":423,"name":"string","nodeType":"ElementaryTypeName","src":"12907:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12906:39:0"},"returnParameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":429,"src":"12969:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12969:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12968:9:0"},"scope":495,"src":"12867:111:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"12984:114:0","text":" @notice Returns the hash that will be used to authorize a delegated batch offchain attestation."},"functionSelector":"263bc92d","id":438,"implemented":false,"kind":"function","modifiers":[],"name":"getDelegatedOffchainAttestBatchHash","nameLocation":"13112:35:0","nodeType":"FunctionDefinition","parameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":433,"mutability":"mutable","name":"offchainAttestationIds","nameLocation":"13166:22:0","nodeType":"VariableDeclaration","scope":438,"src":"13148:40:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":431,"name":"string","nodeType":"ElementaryTypeName","src":"13148:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":432,"nodeType":"ArrayTypeName","src":"13148:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"13147:42:0"},"returnParameters":{"id":437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"13237:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":435,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13237:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13236:9:0"},"scope":495,"src":"13103:143:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"13252:98:0","text":" @notice Returns the hash that will be used to authorize a delegated revocation."},"functionSelector":"dc50eada","id":448,"implemented":false,"kind":"function","modifiers":[],"name":"getDelegatedRevokeHash","nameLocation":"13364:22:0","nodeType":"FunctionDefinition","parameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"attestationId","nameLocation":"13394:13:0","nodeType":"VariableDeclaration","scope":448,"src":"13387:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":440,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":443,"mutability":"mutable","name":"reason","nameLocation":"13423:6:0","nodeType":"VariableDeclaration","scope":448,"src":"13409:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":442,"name":"string","nodeType":"ElementaryTypeName","src":"13409:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13386:44:0"},"returnParameters":{"id":447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":448,"src":"13454:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13454:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13453:9:0"},"scope":495,"src":"13355:108:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":449,"nodeType":"StructuredDocumentation","src":"13469:104:0","text":" @notice Returns the hash that will be used to authorize a delegated batch revocation."},"functionSelector":"40f356fa","id":460,"implemented":false,"kind":"function","modifiers":[],"name":"getDelegatedRevokeBatchHash","nameLocation":"13587:27:0","nodeType":"FunctionDefinition","parameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"mutability":"mutable","name":"attestationIds","nameLocation":"13640:14:0","nodeType":"VariableDeclaration","scope":460,"src":"13624:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":450,"name":"uint64","nodeType":"ElementaryTypeName","src":"13624:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":451,"nodeType":"ArrayTypeName","src":"13624:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"reasons","nameLocation":"13680:7:0","nodeType":"VariableDeclaration","scope":460,"src":"13664:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":453,"name":"string","nodeType":"ElementaryTypeName","src":"13664:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":454,"nodeType":"ArrayTypeName","src":"13664:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"13614:79:0"},"returnParameters":{"id":459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":460,"src":"13741:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13741:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13740:9:0"},"scope":495,"src":"13578:172:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":461,"nodeType":"StructuredDocumentation","src":"13756:107:0","text":" @notice Returns the hash that will be used to authorize a delegated offchain revocation."},"functionSelector":"985292eb","id":470,"implemented":false,"kind":"function","modifiers":[],"name":"getDelegatedOffchainRevokeHash","nameLocation":"13877:30:0","nodeType":"FunctionDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":463,"mutability":"mutable","name":"offchainAttestationId","nameLocation":"13931:21:0","nodeType":"VariableDeclaration","scope":470,"src":"13917:35:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":462,"name":"string","nodeType":"ElementaryTypeName","src":"13917:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":465,"mutability":"mutable","name":"reason","nameLocation":"13976:6:0","nodeType":"VariableDeclaration","scope":470,"src":"13962:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":464,"name":"string","nodeType":"ElementaryTypeName","src":"13962:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13907:81:0"},"returnParameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":470,"src":"14036:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":467,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14036:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14035:9:0"},"scope":495,"src":"13868:177:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"14051:113:0","text":" @notice Returns the hash that will be used to authorize a delegated batch offchain revocation."},"functionSelector":"d3dc7b23","id":482,"implemented":false,"kind":"function","modifiers":[],"name":"getDelegatedOffchainRevokeBatchHash","nameLocation":"14178:35:0","nodeType":"FunctionDefinition","parameters":{"id":478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":474,"mutability":"mutable","name":"offchainAttestationIds","nameLocation":"14239:22:0","nodeType":"VariableDeclaration","scope":482,"src":"14223:38:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":472,"name":"string","nodeType":"ElementaryTypeName","src":"14223:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":473,"nodeType":"ArrayTypeName","src":"14223:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":477,"mutability":"mutable","name":"reasons","nameLocation":"14287:7:0","nodeType":"VariableDeclaration","scope":482,"src":"14271:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":475,"name":"string","nodeType":"ElementaryTypeName","src":"14271:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":476,"nodeType":"ArrayTypeName","src":"14271:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"14213:87:0"},"returnParameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":482,"src":"14348:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":479,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14348:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14347:9:0"},"scope":495,"src":"14169:188:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"14363:112:0","text":" @notice Returns the current schema counter. This is incremented for each `Schema` registered."},"functionSelector":"cb6a3237","id":488,"implemented":false,"kind":"function","modifiers":[],"name":"schemaCounter","nameLocation":"14489:13:0","nodeType":"FunctionDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[],"src":"14502:2:0"},"returnParameters":{"id":487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":488,"src":"14528:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":485,"name":"uint64","nodeType":"ElementaryTypeName","src":"14528:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"14527:8:0"},"scope":495,"src":"14480:56:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"14542:125:0","text":" @notice Returns the current on-chain attestation counter. This is incremented for each `Attestation` made."},"functionSelector":"2c996e03","id":494,"implemented":false,"kind":"function","modifiers":[],"name":"attestationCounter","nameLocation":"14681:18:0","nodeType":"FunctionDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[],"src":"14699:2:0"},"returnParameters":{"id":493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":494,"src":"14725:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":491,"name":"uint64","nodeType":"ElementaryTypeName","src":"14725:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"14724:8:0"},"scope":495,"src":"14672:61:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":496,"src":"379:14356:0","usedErrors":[42,45,48,51,54,57,60,63,66,69,72,75,78],"usedEvents":[17,23,29,33,39]}],"src":"32:14704:0"},"id":0},"@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol":{"ast":{"absolutePath":"@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol","exportedSymbols":{"IERC20":[856],"ISPHook":[555]},"id":556,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":497,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":499,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":556,"sourceUnit":857,"src":"58:72:1","symbolAliases":[{"foreign":{"id":498,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"67:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ISPHook","contractDependencies":[],"contractKind":"interface","documentation":{"id":500,"nodeType":"StructuredDocumentation","src":"132:91:1","text":" @title SIGN Attestation Protocol Resolver Interface\n @author Jack Xu @ EthSign"},"fullyImplemented":false,"id":555,"linearizedBaseContracts":[555],"name":"ISPHook","nameLocation":"234:7:1","nodeType":"ContractDefinition","nodes":[{"functionSelector":"3398b4ed","id":511,"implemented":false,"kind":"function","modifiers":[],"name":"didReceiveAttestation","nameLocation":"257:21:1","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":502,"mutability":"mutable","name":"attester","nameLocation":"296:8:1","nodeType":"VariableDeclaration","scope":511,"src":"288:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":501,"name":"address","nodeType":"ElementaryTypeName","src":"288:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":504,"mutability":"mutable","name":"schemaId","nameLocation":"321:8:1","nodeType":"VariableDeclaration","scope":511,"src":"314:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":503,"name":"uint64","nodeType":"ElementaryTypeName","src":"314:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":506,"mutability":"mutable","name":"attestationId","nameLocation":"346:13:1","nodeType":"VariableDeclaration","scope":511,"src":"339:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":505,"name":"uint64","nodeType":"ElementaryTypeName","src":"339:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":508,"mutability":"mutable","name":"extraData","nameLocation":"384:9:1","nodeType":"VariableDeclaration","scope":511,"src":"369:24:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":507,"name":"bytes","nodeType":"ElementaryTypeName","src":"369:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"278:121:1"},"returnParameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"432:0:1"},"scope":555,"src":"248:185:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"4466507a","id":527,"implemented":false,"kind":"function","modifiers":[],"name":"didReceiveAttestation","nameLocation":"448:21:1","nodeType":"FunctionDefinition","parameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":513,"mutability":"mutable","name":"attester","nameLocation":"487:8:1","nodeType":"VariableDeclaration","scope":527,"src":"479:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"479:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":515,"mutability":"mutable","name":"schemaId","nameLocation":"512:8:1","nodeType":"VariableDeclaration","scope":527,"src":"505:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":514,"name":"uint64","nodeType":"ElementaryTypeName","src":"505:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":517,"mutability":"mutable","name":"attestationId","nameLocation":"537:13:1","nodeType":"VariableDeclaration","scope":527,"src":"530:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":516,"name":"uint64","nodeType":"ElementaryTypeName","src":"530:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":520,"mutability":"mutable","name":"resolverFeeERC20Token","nameLocation":"567:21:1","nodeType":"VariableDeclaration","scope":527,"src":"560:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$856","typeString":"contract IERC20"},"typeName":{"id":519,"nodeType":"UserDefinedTypeName","pathNode":{"id":518,"name":"IERC20","nameLocations":["560:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":856,"src":"560:6:1"},"referencedDeclaration":856,"src":"560:6:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$856","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":522,"mutability":"mutable","name":"resolverFeeERC20Amount","nameLocation":"606:22:1","nodeType":"VariableDeclaration","scope":527,"src":"598:30:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":521,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":524,"mutability":"mutable","name":"extraData","nameLocation":"653:9:1","nodeType":"VariableDeclaration","scope":527,"src":"638:24:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":523,"name":"bytes","nodeType":"ElementaryTypeName","src":"638:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"469:199:1"},"returnParameters":{"id":526,"nodeType":"ParameterList","parameters":[],"src":"685:0:1"},"scope":555,"src":"439:247:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e33361f4","id":538,"implemented":false,"kind":"function","modifiers":[],"name":"didReceiveRevocation","nameLocation":"701:20:1","nodeType":"FunctionDefinition","parameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":529,"mutability":"mutable","name":"attester","nameLocation":"739:8:1","nodeType":"VariableDeclaration","scope":538,"src":"731:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"731:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":531,"mutability":"mutable","name":"schemaId","nameLocation":"764:8:1","nodeType":"VariableDeclaration","scope":538,"src":"757:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":530,"name":"uint64","nodeType":"ElementaryTypeName","src":"757:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":533,"mutability":"mutable","name":"attestationId","nameLocation":"789:13:1","nodeType":"VariableDeclaration","scope":538,"src":"782:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":532,"name":"uint64","nodeType":"ElementaryTypeName","src":"782:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":535,"mutability":"mutable","name":"extraData","nameLocation":"827:9:1","nodeType":"VariableDeclaration","scope":538,"src":"812:24:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":534,"name":"bytes","nodeType":"ElementaryTypeName","src":"812:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"721:121:1"},"returnParameters":{"id":537,"nodeType":"ParameterList","parameters":[],"src":"875:0:1"},"scope":555,"src":"692:184:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"e830b5c7","id":554,"implemented":false,"kind":"function","modifiers":[],"name":"didReceiveRevocation","nameLocation":"891:20:1","nodeType":"FunctionDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":540,"mutability":"mutable","name":"attester","nameLocation":"929:8:1","nodeType":"VariableDeclaration","scope":554,"src":"921:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":542,"mutability":"mutable","name":"schemaId","nameLocation":"954:8:1","nodeType":"VariableDeclaration","scope":554,"src":"947:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":541,"name":"uint64","nodeType":"ElementaryTypeName","src":"947:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":544,"mutability":"mutable","name":"attestationId","nameLocation":"979:13:1","nodeType":"VariableDeclaration","scope":554,"src":"972:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":543,"name":"uint64","nodeType":"ElementaryTypeName","src":"972:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"resolverFeeERC20Token","nameLocation":"1009:21:1","nodeType":"VariableDeclaration","scope":554,"src":"1002:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$856","typeString":"contract IERC20"},"typeName":{"id":546,"nodeType":"UserDefinedTypeName","pathNode":{"id":545,"name":"IERC20","nameLocations":["1002:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":856,"src":"1002:6:1"},"referencedDeclaration":856,"src":"1002:6:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$856","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"resolverFeeERC20Amount","nameLocation":"1048:22:1","nodeType":"VariableDeclaration","scope":554,"src":"1040:30:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":548,"name":"uint256","nodeType":"ElementaryTypeName","src":"1040:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":551,"mutability":"mutable","name":"extraData","nameLocation":"1095:9:1","nodeType":"VariableDeclaration","scope":554,"src":"1080:24:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":550,"name":"bytes","nodeType":"ElementaryTypeName","src":"1080:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"911:199:1"},"returnParameters":{"id":553,"nodeType":"ParameterList","parameters":[],"src":"1127:0:1"},"scope":555,"src":"882:246:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":556,"src":"224:906:1","usedErrors":[],"usedEvents":[]}],"src":"32:1099:1"},"id":1},"@ethsign/sign-protocol-evm/src/interfaces/IVersionable.sol":{"ast":{"absolutePath":"@ethsign/sign-protocol-evm/src/interfaces/IVersionable.sol","exportedSymbols":{"IVersionable":[564]},"id":565,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":557,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IVersionable","contractDependencies":[],"contractKind":"interface","documentation":{"id":558,"nodeType":"StructuredDocumentation","src":"58:166:2","text":" @title IVersionable\n @author Jack Xu @ EthSign\n @dev This interface helps contracts to keep track of their versioning for upgrade compatibility checks."},"fullyImplemented":false,"id":564,"linearizedBaseContracts":[564],"name":"IVersionable","nameLocation":"235:12:2","nodeType":"ContractDefinition","nodes":[{"functionSelector":"54fd4d50","id":563,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"263:7:2","nodeType":"FunctionDefinition","parameters":{"id":559,"nodeType":"ParameterList","parameters":[],"src":"270:2:2"},"returnParameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":563,"src":"296:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":560,"name":"string","nodeType":"ElementaryTypeName","src":"296:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"295:15:2"},"scope":564,"src":"254:57:2","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":565,"src":"225:88:2","usedErrors":[],"usedEvents":[]}],"src":"32:282:2"},"id":2},"@ethsign/sign-protocol-evm/src/models/Attestation.sol":{"ast":{"absolutePath":"@ethsign/sign-protocol-evm/src/models/Attestation.sol","exportedSymbols":{"Attestation":[592],"DataLocation":[606],"OffchainAttestation":[598]},"id":599,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":566,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:3"},{"absolutePath":"@ethsign/sign-protocol-evm/src/models/DataLocation.sol","file":"./DataLocation.sol","id":568,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":599,"sourceUnit":607,"src":"58:50:3","symbolAliases":[{"foreign":{"id":567,"name":"DataLocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"67:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"Attestation","documentation":{"id":569,"nodeType":"StructuredDocumentation","src":"110:1292:3","text":" @title Attestation\n @author Jack Xu @ EthSign\n @notice This struct represents an on-chain attestation record. This record is not deleted after revocation.\n `schemaId`: The `Schema` that this Attestation is based on. It must exist.\n `linkedAttestationId`: Useful if the current Attestation references a previous Attestation. It can either be 0 or an\n existing attestation ID.\n `attestTimestamp`: When the attestation was made. This is automatically populated by `_attest(...)`.\n `revokeTimestamp`: When the attestation was revoked. This is automatically populated by `_revoke(...)`.\n `attester`: The attester. At this time, the attester must be the caller of `attest()`.\n `validUntil`: The expiration timestamp of the Attestation. Must respect `Schema.maxValidFor`. 0 indicates no\n expiration date.\n `dataLocation`: Where `Attestation.data` is stored. See `DataLocation.DataLocation`.\n `revoked`: If the Attestation has been revoked. It is possible to make a revoked Attestation.\n `recipients`: The intended ABI-encoded recipients of this Attestation. This is of type `bytes` to support non-EVM\n repicients.\n `data`: The raw data of the Attestation based on `Schema.schema`. There is no enforcement here, however. Recommended\n to use `abi.encode`."},"id":592,"members":[{"constant":false,"id":571,"mutability":"mutable","name":"schemaId","nameLocation":"1435:8:3","nodeType":"VariableDeclaration","scope":592,"src":"1428:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":570,"name":"uint64","nodeType":"ElementaryTypeName","src":"1428:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":573,"mutability":"mutable","name":"linkedAttestationId","nameLocation":"1456:19:3","nodeType":"VariableDeclaration","scope":592,"src":"1449:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":572,"name":"uint64","nodeType":"ElementaryTypeName","src":"1449:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":575,"mutability":"mutable","name":"attestTimestamp","nameLocation":"1488:15:3","nodeType":"VariableDeclaration","scope":592,"src":"1481:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":574,"name":"uint64","nodeType":"ElementaryTypeName","src":"1481:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":577,"mutability":"mutable","name":"revokeTimestamp","nameLocation":"1516:15:3","nodeType":"VariableDeclaration","scope":592,"src":"1509:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":576,"name":"uint64","nodeType":"ElementaryTypeName","src":"1509:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"attester","nameLocation":"1545:8:3","nodeType":"VariableDeclaration","scope":592,"src":"1537:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":578,"name":"address","nodeType":"ElementaryTypeName","src":"1537:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"validUntil","nameLocation":"1566:10:3","nodeType":"VariableDeclaration","scope":592,"src":"1559:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":580,"name":"uint64","nodeType":"ElementaryTypeName","src":"1559:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":584,"mutability":"mutable","name":"dataLocation","nameLocation":"1595:12:3","nodeType":"VariableDeclaration","scope":592,"src":"1582:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DataLocation_$606","typeString":"enum DataLocation"},"typeName":{"id":583,"nodeType":"UserDefinedTypeName","pathNode":{"id":582,"name":"DataLocation","nameLocations":["1582:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":606,"src":"1582:12:3"},"referencedDeclaration":606,"src":"1582:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_DataLocation_$606","typeString":"enum DataLocation"}},"visibility":"internal"},{"constant":false,"id":586,"mutability":"mutable","name":"revoked","nameLocation":"1618:7:3","nodeType":"VariableDeclaration","scope":592,"src":"1613:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":585,"name":"bool","nodeType":"ElementaryTypeName","src":"1613:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"recipients","nameLocation":"1639:10:3","nodeType":"VariableDeclaration","scope":592,"src":"1631:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":587,"name":"bytes","nodeType":"ElementaryTypeName","src":"1631:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":588,"nodeType":"ArrayTypeName","src":"1631:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":591,"mutability":"mutable","name":"data","nameLocation":"1661:4:3","nodeType":"VariableDeclaration","scope":592,"src":"1655:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":590,"name":"bytes","nodeType":"ElementaryTypeName","src":"1655:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Attestation","nameLocation":"1410:11:3","nodeType":"StructDefinition","scope":599,"src":"1403:265:3","visibility":"public"},{"canonicalName":"OffchainAttestation","documentation":{"id":593,"nodeType":"StructuredDocumentation","src":"1670:339:3","text":" @title OffchainAttestation\n @author Jack Xu @ EthSign\n @notice This struct represents an off-chain attestation record. This record is not deleted after revocation.\n `attester`: The attester. At this time, the attester must be the caller of `attestOffchain()`.\n `timestamp`: The `block.timestamp` of the function call."},"id":598,"members":[{"constant":false,"id":595,"mutability":"mutable","name":"attester","nameLocation":"2051:8:3","nodeType":"VariableDeclaration","scope":598,"src":"2043:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":594,"name":"address","nodeType":"ElementaryTypeName","src":"2043:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":597,"mutability":"mutable","name":"timestamp","nameLocation":"2072:9:3","nodeType":"VariableDeclaration","scope":598,"src":"2065:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":596,"name":"uint64","nodeType":"ElementaryTypeName","src":"2065:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"OffchainAttestation","nameLocation":"2017:19:3","nodeType":"StructDefinition","scope":599,"src":"2010:74:3","visibility":"public"}],"src":"32:2053:3"},"id":3},"@ethsign/sign-protocol-evm/src/models/DataLocation.sol":{"ast":{"absolutePath":"@ethsign/sign-protocol-evm/src/models/DataLocation.sol","exportedSymbols":{"DataLocation":[606]},"id":607,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":600,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:4"},{"canonicalName":"DataLocation","documentation":{"id":601,"nodeType":"StructuredDocumentation","src":"58:145:4","text":" @title DataLocation\n @author Jack Xu @ EthSign\n @notice This enum indicates where `Schema.data` and `Attestation.data` are stored."},"id":606,"members":[{"id":602,"name":"ONCHAIN","nameLocation":"228:7:4","nodeType":"EnumValue","src":"228:7:4"},{"id":603,"name":"ARWEAVE","nameLocation":"241:7:4","nodeType":"EnumValue","src":"241:7:4"},{"id":604,"name":"IPFS","nameLocation":"254:4:4","nodeType":"EnumValue","src":"254:4:4"},{"id":605,"name":"CUSTOM","nameLocation":"264:6:4","nodeType":"EnumValue","src":"264:6:4"}],"name":"DataLocation","nameLocation":"209:12:4","nodeType":"EnumDefinition","src":"204:68:4"}],"src":"32:241:4"},"id":4},"@ethsign/sign-protocol-evm/src/models/Schema.sol":{"ast":{"absolutePath":"@ethsign/sign-protocol-evm/src/models/Schema.sol","exportedSymbols":{"DataLocation":[606],"ISPHook":[555],"Schema":[630]},"id":631,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":608,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:5"},{"absolutePath":"@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol","file":"../interfaces/ISPHook.sol","id":610,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":556,"src":"58:52:5","symbolAliases":[{"foreign":{"id":609,"name":"ISPHook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"67:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@ethsign/sign-protocol-evm/src/models/DataLocation.sol","file":"./DataLocation.sol","id":612,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":607,"src":"111:50:5","symbolAliases":[{"foreign":{"id":611,"name":"DataLocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"120:12:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"Schema","documentation":{"id":613,"nodeType":"StructuredDocumentation","src":"163:908:5","text":" @title Schema\n @author Jack Xu @ EthSign\n @notice This struct represents an on-chain Schema that Attestations can conform to.\n `registrant`: The address that registered this schema.\n `revocable`: Whether Attestations that adopt this Schema can be revoked.\n `dataLocation`: Where `Schema.data` is stored. See `DataLocation.DataLocation`.\n `maxValidFor`: The maximum number of seconds that an Attestation can remain valid. 0 means Attestations can be valid\n forever. This is enforced through `Attestation.validUntil`.\n `hook`: The `ISPHook` that is called at the end of every function. 0 means there is no hook set. See\n `ISPHook`.\n `timestamp`: When the schema was registered. This is automatically populated by `_register(...)`.\n `data`: The raw schema that `Attestation.data` should follow. Since there is no way to enforce this, it is a `string`\n for easy readability."},"id":630,"members":[{"constant":false,"id":615,"mutability":"mutable","name":"registrant","nameLocation":"1100:10:5","nodeType":"VariableDeclaration","scope":630,"src":"1092:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":614,"name":"address","nodeType":"ElementaryTypeName","src":"1092:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":617,"mutability":"mutable","name":"revocable","nameLocation":"1121:9:5","nodeType":"VariableDeclaration","scope":630,"src":"1116:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":616,"name":"bool","nodeType":"ElementaryTypeName","src":"1116:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":620,"mutability":"mutable","name":"dataLocation","nameLocation":"1149:12:5","nodeType":"VariableDeclaration","scope":630,"src":"1136:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DataLocation_$606","typeString":"enum DataLocation"},"typeName":{"id":619,"nodeType":"UserDefinedTypeName","pathNode":{"id":618,"name":"DataLocation","nameLocations":["1136:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":606,"src":"1136:12:5"},"referencedDeclaration":606,"src":"1136:12:5","typeDescriptions":{"typeIdentifier":"t_enum$_DataLocation_$606","typeString":"enum DataLocation"}},"visibility":"internal"},{"constant":false,"id":622,"mutability":"mutable","name":"maxValidFor","nameLocation":"1174:11:5","nodeType":"VariableDeclaration","scope":630,"src":"1167:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":621,"name":"uint64","nodeType":"ElementaryTypeName","src":"1167:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":625,"mutability":"mutable","name":"hook","nameLocation":"1199:4:5","nodeType":"VariableDeclaration","scope":630,"src":"1191:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISPHook_$555","typeString":"contract ISPHook"},"typeName":{"id":624,"nodeType":"UserDefinedTypeName","pathNode":{"id":623,"name":"ISPHook","nameLocations":["1191:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":555,"src":"1191:7:5"},"referencedDeclaration":555,"src":"1191:7:5","typeDescriptions":{"typeIdentifier":"t_contract$_ISPHook_$555","typeString":"contract ISPHook"}},"visibility":"internal"},{"constant":false,"id":627,"mutability":"mutable","name":"timestamp","nameLocation":"1216:9:5","nodeType":"VariableDeclaration","scope":630,"src":"1209:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":626,"name":"uint64","nodeType":"ElementaryTypeName","src":"1209:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":629,"mutability":"mutable","name":"data","nameLocation":"1238:4:5","nodeType":"VariableDeclaration","scope":630,"src":"1231:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":628,"name":"string","nodeType":"ElementaryTypeName","src":"1231:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Schema","nameLocation":"1079:6:5","nodeType":"StructDefinition","scope":631,"src":"1072:173:5","visibility":"public"}],"src":"32:1214:5"},"id":5},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[886],"Ownable":[778]},"id":779,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":632,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":634,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":779,"sourceUnit":887,"src":"128:45:6","symbolAliases":[{"foreign":{"id":633,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"136:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":636,"name":"Context","nameLocations":["692:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":886,"src":"692:7:6"},"id":637,"nodeType":"InheritanceSpecifier","src":"692:7:6"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"175:487:6","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":778,"linearizedBaseContracts":[778,886],"name":"Ownable","nameLocation":"681:7:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":639,"mutability":"mutable","name":"_owner","nameLocation":"722:6:6","nodeType":"VariableDeclaration","scope":778,"src":"706:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":638,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":640,"nodeType":"StructuredDocumentation","src":"735:85:6","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":644,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:6","nodeType":"ErrorDefinition","parameters":{"id":643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"account","nameLocation":"866:7:6","nodeType":"VariableDeclaration","scope":644,"src":"858:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":641,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:6"},"src":"825:50:6"},{"documentation":{"id":645,"nodeType":"StructuredDocumentation","src":"881:82:6","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":649,"name":"OwnableInvalidOwner","nameLocation":"974:19:6","nodeType":"ErrorDefinition","parameters":{"id":648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":647,"mutability":"mutable","name":"owner","nameLocation":"1002:5:6","nodeType":"VariableDeclaration","scope":649,"src":"994:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:6"},"src":"968:41:6"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":655,"name":"OwnershipTransferred","nameLocation":"1021:20:6","nodeType":"EventDefinition","parameters":{"id":654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":651,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:6","nodeType":"VariableDeclaration","scope":655,"src":"1042:29:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":650,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":653,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:6","nodeType":"VariableDeclaration","scope":655,"src":"1073:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":652,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:6"},"src":"1015:84:6"},{"body":{"id":680,"nodeType":"Block","src":"1259:153:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":661,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"1273:12:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":662,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:6","typeDescriptions":{}}},"id":665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":675,"nodeType":"IfStatement","src":"1269:95:6","trueBody":{"id":674,"nodeType":"Block","src":"1301:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":668,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:6","typeDescriptions":{}}},"id":671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":667,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"1322:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":673,"nodeType":"RevertStatement","src":"1315:38:6"}]}},{"expression":{"arguments":[{"id":677,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"1392:12:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":676,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"1373:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":679,"nodeType":"ExpressionStatement","src":"1373:32:6"}]},"documentation":{"id":656,"nodeType":"StructuredDocumentation","src":"1105:115:6","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":681,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":658,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:6","nodeType":"VariableDeclaration","scope":681,"src":"1237:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":657,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:6"},"returnParameters":{"id":660,"nodeType":"ParameterList","parameters":[],"src":"1259:0:6"},"scope":778,"src":"1225:187:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":688,"nodeType":"Block","src":"1521:41:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":684,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"1531:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":686,"nodeType":"ExpressionStatement","src":"1531:13:6"},{"id":687,"nodeType":"PlaceholderStatement","src":"1554:1:6"}]},"documentation":{"id":682,"nodeType":"StructuredDocumentation","src":"1418:77:6","text":" @dev Throws if called by any account other than the owner."},"id":689,"name":"onlyOwner","nameLocation":"1509:9:6","nodeType":"ModifierDefinition","parameters":{"id":683,"nodeType":"ParameterList","parameters":[],"src":"1518:2:6"},"src":"1500:62:6","virtual":false,"visibility":"internal"},{"body":{"id":697,"nodeType":"Block","src":"1693:30:6","statements":[{"expression":{"id":695,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"1710:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":694,"id":696,"nodeType":"Return","src":"1703:13:6"}]},"documentation":{"id":690,"nodeType":"StructuredDocumentation","src":"1568:65:6","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":698,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:6","nodeType":"FunctionDefinition","parameters":{"id":691,"nodeType":"ParameterList","parameters":[],"src":"1652:2:6"},"returnParameters":{"id":694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":698,"src":"1684:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:6"},"scope":778,"src":"1638:85:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":714,"nodeType":"Block","src":"1841:117:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":702,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"1855:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":704,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"1866:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":713,"nodeType":"IfStatement","src":"1851:101:6","trueBody":{"id":712,"nodeType":"Block","src":"1880:72:6","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":708,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"1928:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":707,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"1901:26:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":711,"nodeType":"RevertStatement","src":"1894:47:6"}]}}]},"documentation":{"id":699,"nodeType":"StructuredDocumentation","src":"1729:62:6","text":" @dev Throws if the sender is not the owner."},"id":715,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:6","nodeType":"FunctionDefinition","parameters":{"id":700,"nodeType":"ParameterList","parameters":[],"src":"1816:2:6"},"returnParameters":{"id":701,"nodeType":"ParameterList","parameters":[],"src":"1841:0:6"},"scope":778,"src":"1796:162:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":728,"nodeType":"Block","src":"2347:47:6","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":722,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:6","typeDescriptions":{}}},"id":725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":721,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"2357:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":727,"nodeType":"ExpressionStatement","src":"2357:30:6"}]},"documentation":{"id":716,"nodeType":"StructuredDocumentation","src":"1964:324:6","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":729,"implemented":true,"kind":"function","modifiers":[{"id":719,"kind":"modifierInvocation","modifierName":{"id":718,"name":"onlyOwner","nameLocations":["2337:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":689,"src":"2337:9:6"},"nodeType":"ModifierInvocation","src":"2337:9:6"}],"name":"renounceOwnership","nameLocation":"2302:17:6","nodeType":"FunctionDefinition","parameters":{"id":717,"nodeType":"ParameterList","parameters":[],"src":"2319:2:6"},"returnParameters":{"id":720,"nodeType":"ParameterList","parameters":[],"src":"2347:0:6"},"scope":778,"src":"2293:101:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":756,"nodeType":"Block","src":"2613:145:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":737,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"2627:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":738,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:6","typeDescriptions":{}}},"id":741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":751,"nodeType":"IfStatement","src":"2623:91:6","trueBody":{"id":750,"nodeType":"Block","src":"2651:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":744,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:6","typeDescriptions":{}}},"id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":743,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"2672:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":749,"nodeType":"RevertStatement","src":"2665:38:6"}]}},{"expression":{"arguments":[{"id":753,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"2742:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":752,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"2723:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":755,"nodeType":"ExpressionStatement","src":"2723:28:6"}]},"documentation":{"id":730,"nodeType":"StructuredDocumentation","src":"2400:138:6","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":757,"implemented":true,"kind":"function","modifiers":[{"id":735,"kind":"modifierInvocation","modifierName":{"id":734,"name":"onlyOwner","nameLocations":["2603:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":689,"src":"2603:9:6"},"nodeType":"ModifierInvocation","src":"2603:9:6"}],"name":"transferOwnership","nameLocation":"2552:17:6","nodeType":"FunctionDefinition","parameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:6","nodeType":"VariableDeclaration","scope":757,"src":"2570:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:6"},"returnParameters":{"id":736,"nodeType":"ParameterList","parameters":[],"src":"2613:0:6"},"scope":778,"src":"2543:215:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":776,"nodeType":"Block","src":"2975:124:6","statements":[{"assignments":[764],"declarations":[{"constant":false,"id":764,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:6","nodeType":"VariableDeclaration","scope":776,"src":"2985:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":763,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":766,"initialValue":{"id":765,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"3004:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:6"},{"expression":{"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":767,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"3020:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":768,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"3029:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":770,"nodeType":"ExpressionStatement","src":"3020:17:6"},{"eventCall":{"arguments":[{"id":772,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"3073:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":773,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"3083:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":771,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"3052:20:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":775,"nodeType":"EmitStatement","src":"3047:45:6"}]},"documentation":{"id":758,"nodeType":"StructuredDocumentation","src":"2764:143:6","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":777,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:6","nodeType":"FunctionDefinition","parameters":{"id":761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":760,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:6","nodeType":"VariableDeclaration","scope":777,"src":"2940:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":759,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:6"},"returnParameters":{"id":762,"nodeType":"ParameterList","parameters":[],"src":"2975:0:6"},"scope":778,"src":"2912:187:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":779,"src":"663:2438:6","usedErrors":[644,649],"usedEvents":[655]}],"src":"102:3000:6"},"id":6},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[856]},"id":857,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":780,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"132:70:7","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":856,"linearizedBaseContracts":[856],"name":"IERC20","nameLocation":"213:6:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":782,"nodeType":"StructuredDocumentation","src":"226:158:7","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":790,"name":"Transfer","nameLocation":"395:8:7","nodeType":"EventDefinition","parameters":{"id":789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":784,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:7","nodeType":"VariableDeclaration","scope":790,"src":"404:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":783,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":786,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:7","nodeType":"VariableDeclaration","scope":790,"src":"426:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":788,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:7","nodeType":"VariableDeclaration","scope":790,"src":"446:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":787,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:7"},"src":"389:72:7"},{"anonymous":false,"documentation":{"id":791,"nodeType":"StructuredDocumentation","src":"467:148:7","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":799,"name":"Approval","nameLocation":"626:8:7","nodeType":"EventDefinition","parameters":{"id":798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":793,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:7","nodeType":"VariableDeclaration","scope":799,"src":"635:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":792,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":795,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:7","nodeType":"VariableDeclaration","scope":799,"src":"658:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":794,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":797,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:7","nodeType":"VariableDeclaration","scope":799,"src":"683:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":796,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:7"},"src":"620:78:7"},{"documentation":{"id":800,"nodeType":"StructuredDocumentation","src":"704:65:7","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":805,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:7","nodeType":"FunctionDefinition","parameters":{"id":801,"nodeType":"ParameterList","parameters":[],"src":"794:2:7"},"returnParameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":805,"src":"820:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":802,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:7"},"scope":856,"src":"774:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":806,"nodeType":"StructuredDocumentation","src":"835:71:7","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":813,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:7","nodeType":"FunctionDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"account","nameLocation":"938:7:7","nodeType":"VariableDeclaration","scope":813,"src":"930:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:7"},"returnParameters":{"id":812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":813,"src":"970:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":810,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:7"},"scope":856,"src":"911:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":814,"nodeType":"StructuredDocumentation","src":"985:213:7","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":823,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:7","nodeType":"FunctionDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":816,"mutability":"mutable","name":"to","nameLocation":"1229:2:7","nodeType":"VariableDeclaration","scope":823,"src":"1221:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":818,"mutability":"mutable","name":"value","nameLocation":"1241:5:7","nodeType":"VariableDeclaration","scope":823,"src":"1233:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:7"},"returnParameters":{"id":822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":823,"src":"1266:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":820,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:7"},"scope":856,"src":"1203:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":824,"nodeType":"StructuredDocumentation","src":"1278:264:7","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":833,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:7","nodeType":"FunctionDefinition","parameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":826,"mutability":"mutable","name":"owner","nameLocation":"1574:5:7","nodeType":"VariableDeclaration","scope":833,"src":"1566:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":825,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":828,"mutability":"mutable","name":"spender","nameLocation":"1589:7:7","nodeType":"VariableDeclaration","scope":833,"src":"1581:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":827,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:7"},"returnParameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":833,"src":"1621:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":830,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:7"},"scope":856,"src":"1547:83:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":834,"nodeType":"StructuredDocumentation","src":"1636:667:7","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":843,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:7","nodeType":"FunctionDefinition","parameters":{"id":839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":836,"mutability":"mutable","name":"spender","nameLocation":"2333:7:7","nodeType":"VariableDeclaration","scope":843,"src":"2325:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":835,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":838,"mutability":"mutable","name":"value","nameLocation":"2350:5:7","nodeType":"VariableDeclaration","scope":843,"src":"2342:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":837,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:7"},"returnParameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":843,"src":"2375:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":840,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:7"},"scope":856,"src":"2308:73:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":844,"nodeType":"StructuredDocumentation","src":"2387:297:7","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":855,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:7","nodeType":"FunctionDefinition","parameters":{"id":851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":846,"mutability":"mutable","name":"from","nameLocation":"2719:4:7","nodeType":"VariableDeclaration","scope":855,"src":"2711:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"to","nameLocation":"2733:2:7","nodeType":"VariableDeclaration","scope":855,"src":"2725:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":847,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":850,"mutability":"mutable","name":"value","nameLocation":"2745:5:7","nodeType":"VariableDeclaration","scope":855,"src":"2737:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":849,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:7"},"returnParameters":{"id":854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":855,"src":"2770:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":852,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:7"},"scope":856,"src":"2689:87:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":857,"src":"203:2575:7","usedErrors":[],"usedEvents":[790,799]}],"src":"106:2673:7"},"id":7},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[886]},"id":887,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":858,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:8"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":859,"nodeType":"StructuredDocumentation","src":"127:496:8","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":886,"linearizedBaseContracts":[886],"name":"Context","nameLocation":"642:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":867,"nodeType":"Block","src":"718:34:8","statements":[{"expression":{"expression":{"id":864,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:8","memberName":"sender","nodeType":"MemberAccess","src":"735:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":863,"id":866,"nodeType":"Return","src":"728:17:8"}]},"id":868,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:8","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[],"src":"675:2:8"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":868,"src":"709:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:8"},"scope":886,"src":"656:96:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":876,"nodeType":"Block","src":"825:32:8","statements":[{"expression":{"expression":{"id":873,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:8","memberName":"data","nodeType":"MemberAccess","src":"842:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":872,"id":875,"nodeType":"Return","src":"835:15:8"}]},"id":877,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:8","nodeType":"FunctionDefinition","parameters":{"id":869,"nodeType":"ParameterList","parameters":[],"src":"775:2:8"},"returnParameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":877,"src":"809:14:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":870,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:8"},"scope":886,"src":"758:99:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":884,"nodeType":"Block","src":"935:25:8","statements":[{"expression":{"hexValue":"30","id":882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":881,"id":883,"nodeType":"Return","src":"945:8:8"}]},"id":885,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:8","nodeType":"FunctionDefinition","parameters":{"id":878,"nodeType":"ParameterList","parameters":[],"src":"892:2:8"},"returnParameters":{"id":881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":885,"src":"926:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":879,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:8"},"scope":886,"src":"863:97:8","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":887,"src":"624:338:8","usedErrors":[],"usedEvents":[]}],"src":"101:862:8"},"id":8},"contracts/EducationalCredential.sol":{"ast":{"absolutePath":"contracts/EducationalCredential.sol","exportedSymbols":{"EducationalCredential":[1237],"ISP":[495],"Ownable":[778]},"id":1238,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":888,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:9"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":890,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1238,"sourceUnit":779,"src":"57:69:9","symbolAliases":[{"foreign":{"id":889,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"66:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@ethsign/sign-protocol-evm/src/interfaces/ISP.sol","file":"@ethsign/sign-protocol-evm/src/interfaces/ISP.sol","id":892,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1238,"sourceUnit":496,"src":"127:72:9","symbolAliases":[{"foreign":{"id":891,"name":"ISP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"136:3:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":893,"name":"Ownable","nameLocations":["235:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":778,"src":"235:7:9"},"id":894,"nodeType":"InheritanceSpecifier","src":"235:7:9"}],"canonicalName":"EducationalCredential","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1237,"linearizedBaseContracts":[1237,778,886],"name":"EducationalCredential","nameLocation":"210:21:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EducationalCredential.Credential","id":899,"members":[{"constant":false,"id":896,"mutability":"mutable","name":"course","nameLocation":"284:6:9","nodeType":"VariableDeclaration","scope":899,"src":"277:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":895,"name":"string","nodeType":"ElementaryTypeName","src":"277:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":898,"mutability":"mutable","name":"issueDate","nameLocation":"308:9:9","nodeType":"VariableDeclaration","scope":899,"src":"300:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":897,"name":"uint256","nodeType":"ElementaryTypeName","src":"300:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Credential","nameLocation":"256:10:9","nodeType":"StructDefinition","scope":1237,"src":"249:75:9","visibility":"public"},{"constant":false,"functionSelector":"a8c5dc33","id":902,"mutability":"mutable","name":"spInstance","nameLocation":"341:10:9","nodeType":"VariableDeclaration","scope":1237,"src":"330:21:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISP_$495","typeString":"contract ISP"},"typeName":{"id":901,"nodeType":"UserDefinedTypeName","pathNode":{"id":900,"name":"ISP","nameLocations":["330:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":495,"src":"330:3:9"},"referencedDeclaration":495,"src":"330:3:9","typeDescriptions":{"typeIdentifier":"t_contract$_ISP_$495","typeString":"contract ISP"}},"visibility":"public"},{"constant":true,"functionSelector":"04dd8046","id":905,"mutability":"constant","name":"CREDENTIAL_SCHEMA_ID","nameLocation":"380:20:9","nodeType":"VariableDeclaration","scope":1237,"src":"357:47:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":903,"name":"uint64","nodeType":"ElementaryTypeName","src":"357:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":{"hexValue":"31","id":904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"403:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":false,"id":911,"mutability":"mutable","name":"credentials","nameLocation":"479:11:9","nodeType":"VariableDeclaration","scope":1237,"src":"438:52:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Credential_$899_storage_$dyn_storage_$","typeString":"mapping(address => struct EducationalCredential.Credential[])"},"typeName":{"id":910,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"446:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"438:32:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Credential_$899_storage_$dyn_storage_$","typeString":"mapping(address => struct EducationalCredential.Credential[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":908,"nodeType":"UserDefinedTypeName","pathNode":{"id":907,"name":"Credential","nameLocations":["457:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":899,"src":"457:10:9"},"referencedDeclaration":899,"src":"457:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Credential_$899_storage_ptr","typeString":"struct EducationalCredential.Credential"}},"id":909,"nodeType":"ArrayTypeName","src":"457:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Credential_$899_storage_$dyn_storage_ptr","typeString":"struct EducationalCredential.Credential[]"}}},"visibility":"private"},{"anonymous":false,"eventSelector":"3cdce538b6db111fcf97c8cdfc0f65dcd4c7eaeea28abf410f46ad76daed828b","id":921,"name":"CredentialIssued","nameLocation":"503:16:9","nodeType":"EventDefinition","parameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":913,"indexed":true,"mutability":"mutable","name":"institution","nameLocation":"536:11:9","nodeType":"VariableDeclaration","scope":921,"src":"520:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":912,"name":"address","nodeType":"ElementaryTypeName","src":"520:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":915,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"565:9:9","nodeType":"VariableDeclaration","scope":921,"src":"549:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":914,"name":"address","nodeType":"ElementaryTypeName","src":"549:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":917,"indexed":false,"mutability":"mutable","name":"course","nameLocation":"583:6:9","nodeType":"VariableDeclaration","scope":921,"src":"576:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":916,"name":"string","nodeType":"ElementaryTypeName","src":"576:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":919,"indexed":false,"mutability":"mutable","name":"issueDate","nameLocation":"599:9:9","nodeType":"VariableDeclaration","scope":921,"src":"591:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":918,"name":"uint256","nodeType":"ElementaryTypeName","src":"591:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"519:90:9"},"src":"497:113:9"},{"body":{"id":946,"nodeType":"Block","src":"677:133:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":931,"name":"spInstanceAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"695:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"724:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"716:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":932,"name":"address","nodeType":"ElementaryTypeName","src":"716:7:9","typeDescriptions":{}}},"id":935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"716:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"695:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420535020696e7374616e63652061646472657373","id":937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"728:29:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8dd3191f3dcc39739dca1bcaf395cf1761dcb1f4ca0dd96a0d29ee3f0de65f4","typeString":"literal_string \"Invalid SP instance address\""},"value":"Invalid SP instance address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c8dd3191f3dcc39739dca1bcaf395cf1761dcb1f4ca0dd96a0d29ee3f0de65f4","typeString":"literal_string \"Invalid SP instance address\""}],"id":930,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"687:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"687:71:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":939,"nodeType":"ExpressionStatement","src":"687:71:9"},{"expression":{"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":940,"name":"spInstance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"768:10:9","typeDescriptions":{"typeIdentifier":"t_contract$_ISP_$495","typeString":"contract ISP"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":942,"name":"spInstanceAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"785:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":941,"name":"ISP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"781:3:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISP_$495_$","typeString":"type(contract ISP)"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"781:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISP_$495","typeString":"contract ISP"}},"src":"768:35:9","typeDescriptions":{"typeIdentifier":"t_contract$_ISP_$495","typeString":"contract ISP"}},"id":945,"nodeType":"ExpressionStatement","src":"768:35:9"}]},"id":947,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":926,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"663:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"663:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":928,"kind":"baseConstructorSpecifier","modifierName":{"id":925,"name":"Ownable","nameLocations":["655:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":778,"src":"655:7:9"},"nodeType":"ModifierInvocation","src":"655:21:9"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":923,"mutability":"mutable","name":"spInstanceAddress","nameLocation":"636:17:9","nodeType":"VariableDeclaration","scope":947,"src":"628:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":922,"name":"address","nodeType":"ElementaryTypeName","src":"628:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"627:27:9"},"returnParameters":{"id":929,"nodeType":"ParameterList","parameters":[],"src":"677:0:9"},"scope":1237,"src":"616:194:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":970,"nodeType":"Block","src":"876:115:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":955,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"894:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"914:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"906:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"906:7:9","typeDescriptions":{}}},"id":959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"906:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"894:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420535020696e7374616e63652061646472657373","id":961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"918:29:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8dd3191f3dcc39739dca1bcaf395cf1761dcb1f4ca0dd96a0d29ee3f0de65f4","typeString":"literal_string \"Invalid SP instance address\""},"value":"Invalid SP instance address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c8dd3191f3dcc39739dca1bcaf395cf1761dcb1f4ca0dd96a0d29ee3f0de65f4","typeString":"literal_string \"Invalid SP instance address\""}],"id":954,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"886:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"886:62:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":963,"nodeType":"ExpressionStatement","src":"886:62:9"},{"expression":{"id":968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":964,"name":"spInstance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"958:10:9","typeDescriptions":{"typeIdentifier":"t_contract$_ISP_$495","typeString":"contract ISP"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":966,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"975:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":965,"name":"ISP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"971:3:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISP_$495_$","typeString":"type(contract ISP)"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"971:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISP_$495","typeString":"contract ISP"}},"src":"958:26:9","typeDescriptions":{"typeIdentifier":"t_contract$_ISP_$495","typeString":"contract ISP"}},"id":969,"nodeType":"ExpressionStatement","src":"958:26:9"}]},"functionSelector":"8e9d660f","id":971,"implemented":true,"kind":"function","modifiers":[{"id":952,"kind":"modifierInvocation","modifierName":{"id":951,"name":"onlyOwner","nameLocations":["866:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":689,"src":"866:9:9"},"nodeType":"ModifierInvocation","src":"866:9:9"}],"name":"setSPInstance","nameLocation":"825:13:9","nodeType":"FunctionDefinition","parameters":{"id":950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":949,"mutability":"mutable","name":"instance","nameLocation":"847:8:9","nodeType":"VariableDeclaration","scope":971,"src":"839:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":948,"name":"address","nodeType":"ElementaryTypeName","src":"839:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"838:18:9"},"returnParameters":{"id":953,"nodeType":"ParameterList","parameters":[],"src":"876:0:9"},"scope":1237,"src":"816:175:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1046,"nodeType":"Block","src":"1131:569:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":983,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"1149:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1170:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1162:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"1162:7:9","typeDescriptions":{}}},"id":987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1162:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1149:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420726563697069656e742061646472657373","id":989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1174:27:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df","typeString":"literal_string \"Invalid recipient address\""},"value":"Invalid recipient address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df","typeString":"literal_string \"Invalid recipient address\""}],"id":982,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1141:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1141:61:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":991,"nodeType":"ExpressionStatement","src":"1141:61:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":995,"name":"course","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"1226:6:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":993,"name":"bytes","nodeType":"ElementaryTypeName","src":"1220:5:9","typeDescriptions":{}}},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1234:6:9","memberName":"length","nodeType":"MemberAccess","src":"1220:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1243:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1220:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f75727365206e616d652063616e6e6f7420626520656d707479","id":1000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1246:29:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988","typeString":"literal_string \"Course name cannot be empty\""},"value":"Course name cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988","typeString":"literal_string \"Course name cannot be empty\""}],"id":992,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1212:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1212:64:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1002,"nodeType":"ExpressionStatement","src":"1212:64:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1004,"name":"issueDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"1294:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1005,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1307:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1313:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"1307:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1294:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"497373756520646174652063616e6e6f7420626520696e2074686520667574757265","id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1324:36:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97","typeString":"literal_string \"Issue date cannot be in the future\""},"value":"Issue date cannot be in the future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97","typeString":"literal_string \"Issue date cannot be in the future\""}],"id":1003,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1286:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1286:75:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1010,"nodeType":"ExpressionStatement","src":"1286:75:9"},{"assignments":[1012],"declarations":[{"constant":false,"id":1012,"mutability":"mutable","name":"isValid","nameLocation":"1413:7:9","nodeType":"VariableDeclaration","scope":1046,"src":"1408:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1011,"name":"bool","nodeType":"ElementaryTypeName","src":"1408:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1022,"initialValue":{"arguments":[{"id":1014,"name":"CREDENTIAL_SCHEMA_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"1434:20:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"arguments":[{"id":1017,"name":"course","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"1467:6:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1018,"name":"issueDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"1475:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1015,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1456:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1460:6:9","memberName":"encode","nodeType":"MemberAccess","src":"1456:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1456:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1020,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"1487:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1013,"name":"schemaHook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"1423:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint64_$_t_bytes_memory_ptr_$_t_address_$returns$_t_bool_$","typeString":"function (uint64,bytes memory,address) view returns (bool)"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1423:74:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"1408:89:9"},{"expression":{"arguments":[{"id":1024,"name":"isValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"1515:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"446174612076616c69646174696f6e206661696c6564","id":1025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1524:24:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_df29a3d526a469d88dc1aca906946c8fa4e298109faf667a9cf40dbe115c170b","typeString":"literal_string \"Data validation failed\""},"value":"Data validation failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df29a3d526a469d88dc1aca906946c8fa4e298109faf667a9cf40dbe115c170b","typeString":"literal_string \"Data validation failed\""}],"id":1023,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1507:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1507:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1027,"nodeType":"ExpressionStatement","src":"1507:42:9"},{"expression":{"arguments":[{"arguments":[{"id":1033,"name":"course","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"1599:6:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1034,"name":"issueDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"1607:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1032,"name":"Credential","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"1588:10:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Credential_$899_storage_ptr_$","typeString":"type(struct EducationalCredential.Credential storage pointer)"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1588:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Credential_$899_memory_ptr","typeString":"struct EducationalCredential.Credential memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Credential_$899_memory_ptr","typeString":"struct EducationalCredential.Credential memory"}],"expression":{"baseExpression":{"id":1028,"name":"credentials","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"1560:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Credential_$899_storage_$dyn_storage_$","typeString":"mapping(address => struct EducationalCredential.Credential storage ref[] storage ref)"}},"id":1030,"indexExpression":{"id":1029,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"1572:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1560:22:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Credential_$899_storage_$dyn_storage","typeString":"struct EducationalCredential.Credential storage ref[] storage ref"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1583:4:9","memberName":"push","nodeType":"MemberAccess","src":"1560:27:9","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Credential_$899_storage_$dyn_storage_ptr_$_t_struct$_Credential_$899_storage_$returns$__$attached_to$_t_array$_t_struct$_Credential_$899_storage_$dyn_storage_ptr_$","typeString":"function (struct EducationalCredential.Credential storage ref[] storage pointer,struct EducationalCredential.Credential storage ref)"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1560:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1037,"nodeType":"ExpressionStatement","src":"1560:58:9"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1039,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"1650:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1650:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1041,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"1664:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1042,"name":"course","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"1675:6:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1043,"name":"issueDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"1683:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1038,"name":"CredentialIssued","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"1633:16:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,address,string memory,uint256)"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1633:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1045,"nodeType":"EmitStatement","src":"1628:65:9"}]},"functionSelector":"8e9841d0","id":1047,"implemented":true,"kind":"function","modifiers":[{"id":980,"kind":"modifierInvocation","modifierName":{"id":979,"name":"onlyOwner","nameLocations":["1121:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":689,"src":"1121:9:9"},"nodeType":"ModifierInvocation","src":"1121:9:9"}],"name":"issueCredential","nameLocation":"1006:15:9","nodeType":"FunctionDefinition","parameters":{"id":978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":973,"mutability":"mutable","name":"recipient","nameLocation":"1039:9:9","nodeType":"VariableDeclaration","scope":1047,"src":"1031:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":972,"name":"address","nodeType":"ElementaryTypeName","src":"1031:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":975,"mutability":"mutable","name":"course","nameLocation":"1072:6:9","nodeType":"VariableDeclaration","scope":1047,"src":"1058:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":974,"name":"string","nodeType":"ElementaryTypeName","src":"1058:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":977,"mutability":"mutable","name":"issueDate","nameLocation":"1096:9:9","nodeType":"VariableDeclaration","scope":1047,"src":"1088:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":976,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1021:90:9"},"returnParameters":{"id":981,"nodeType":"ParameterList","parameters":[],"src":"1131:0:9"},"scope":1237,"src":"997:703:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1122,"nodeType":"Block","src":"1823:451:9","statements":[{"assignments":[1062],"declarations":[{"constant":false,"id":1062,"mutability":"mutable","name":"userCredentials","nameLocation":"1853:15:9","nodeType":"VariableDeclaration","scope":1122,"src":"1833:35:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Credential_$899_memory_ptr_$dyn_memory_ptr","typeString":"struct EducationalCredential.Credential[]"},"typeName":{"baseType":{"id":1060,"nodeType":"UserDefinedTypeName","pathNode":{"id":1059,"name":"Credential","nameLocations":["1833:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":899,"src":"1833:10:9"},"referencedDeclaration":899,"src":"1833:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Credential_$899_storage_ptr","typeString":"struct EducationalCredential.Credential"}},"id":1061,"nodeType":"ArrayTypeName","src":"1833:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Credential_$899_storage_$dyn_storage_ptr","typeString":"struct EducationalCredential.Credential[]"}},"visibility":"internal"}],"id":1066,"initialValue":{"baseExpression":{"id":1063,"name":"credentials","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"1871:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Credential_$899_storage_$dyn_storage_$","typeString":"mapping(address => struct EducationalCredential.Credential storage ref[] storage ref)"}},"id":1065,"indexExpression":{"id":1064,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"1883:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1871:19:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Credential_$899_storage_$dyn_storage","typeString":"struct EducationalCredential.Credential storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1833:57:9"},{"assignments":[1068],"declarations":[{"constant":false,"id":1068,"mutability":"mutable","name":"credentialCount","nameLocation":"1908:15:9","nodeType":"VariableDeclaration","scope":1122,"src":"1900:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1067,"name":"uint256","nodeType":"ElementaryTypeName","src":"1900:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1071,"initialValue":{"expression":{"id":1069,"name":"userCredentials","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"1926:15:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Credential_$899_memory_ptr_$dyn_memory_ptr","typeString":"struct EducationalCredential.Credential memory[] memory"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1942:6:9","memberName":"length","nodeType":"MemberAccess","src":"1926:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1900:48:9"},{"expression":{"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1072,"name":"courses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"1959:7:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1076,"name":"credentialCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"1982:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1969:12:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":1073,"name":"string","nodeType":"ElementaryTypeName","src":"1973:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1074,"nodeType":"ArrayTypeName","src":"1973:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1969:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"src":"1959:39:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":1079,"nodeType":"ExpressionStatement","src":"1959:39:9"},{"expression":{"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1080,"name":"issueDates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"2008:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1084,"name":"credentialCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"2035:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2021:13:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1081,"name":"uint256","nodeType":"ElementaryTypeName","src":"2025:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1082,"nodeType":"ArrayTypeName","src":"2025:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2021:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"2008:43:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1087,"nodeType":"ExpressionStatement","src":"2008:43:9"},{"body":{"id":1116,"nodeType":"Block","src":"2108:121:9","statements":[{"expression":{"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1098,"name":"courses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"2122:7:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":1100,"indexExpression":{"id":1099,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"2130:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2122:10:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1101,"name":"userCredentials","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"2135:15:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Credential_$899_memory_ptr_$dyn_memory_ptr","typeString":"struct EducationalCredential.Credential memory[] memory"}},"id":1103,"indexExpression":{"id":1102,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"2151:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2135:18:9","typeDescriptions":{"typeIdentifier":"t_struct$_Credential_$899_memory_ptr","typeString":"struct EducationalCredential.Credential memory"}},"id":1104,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2154:6:9","memberName":"course","nodeType":"MemberAccess","referencedDeclaration":896,"src":"2135:25:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2122:38:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":1106,"nodeType":"ExpressionStatement","src":"2122:38:9"},{"expression":{"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1107,"name":"issueDates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"2174:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1109,"indexExpression":{"id":1108,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"2185:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2174:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1110,"name":"userCredentials","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"2190:15:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Credential_$899_memory_ptr_$dyn_memory_ptr","typeString":"struct EducationalCredential.Credential memory[] memory"}},"id":1112,"indexExpression":{"id":1111,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"2206:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2190:18:9","typeDescriptions":{"typeIdentifier":"t_struct$_Credential_$899_memory_ptr","typeString":"struct EducationalCredential.Credential memory"}},"id":1113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2209:9:9","memberName":"issueDate","nodeType":"MemberAccess","referencedDeclaration":898,"src":"2190:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2174:44:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1115,"nodeType":"ExpressionStatement","src":"2174:44:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1092,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"2082:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1093,"name":"credentialCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"2086:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2082:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1117,"initializationExpression":{"assignments":[1089],"declarations":[{"constant":false,"id":1089,"mutability":"mutable","name":"i","nameLocation":"2075:1:9","nodeType":"VariableDeclaration","scope":1117,"src":"2067:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1088,"name":"uint256","nodeType":"ElementaryTypeName","src":"2067:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1091,"initialValue":{"hexValue":"30","id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2079:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2067:13:9"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2103:3:9","subExpression":{"id":1095,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"2103:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1097,"nodeType":"ExpressionStatement","src":"2103:3:9"},"nodeType":"ForStatement","src":"2062:167:9"},{"expression":{"components":[{"id":1118,"name":"courses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"2247:7:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},{"id":1119,"name":"issueDates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"2256:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":1120,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2246:21:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(string memory[] memory,uint256[] memory)"}},"functionReturnParameters":1057,"id":1121,"nodeType":"Return","src":"2239:28:9"}]},"functionSelector":"84270608","id":1123,"implemented":true,"kind":"function","modifiers":[],"name":"getCredentials","nameLocation":"1715:14:9","nodeType":"FunctionDefinition","parameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"wallet","nameLocation":"1738:6:9","nodeType":"VariableDeclaration","scope":1123,"src":"1730:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"1730:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1729:16:9"},"returnParameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1053,"mutability":"mutable","name":"courses","nameLocation":"1785:7:9","nodeType":"VariableDeclaration","scope":1123,"src":"1769:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1051,"name":"string","nodeType":"ElementaryTypeName","src":"1769:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1052,"nodeType":"ArrayTypeName","src":"1769:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":1056,"mutability":"mutable","name":"issueDates","nameLocation":"1811:10:9","nodeType":"VariableDeclaration","scope":1123,"src":"1794:27:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1054,"name":"uint256","nodeType":"ElementaryTypeName","src":"1794:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1055,"nodeType":"ArrayTypeName","src":"1794:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1768:54:9"},"scope":1237,"src":"1706:568:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1171,"nodeType":"Block","src":"2401:338:9","statements":[{"assignments":[1138],"declarations":[{"constant":false,"id":1138,"mutability":"mutable","name":"userCredentials","nameLocation":"2431:15:9","nodeType":"VariableDeclaration","scope":1171,"src":"2411:35:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Credential_$899_memory_ptr_$dyn_memory_ptr","typeString":"struct EducationalCredential.Credential[]"},"typeName":{"baseType":{"id":1136,"nodeType":"UserDefinedTypeName","pathNode":{"id":1135,"name":"Credential","nameLocations":["2411:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":899,"src":"2411:10:9"},"referencedDeclaration":899,"src":"2411:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Credential_$899_storage_ptr","typeString":"struct EducationalCredential.Credential"}},"id":1137,"nodeType":"ArrayTypeName","src":"2411:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Credential_$899_storage_$dyn_storage_ptr","typeString":"struct EducationalCredential.Credential[]"}},"visibility":"internal"}],"id":1142,"initialValue":{"baseExpression":{"id":1139,"name":"credentials","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"2449:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Credential_$899_storage_$dyn_storage_$","typeString":"mapping(address => struct EducationalCredential.Credential storage ref[] storage ref)"}},"id":1141,"indexExpression":{"id":1140,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"2461:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2449:19:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Credential_$899_storage_$dyn_storage","typeString":"struct EducationalCredential.Credential storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2411:57:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1143,"name":"userCredentials","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"2491:15:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Credential_$899_memory_ptr_$dyn_memory_ptr","typeString":"struct EducationalCredential.Credential memory[] memory"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2507:6:9","memberName":"length","nodeType":"MemberAccess","src":"2491:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2517:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2491:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1153,"nodeType":"IfStatement","src":"2487:79:9","trueBody":{"id":1152,"nodeType":"Block","src":"2520:46:9","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":1147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2542:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"","id":1148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2549:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"30","id":1149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2553:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1150,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2541:14:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_rational_0_by_1_$","typeString":"tuple(bool,literal_string \"\",int_const 0)"}},"functionReturnParameters":1133,"id":1151,"nodeType":"Return","src":"2534:21:9"}]}},{"assignments":[1156],"declarations":[{"constant":false,"id":1156,"mutability":"mutable","name":"latestCredential","nameLocation":"2594:16:9","nodeType":"VariableDeclaration","scope":1171,"src":"2576:34:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Credential_$899_memory_ptr","typeString":"struct EducationalCredential.Credential"},"typeName":{"id":1155,"nodeType":"UserDefinedTypeName","pathNode":{"id":1154,"name":"Credential","nameLocations":["2576:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":899,"src":"2576:10:9"},"referencedDeclaration":899,"src":"2576:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Credential_$899_storage_ptr","typeString":"struct EducationalCredential.Credential"}},"visibility":"internal"}],"id":1163,"initialValue":{"baseExpression":{"id":1157,"name":"userCredentials","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"2613:15:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Credential_$899_memory_ptr_$dyn_memory_ptr","typeString":"struct EducationalCredential.Credential memory[] memory"}},"id":1162,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1158,"name":"userCredentials","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"2629:15:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Credential_$899_memory_ptr_$dyn_memory_ptr","typeString":"struct EducationalCredential.Credential memory[] memory"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2645:6:9","memberName":"length","nodeType":"MemberAccess","src":"2629:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2654:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2629:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2613:43:9","typeDescriptions":{"typeIdentifier":"t_struct$_Credential_$899_memory_ptr","typeString":"struct EducationalCredential.Credential memory"}},"nodeType":"VariableDeclarationStatement","src":"2576:80:9"},{"expression":{"components":[{"hexValue":"74727565","id":1164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2674:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":1165,"name":"latestCredential","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"2680:16:9","typeDescriptions":{"typeIdentifier":"t_struct$_Credential_$899_memory_ptr","typeString":"struct EducationalCredential.Credential memory"}},"id":1166,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2697:6:9","memberName":"course","nodeType":"MemberAccess","referencedDeclaration":896,"src":"2680:23:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":1167,"name":"latestCredential","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"2705:16:9","typeDescriptions":{"typeIdentifier":"t_struct$_Credential_$899_memory_ptr","typeString":"struct EducationalCredential.Credential memory"}},"id":1168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2722:9:9","memberName":"issueDate","nodeType":"MemberAccess","referencedDeclaration":898,"src":"2705:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1169,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2673:59:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_string_memory_ptr_$_t_uint256_$","typeString":"tuple(bool,string memory,uint256)"}},"functionReturnParameters":1133,"id":1170,"nodeType":"Return","src":"2666:66:9"}]},"functionSelector":"7df5e551","id":1172,"implemented":true,"kind":"function","modifiers":[],"name":"getLatestCredential","nameLocation":"2289:19:9","nodeType":"FunctionDefinition","parameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"wallet","nameLocation":"2317:6:9","nodeType":"VariableDeclaration","scope":1172,"src":"2309:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1124,"name":"address","nodeType":"ElementaryTypeName","src":"2309:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2308:16:9"},"returnParameters":{"id":1133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1128,"mutability":"mutable","name":"found","nameLocation":"2353:5:9","nodeType":"VariableDeclaration","scope":1172,"src":"2348:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1127,"name":"bool","nodeType":"ElementaryTypeName","src":"2348:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1130,"mutability":"mutable","name":"course","nameLocation":"2374:6:9","nodeType":"VariableDeclaration","scope":1172,"src":"2360:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1129,"name":"string","nodeType":"ElementaryTypeName","src":"2360:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1132,"mutability":"mutable","name":"issueDate","nameLocation":"2390:9:9","nodeType":"VariableDeclaration","scope":1172,"src":"2382:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1131,"name":"uint256","nodeType":"ElementaryTypeName","src":"2382:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2347:53:9"},"scope":1237,"src":"2280:459:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1235,"nodeType":"Block","src":"2879:422:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1184,"name":"schemaId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"2897:8:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1185,"name":"CREDENTIAL_SCHEMA_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"2909:20:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2897:32:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420736368656d61204944","id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2931:19:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f7f8a0302ff255928d1a72eedf8fbacb95deed18c475d5a03e0d82ca55cffbb","typeString":"literal_string \"Invalid schema ID\""},"value":"Invalid schema ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3f7f8a0302ff255928d1a72eedf8fbacb95deed18c475d5a03e0d82ca55cffbb","typeString":"literal_string \"Invalid schema ID\""}],"id":1183,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2889:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2889:62:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1189,"nodeType":"ExpressionStatement","src":"2889:62:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1191,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"2969:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2990:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2982:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1192,"name":"address","nodeType":"ElementaryTypeName","src":"2982:7:9","typeDescriptions":{}}},"id":1195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2982:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2969:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420726563697069656e742061646472657373","id":1197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2994:27:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df","typeString":"literal_string \"Invalid recipient address\""},"value":"Invalid recipient address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df","typeString":"literal_string \"Invalid recipient address\""}],"id":1190,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2961:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2961:61:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1199,"nodeType":"ExpressionStatement","src":"2961:61:9"},{"assignments":[1201,1203],"declarations":[{"constant":false,"id":1201,"mutability":"mutable","name":"course","nameLocation":"3048:6:9","nodeType":"VariableDeclaration","scope":1235,"src":"3034:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1200,"name":"string","nodeType":"ElementaryTypeName","src":"3034:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1203,"mutability":"mutable","name":"issueDate","nameLocation":"3064:9:9","nodeType":"VariableDeclaration","scope":1235,"src":"3056:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1202,"name":"uint256","nodeType":"ElementaryTypeName","src":"3056:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1213,"initialValue":{"arguments":[{"id":1206,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"3088:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3095:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1207,"name":"string","nodeType":"ElementaryTypeName","src":"3095:6:9","typeDescriptions":{}}},{"id":1210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3103:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1209,"name":"uint256","nodeType":"ElementaryTypeName","src":"3103:7:9","typeDescriptions":{}}}],"id":1211,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3094:17:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_string_storage_ptr_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(string storage pointer),type(uint256))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_string_storage_ptr_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(string storage pointer),type(uint256))"}],"expression":{"id":1204,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3077:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3081:6:9","memberName":"decode","nodeType":"MemberAccess","src":"3077:10:9","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3077:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_uint256_$","typeString":"tuple(string memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3033:79:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1217,"name":"course","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"3137:6:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3131:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1215,"name":"bytes","nodeType":"ElementaryTypeName","src":"3131:5:9","typeDescriptions":{}}},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3131:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3145:6:9","memberName":"length","nodeType":"MemberAccess","src":"3131:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3154:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3131:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f75727365206e616d652063616e6e6f7420626520656d707479","id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3157:29:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988","typeString":"literal_string \"Course name cannot be empty\""},"value":"Course name cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988","typeString":"literal_string \"Course name cannot be empty\""}],"id":1214,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3123:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3123:64:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1224,"nodeType":"ExpressionStatement","src":"3123:64:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1226,"name":"issueDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"3205:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1227,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3218:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3224:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"3218:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3205:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"497373756520646174652063616e6e6f7420626520696e2074686520667574757265","id":1230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3235:36:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97","typeString":"literal_string \"Issue date cannot be in the future\""},"value":"Issue date cannot be in the future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97","typeString":"literal_string \"Issue date cannot be in the future\""}],"id":1225,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3197:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3197:75:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1232,"nodeType":"ExpressionStatement","src":"3197:75:9"},{"expression":{"hexValue":"74727565","id":1233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3290:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1182,"id":1234,"nodeType":"Return","src":"3283:11:9"}]},"id":1236,"implemented":true,"kind":"function","modifiers":[],"name":"schemaHook","nameLocation":"2754:10:9","nodeType":"FunctionDefinition","parameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"schemaId","nameLocation":"2781:8:9","nodeType":"VariableDeclaration","scope":1236,"src":"2774:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1173,"name":"uint64","nodeType":"ElementaryTypeName","src":"2774:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1176,"mutability":"mutable","name":"data","nameLocation":"2812:4:9","nodeType":"VariableDeclaration","scope":1236,"src":"2799:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1175,"name":"bytes","nodeType":"ElementaryTypeName","src":"2799:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1178,"mutability":"mutable","name":"recipient","nameLocation":"2834:9:9","nodeType":"VariableDeclaration","scope":1236,"src":"2826:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1177,"name":"address","nodeType":"ElementaryTypeName","src":"2826:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2764:85:9"},"returnParameters":{"id":1182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1236,"src":"2873:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1180,"name":"bool","nodeType":"ElementaryTypeName","src":"2873:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2872:6:9"},"scope":1237,"src":"2745:556:9","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1238,"src":"201:3102:9","usedErrors":[644,649],"usedEvents":[655,921]}],"src":"32:3272:9"},"id":9}},"contracts":{"@ethsign/sign-protocol-evm/src/interfaces/ISP.sol":{"ISP":{"abi":[{"inputs":[],"name":"AttestationAlreadyRevoked","type":"error"},{"inputs":[],"name":"AttestationInvalidDuration","type":"error"},{"inputs":[],"name":"AttestationIrrevocable","type":"error"},{"inputs":[],"name":"AttestationNonexistent","type":"error"},{"inputs":[],"name":"AttestationWrongAttester","type":"error"},{"inputs":[],"name":"InvalidDelegateSignature","type":"error"},{"inputs":[],"name":"LegacySPRequired","type":"error"},{"inputs":[],"name":"OffchainAttestationAlreadyRevoked","type":"error"},{"inputs":[],"name":"OffchainAttestationExists","type":"error"},{"inputs":[],"name":"OffchainAttestationNonexistent","type":"error"},{"inputs":[],"name":"Paused","type":"error"},{"inputs":[],"name":"SchemaNonexistent","type":"error"},{"inputs":[],"name":"SchemaWrongRegistrant","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"attestationId","type":"uint64"},{"indexed":false,"internalType":"string","name":"indexingKey","type":"string"}],"name":"AttestationMade","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"attestationId","type":"uint64"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"AttestationRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"attestationId","type":"string"}],"name":"OffchainAttestationMade","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"attestationId","type":"string"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"OffchainAttestationRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"schemaId","type":"uint64"}],"name":"SchemaRegistered","type":"event"},{"inputs":[{"components":[{"internalType":"uint64","name":"schemaId","type":"uint64"},{"internalType":"uint64","name":"linkedAttestationId","type":"uint64"},{"internalType":"uint64","name":"attestTimestamp","type":"uint64"},{"internalType":"uint64","name":"revokeTimestamp","type":"uint64"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint64","name":"validUntil","type":"uint64"},{"internalType":"enum DataLocation","name":"dataLocation","type":"uint8"},{"internalType":"bool","name":"revoked","type":"bool"},{"internalType":"bytes[]","name":"recipients","type":"bytes[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation","name":"attestation","type":"tuple"},{"internalType":"contract IERC20","name":"resolverFeesERC20Token","type":"address"},{"internalType":"uint256","name":"resolverFeesERC20Amount","type":"uint256"},{"internalType":"string","name":"indexingKey","type":"string"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"attest","outputs":[{"internalType":"uint64","name":"attestationId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint64","name":"schemaId","type":"uint64"},{"internalType":"uint64","name":"linkedAttestationId","type":"uint64"},{"internalType":"uint64","name":"attestTimestamp","type":"uint64"},{"internalType":"uint64","name":"revokeTimestamp","type":"uint64"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint64","name":"validUntil","type":"uint64"},{"internalType":"enum DataLocation","name":"dataLocation","type":"uint8"},{"internalType":"bool","name":"revoked","type":"bool"},{"internalType":"bytes[]","name":"recipients","type":"bytes[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation","name":"attestation","type":"tuple"},{"internalType":"string","name":"indexingKey","type":"string"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"attest","outputs":[{"internalType":"uint64","name":"attestationId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint64","name":"schemaId","type":"uint64"},{"internalType":"uint64","name":"linkedAttestationId","type":"uint64"},{"internalType":"uint64","name":"attestTimestamp","type":"uint64"},{"internalType":"uint64","name":"revokeTimestamp","type":"uint64"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint64","name":"validUntil","type":"uint64"},{"internalType":"enum DataLocation","name":"dataLocation","type":"uint8"},{"internalType":"bool","name":"revoked","type":"bool"},{"internalType":"bytes[]","name":"recipients","type":"bytes[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation","name":"attestation","type":"tuple"},{"internalType":"uint256","name":"resolverFeesETH","type":"uint256"},{"internalType":"string","name":"indexingKey","type":"string"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"attest","outputs":[{"internalType":"uint64","name":"attestationId","type":"uint64"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"uint64","name":"schemaId","type":"uint64"},{"internalType":"uint64","name":"linkedAttestationId","type":"uint64"},{"internalType":"uint64","name":"attestTimestamp","type":"uint64"},{"internalType":"uint64","name":"revokeTimestamp","type":"uint64"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint64","name":"validUntil","type":"uint64"},{"internalType":"enum DataLocation","name":"dataLocation","type":"uint8"},{"internalType":"bool","name":"revoked","type":"bool"},{"internalType":"bytes[]","name":"recipients","type":"bytes[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation[]","name":"attestations","type":"tuple[]"},{"internalType":"uint256[]","name":"resolverFeesETH","type":"uint256[]"},{"internalType":"string[]","name":"indexingKeys","type":"string[]"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"attestBatch","outputs":[{"internalType":"uint64[]","name":"attestationIds","type":"uint64[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"uint64","name":"schemaId","type":"uint64"},{"internalType":"uint64","name":"linkedAttestationId","type":"uint64"},{"internalType":"uint64","name":"attestTimestamp","type":"uint64"},{"internalType":"uint64","name":"revokeTimestamp","type":"uint64"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint64","name":"validUntil","type":"uint64"},{"internalType":"enum DataLocation","name":"dataLocation","type":"uint8"},{"internalType":"bool","name":"revoked","type":"bool"},{"internalType":"bytes[]","name":"recipients","type":"bytes[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation[]","name":"attestations","type":"tuple[]"},{"internalType":"contract IERC20[]","name":"resolverFeesERC20Tokens","type":"address[]"},{"internalType":"uint256[]","name":"resolverFeesERC20Amount","type":"uint256[]"},{"internalType":"string[]","name":"indexingKeys","type":"string[]"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"attestBatch","outputs":[{"internalType":"uint64[]","name":"attestationIds","type":"uint64[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint64","name":"schemaId","type":"uint64"},{"internalType":"uint64","name":"linkedAttestationId","type":"uint64"},{"internalType":"uint64","name":"attestTimestamp","type":"uint64"},{"internalType":"uint64","name":"revokeTimestamp","type":"uint64"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint64","name":"validUntil","type":"uint64"},{"internalType":"enum DataLocation","name":"dataLocation","type":"uint8"},{"internalType":"bool","name":"revoked","type":"bool"},{"internalType":"bytes[]","name":"recipients","type":"bytes[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation[]","name":"attestations","type":"tuple[]"},{"internalType":"string[]","name":"indexingKeys","type":"string[]"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"attestBatch","outputs":[{"internalType":"uint64[]","name":"attestationIds","type":"uint64[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"offchainAttestationId","type":"string"},{"internalType":"address","name":"delegateAttester","type":"address"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"}],"name":"attestOffchain","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string[]","name":"offchainAttestationIds","type":"string[]"},{"internalType":"address","name":"delegateAttester","type":"address"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"}],"name":"attestOffchainBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"attestationCounter","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"attestationId","type":"uint64"}],"name":"getAttestation","outputs":[{"components":[{"internalType":"uint64","name":"schemaId","type":"uint64"},{"internalType":"uint64","name":"linkedAttestationId","type":"uint64"},{"internalType":"uint64","name":"attestTimestamp","type":"uint64"},{"internalType":"uint64","name":"revokeTimestamp","type":"uint64"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint64","name":"validUntil","type":"uint64"},{"internalType":"enum DataLocation","name":"dataLocation","type":"uint8"},{"internalType":"bool","name":"revoked","type":"bool"},{"internalType":"bytes[]","name":"recipients","type":"bytes[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint64","name":"schemaId","type":"uint64"},{"internalType":"uint64","name":"linkedAttestationId","type":"uint64"},{"internalType":"uint64","name":"attestTimestamp","type":"uint64"},{"internalType":"uint64","name":"revokeTimestamp","type":"uint64"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint64","name":"validUntil","type":"uint64"},{"internalType":"enum DataLocation","name":"dataLocation","type":"uint8"},{"internalType":"bool","name":"revoked","type":"bool"},{"internalType":"bytes[]","name":"recipients","type":"bytes[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation[]","name":"attestations","type":"tuple[]"}],"name":"getDelegatedAttestBatchHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"uint64","name":"schemaId","type":"uint64"},{"internalType":"uint64","name":"linkedAttestationId","type":"uint64"},{"internalType":"uint64","name":"attestTimestamp","type":"uint64"},{"internalType":"uint64","name":"revokeTimestamp","type":"uint64"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint64","name":"validUntil","type":"uint64"},{"internalType":"enum DataLocation","name":"dataLocation","type":"uint8"},{"internalType":"bool","name":"revoked","type":"bool"},{"internalType":"bytes[]","name":"recipients","type":"bytes[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation","name":"attestation","type":"tuple"}],"name":"getDelegatedAttestHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"string[]","name":"offchainAttestationIds","type":"string[]"}],"name":"getDelegatedOffchainAttestBatchHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"string","name":"offchainAttestationId","type":"string"}],"name":"getDelegatedOffchainAttestHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"string[]","name":"offchainAttestationIds","type":"string[]"},{"internalType":"string[]","name":"reasons","type":"string[]"}],"name":"getDelegatedOffchainRevokeBatchHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"string","name":"offchainAttestationId","type":"string"},{"internalType":"string","name":"reason","type":"string"}],"name":"getDelegatedOffchainRevokeHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"registrant","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"enum DataLocation","name":"dataLocation","type":"uint8"},{"internalType":"uint64","name":"maxValidFor","type":"uint64"},{"internalType":"contract ISPHook","name":"hook","type":"address"},{"internalType":"uint64","name":"timestamp","type":"uint64"},{"internalType":"string","name":"data","type":"string"}],"internalType":"struct Schema[]","name":"schemas","type":"tuple[]"}],"name":"getDelegatedRegisterBatchHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"registrant","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"enum DataLocation","name":"dataLocation","type":"uint8"},{"internalType":"uint64","name":"maxValidFor","type":"uint64"},{"internalType":"contract ISPHook","name":"hook","type":"address"},{"internalType":"uint64","name":"timestamp","type":"uint64"},{"internalType":"string","name":"data","type":"string"}],"internalType":"struct Schema","name":"schema","type":"tuple"}],"name":"getDelegatedRegisterHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint64[]","name":"attestationIds","type":"uint64[]"},{"internalType":"string[]","name":"reasons","type":"string[]"}],"name":"getDelegatedRevokeBatchHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint64","name":"attestationId","type":"uint64"},{"internalType":"string","name":"reason","type":"string"}],"name":"getDelegatedRevokeHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"string","name":"offchainAttestationId","type":"string"}],"name":"getOffchainAttestation","outputs":[{"components":[{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint64","name":"timestamp","type":"uint64"}],"internalType":"struct OffchainAttestation","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"schemaId","type":"uint64"}],"name":"getSchema","outputs":[{"components":[{"internalType":"address","name":"registrant","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"enum DataLocation","name":"dataLocation","type":"uint8"},{"internalType":"uint64","name":"maxValidFor","type":"uint64"},{"internalType":"contract ISPHook","name":"hook","type":"address"},{"internalType":"uint64","name":"timestamp","type":"uint64"},{"internalType":"string","name":"data","type":"string"}],"internalType":"struct Schema","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"registrant","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"enum DataLocation","name":"dataLocation","type":"uint8"},{"internalType":"uint64","name":"maxValidFor","type":"uint64"},{"internalType":"contract ISPHook","name":"hook","type":"address"},{"internalType":"uint64","name":"timestamp","type":"uint64"},{"internalType":"string","name":"data","type":"string"}],"internalType":"struct Schema","name":"schema","type":"tuple"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"}],"name":"register","outputs":[{"internalType":"uint64","name":"schemaId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"registrant","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"enum DataLocation","name":"dataLocation","type":"uint8"},{"internalType":"uint64","name":"maxValidFor","type":"uint64"},{"internalType":"contract ISPHook","name":"hook","type":"address"},{"internalType":"uint64","name":"timestamp","type":"uint64"},{"internalType":"string","name":"data","type":"string"}],"internalType":"struct Schema[]","name":"schemas","type":"tuple[]"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"}],"name":"registerBatch","outputs":[{"internalType":"uint64[]","name":"schemaIds","type":"uint64[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"attestationId","type":"uint64"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"revoke","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"attestationId","type":"uint64"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"contract IERC20","name":"resolverFeesERC20Token","type":"address"},{"internalType":"uint256","name":"resolverFeesERC20Amount","type":"uint256"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"revoke","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"attestationId","type":"uint64"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"uint256","name":"resolverFeesETH","type":"uint256"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"revoke","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint64[]","name":"attestationIds","type":"uint64[]"},{"internalType":"string[]","name":"reasons","type":"string[]"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"revokeBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64[]","name":"attestationIds","type":"uint64[]"},{"internalType":"string[]","name":"reasons","type":"string[]"},{"internalType":"uint256[]","name":"resolverFeesETH","type":"uint256[]"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"revokeBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint64[]","name":"attestationIds","type":"uint64[]"},{"internalType":"string[]","name":"reasons","type":"string[]"},{"internalType":"contract IERC20[]","name":"resolverFeesERC20Tokens","type":"address[]"},{"internalType":"uint256[]","name":"resolverFeesERC20Amount","type":"uint256[]"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"revokeBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"offchainAttestationId","type":"string"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"}],"name":"revokeOffchain","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string[]","name":"offchainAttestationIds","type":"string[]"},{"internalType":"string[]","name":"reasons","type":"string[]"},{"internalType":"bytes","name":"delegateSignature","type":"bytes"}],"name":"revokeOffchainBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"schemaCounter","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"}],"devdoc":{"author":"Jack Xu @ EthSign","errors":{"AttestationAlreadyRevoked()":[{"details":"0xd8c3da86"}],"AttestationInvalidDuration()":[{"details":"0xa65e02ed"}],"AttestationIrrevocable()":[{"details":"0x8ac42f49"}],"AttestationNonexistent()":[{"details":"0x54681a13"}],"AttestationWrongAttester()":[{"details":"0xa9ad2007"}],"InvalidDelegateSignature()":[{"details":"0xfdf4e6f9"}],"LegacySPRequired()":[{"details":"0x5c34b9cc"}],"OffchainAttestationAlreadyRevoked()":[{"details":"0xa0671d20"}],"OffchainAttestationExists()":[{"details":"0xc83e3cdf"}],"OffchainAttestationNonexistent()":[{"details":"0xa006519a"}],"Paused()":[{"details":"0x9e87fac8"}],"SchemaNonexistent()":[{"details":"0x38f8c6c4"}],"SchemaWrongRegistrant()":[{"details":"0x71984561"}]},"kind":"dev","methods":{"attest((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes),address,uint256,string,bytes,bytes)":{"details":"Emits `AttestationMade`.","params":{"attestation":"See `Attestation`.","delegateSignature":"An optional ECDSA delegateSignature if this is a delegated attestation. Use `\"\"` or `0x` otherwise.","extraData":"This is forwarded to the resolver directly.","indexingKey":"Used by the frontend to aid indexing.","resolverFeesERC20Amount":"Amount of funds to send to the hook.","resolverFeesERC20Token":"ERC20 token address used for payment."},"returns":{"attestationId":"The assigned ID of the attestation."}},"attest((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes),string,bytes,bytes)":{"details":"Emits `AttestationMade`.","params":{"attestation":"See `Attestation`.","delegateSignature":"An optional ECDSA delegateSignature if this is a delegated attestation. Use `\"\"` or `0x` otherwise.","extraData":"This is forwarded to the resolver directly.","indexingKey":"Used by the frontend to aid indexing."},"returns":{"attestationId":"The assigned ID of the attestation."}},"attest((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes),uint256,string,bytes,bytes)":{"details":"Emits `AttestationMade`.","params":{"attestation":"See `Attestation`.","delegateSignature":"An optional ECDSA delegateSignature if this is a delegated attestation. Use `\"\"` or `0x` otherwise.","extraData":"This is forwarded to the resolver directly.","indexingKey":"Used by the frontend to aid indexing.","resolverFeesETH":"Amount of funds to send to the hook."},"returns":{"attestationId":"The assigned ID of the attestation."}},"attestOffchain(string,address,bytes)":{"details":"Emits `OffchainAttestationMade`.","params":{"delegateAttester":"An optional delegated attester that authorized the caller to attest on their behalf if this is a delegated attestation. Use `address(0)` otherwise.","delegateSignature":"An optional ECDSA delegateSignature if this is a delegated attestation. Use `\"\"` or `0x` otherwise. Use `\"\"` or `0x` otherwise.","offchainAttestationId":"The off-chain data ID."}},"register((address,bool,uint8,uint64,address,uint64,string),bytes)":{"details":"Emits `SchemaRegistered`.","params":{"delegateSignature":"An optional ECDSA delegateSignature if this is a delegated attestation. Use `\"\"` or `0x` otherwise.","schema":"See `Schema`."},"returns":{"schemaId":"The assigned ID of the registered schema."}},"revoke(uint64,string,address,uint256,bytes,bytes)":{"details":"Emits `AttestationRevoked`. Must be called by the attester.","params":{"attestationId":"An existing attestation ID.","delegateSignature":"An optional ECDSA delegateSignature if this is a delegated revocation.","extraData":"This is forwarded to the resolver directly.","reason":"The revocation reason. This is only emitted as an event to save gas.","resolverFeesERC20Amount":"Amount of funds to send to the hook.","resolverFeesERC20Token":"ERC20 token address used for payment."}},"revoke(uint64,string,bytes,bytes)":{"details":"Emits `AttestationRevoked`. Must be called by the attester.","params":{"attestationId":"An existing attestation ID.","delegateSignature":"An optional ECDSA delegateSignature if this is a delegated revocation.","extraData":"This is forwarded to the resolver directly.","reason":"The revocation reason. This is only emitted as an event to save gas."}},"revoke(uint64,string,uint256,bytes,bytes)":{"details":"Emits `AttestationRevoked`. Must be called by the attester.","params":{"attestationId":"An existing attestation ID.","delegateSignature":"An optional ECDSA delegateSignature if this is a delegated revocation.","extraData":"This is forwarded to the resolver directly.","reason":"The revocation reason. This is only emitted as an event to save gas.","resolverFeesETH":"Amount of funds to send to the hook."}},"revokeOffchain(string,string,bytes)":{"details":"Emits `OffchainAttestationRevoked`. Must be called by the attester.","params":{"delegateSignature":"An optional ECDSA delegateSignature if this is a delegated revocation.","offchainAttestationId":"An existing attestation ID.","reason":"The revocation reason. This is only emitted as an event to save gas."}}},"title":"Sign Protocol Interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"attest((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes),address,uint256,string,bytes,bytes)":"812c255f","attest((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes),string,bytes,bytes)":"b82916cb","attest((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes),uint256,string,bytes,bytes)":"e09f1b7a","attestBatch((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes)[],address[],uint256[],string[],bytes,bytes)":"59d9a12f","attestBatch((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes)[],string[],bytes,bytes)":"d98934ff","attestBatch((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes)[],uint256[],string[],bytes,bytes)":"4e6ac1d5","attestOffchain(string,address,bytes)":"a01fb774","attestOffchainBatch(string[],address,bytes)":"1916749d","attestationCounter()":"2c996e03","getAttestation(uint64)":"62252880","getDelegatedAttestBatchHash((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes)[])":"3f50fb76","getDelegatedAttestHash((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes))":"8ef1fbc1","getDelegatedOffchainAttestBatchHash(string[])":"263bc92d","getDelegatedOffchainAttestHash(string)":"be919fb1","getDelegatedOffchainRevokeBatchHash(string[],string[])":"d3dc7b23","getDelegatedOffchainRevokeHash(string,string)":"985292eb","getDelegatedRegisterBatchHash((address,bool,uint8,uint64,address,uint64,string)[])":"00f0f855","getDelegatedRegisterHash((address,bool,uint8,uint64,address,uint64,string))":"570b7434","getDelegatedRevokeBatchHash(uint64[],string[])":"40f356fa","getDelegatedRevokeHash(uint64,string)":"dc50eada","getOffchainAttestation(string)":"6a67651c","getSchema(uint64)":"8d1be875","register((address,bool,uint8,uint64,address,uint64,string),bytes)":"e117a861","registerBatch((address,bool,uint8,uint64,address,uint64,string)[],bytes)":"5e7689b7","revoke(uint64,string,address,uint256,bytes,bytes)":"9b7f8318","revoke(uint64,string,bytes,bytes)":"24855e60","revoke(uint64,string,uint256,bytes,bytes)":"f83b92b7","revokeBatch(uint64[],string[],address[],uint256[],bytes,bytes)":"fd397913","revokeBatch(uint64[],string[],bytes,bytes)":"65ae13b3","revokeBatch(uint64[],string[],uint256[],bytes,bytes)":"d7681235","revokeOffchain(string,string,bytes)":"574a3066","revokeOffchainBatch(string[],string[],bytes)":"ba97637d","schemaCounter()":"cb6a3237","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AttestationAlreadyRevoked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AttestationInvalidDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AttestationIrrevocable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AttestationNonexistent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AttestationWrongAttester\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDelegateSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LegacySPRequired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OffchainAttestationAlreadyRevoked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OffchainAttestationExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OffchainAttestationNonexistent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Paused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SchemaNonexistent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SchemaWrongRegistrant\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"attestationId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"indexingKey\",\"type\":\"string\"}],\"name\":\"AttestationMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"attestationId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"AttestationRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"attestationId\",\"type\":\"string\"}],\"name\":\"OffchainAttestationMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"attestationId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"OffchainAttestationRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"}],\"name\":\"SchemaRegistered\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"linkedAttestationId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"attestTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revokeTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"validUntil\",\"type\":\"uint64\"},{\"internalType\":\"enum DataLocation\",\"name\":\"dataLocation\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"},{\"internalType\":\"bytes[]\",\"name\":\"recipients\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"},{\"internalType\":\"contract IERC20\",\"name\":\"resolverFeesERC20Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"resolverFeesERC20Amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"indexingKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"attestationId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"linkedAttestationId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"attestTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revokeTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"validUntil\",\"type\":\"uint64\"},{\"internalType\":\"enum DataLocation\",\"name\":\"dataLocation\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"},{\"internalType\":\"bytes[]\",\"name\":\"recipients\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"indexingKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"attestationId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"linkedAttestationId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"attestTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revokeTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"validUntil\",\"type\":\"uint64\"},{\"internalType\":\"enum DataLocation\",\"name\":\"dataLocation\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"},{\"internalType\":\"bytes[]\",\"name\":\"recipients\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"resolverFeesETH\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"indexingKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"attestationId\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"linkedAttestationId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"attestTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revokeTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"validUntil\",\"type\":\"uint64\"},{\"internalType\":\"enum DataLocation\",\"name\":\"dataLocation\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"},{\"internalType\":\"bytes[]\",\"name\":\"recipients\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"resolverFeesETH\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"indexingKeys\",\"type\":\"string[]\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"attestBatch\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"attestationIds\",\"type\":\"uint64[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"linkedAttestationId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"attestTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revokeTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"validUntil\",\"type\":\"uint64\"},{\"internalType\":\"enum DataLocation\",\"name\":\"dataLocation\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"},{\"internalType\":\"bytes[]\",\"name\":\"recipients\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"resolverFeesERC20Tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"resolverFeesERC20Amount\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"indexingKeys\",\"type\":\"string[]\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"attestBatch\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"attestationIds\",\"type\":\"uint64[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"linkedAttestationId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"attestTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revokeTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"validUntil\",\"type\":\"uint64\"},{\"internalType\":\"enum DataLocation\",\"name\":\"dataLocation\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"},{\"internalType\":\"bytes[]\",\"name\":\"recipients\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"string[]\",\"name\":\"indexingKeys\",\"type\":\"string[]\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"attestBatch\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"attestationIds\",\"type\":\"uint64[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"offchainAttestationId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"delegateAttester\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"}],\"name\":\"attestOffchain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"offchainAttestationIds\",\"type\":\"string[]\"},{\"internalType\":\"address\",\"name\":\"delegateAttester\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"}],\"name\":\"attestOffchainBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"attestationCounter\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"attestationId\",\"type\":\"uint64\"}],\"name\":\"getAttestation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"linkedAttestationId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"attestTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revokeTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"validUntil\",\"type\":\"uint64\"},{\"internalType\":\"enum DataLocation\",\"name\":\"dataLocation\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"},{\"internalType\":\"bytes[]\",\"name\":\"recipients\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"linkedAttestationId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"attestTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revokeTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"validUntil\",\"type\":\"uint64\"},{\"internalType\":\"enum DataLocation\",\"name\":\"dataLocation\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"},{\"internalType\":\"bytes[]\",\"name\":\"recipients\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"}],\"name\":\"getDelegatedAttestBatchHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"linkedAttestationId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"attestTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revokeTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"validUntil\",\"type\":\"uint64\"},{\"internalType\":\"enum DataLocation\",\"name\":\"dataLocation\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"},{\"internalType\":\"bytes[]\",\"name\":\"recipients\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"getDelegatedAttestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"offchainAttestationIds\",\"type\":\"string[]\"}],\"name\":\"getDelegatedOffchainAttestBatchHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"offchainAttestationId\",\"type\":\"string\"}],\"name\":\"getDelegatedOffchainAttestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"offchainAttestationIds\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"reasons\",\"type\":\"string[]\"}],\"name\":\"getDelegatedOffchainRevokeBatchHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"offchainAttestationId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"getDelegatedOffchainRevokeHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"enum DataLocation\",\"name\":\"dataLocation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"maxValidFor\",\"type\":\"uint64\"},{\"internalType\":\"contract ISPHook\",\"name\":\"hook\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"internalType\":\"struct Schema[]\",\"name\":\"schemas\",\"type\":\"tuple[]\"}],\"name\":\"getDelegatedRegisterBatchHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"enum DataLocation\",\"name\":\"dataLocation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"maxValidFor\",\"type\":\"uint64\"},{\"internalType\":\"contract ISPHook\",\"name\":\"hook\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"internalType\":\"struct Schema\",\"name\":\"schema\",\"type\":\"tuple\"}],\"name\":\"getDelegatedRegisterHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64[]\",\"name\":\"attestationIds\",\"type\":\"uint64[]\"},{\"internalType\":\"string[]\",\"name\":\"reasons\",\"type\":\"string[]\"}],\"name\":\"getDelegatedRevokeBatchHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"attestationId\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"getDelegatedRevokeHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"offchainAttestationId\",\"type\":\"string\"}],\"name\":\"getOffchainAttestation\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"internalType\":\"struct OffchainAttestation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"}],\"name\":\"getSchema\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"enum DataLocation\",\"name\":\"dataLocation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"maxValidFor\",\"type\":\"uint64\"},{\"internalType\":\"contract ISPHook\",\"name\":\"hook\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"internalType\":\"struct Schema\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"enum DataLocation\",\"name\":\"dataLocation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"maxValidFor\",\"type\":\"uint64\"},{\"internalType\":\"contract ISPHook\",\"name\":\"hook\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"internalType\":\"struct Schema\",\"name\":\"schema\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"}],\"name\":\"register\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"enum DataLocation\",\"name\":\"dataLocation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"maxValidFor\",\"type\":\"uint64\"},{\"internalType\":\"contract ISPHook\",\"name\":\"hook\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"internalType\":\"struct Schema[]\",\"name\":\"schemas\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"}],\"name\":\"registerBatch\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"schemaIds\",\"type\":\"uint64[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"attestationId\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"attestationId\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"contract IERC20\",\"name\":\"resolverFeesERC20Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"resolverFeesERC20Amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"attestationId\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"resolverFeesETH\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64[]\",\"name\":\"attestationIds\",\"type\":\"uint64[]\"},{\"internalType\":\"string[]\",\"name\":\"reasons\",\"type\":\"string[]\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"revokeBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64[]\",\"name\":\"attestationIds\",\"type\":\"uint64[]\"},{\"internalType\":\"string[]\",\"name\":\"reasons\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"resolverFeesETH\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"revokeBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64[]\",\"name\":\"attestationIds\",\"type\":\"uint64[]\"},{\"internalType\":\"string[]\",\"name\":\"reasons\",\"type\":\"string[]\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"resolverFeesERC20Tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"resolverFeesERC20Amount\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"revokeBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"offchainAttestationId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"}],\"name\":\"revokeOffchain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"offchainAttestationIds\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"reasons\",\"type\":\"string[]\"},{\"internalType\":\"bytes\",\"name\":\"delegateSignature\",\"type\":\"bytes\"}],\"name\":\"revokeOffchainBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"schemaCounter\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Jack Xu @ EthSign\",\"errors\":{\"AttestationAlreadyRevoked()\":[{\"details\":\"0xd8c3da86\"}],\"AttestationInvalidDuration()\":[{\"details\":\"0xa65e02ed\"}],\"AttestationIrrevocable()\":[{\"details\":\"0x8ac42f49\"}],\"AttestationNonexistent()\":[{\"details\":\"0x54681a13\"}],\"AttestationWrongAttester()\":[{\"details\":\"0xa9ad2007\"}],\"InvalidDelegateSignature()\":[{\"details\":\"0xfdf4e6f9\"}],\"LegacySPRequired()\":[{\"details\":\"0x5c34b9cc\"}],\"OffchainAttestationAlreadyRevoked()\":[{\"details\":\"0xa0671d20\"}],\"OffchainAttestationExists()\":[{\"details\":\"0xc83e3cdf\"}],\"OffchainAttestationNonexistent()\":[{\"details\":\"0xa006519a\"}],\"Paused()\":[{\"details\":\"0x9e87fac8\"}],\"SchemaNonexistent()\":[{\"details\":\"0x38f8c6c4\"}],\"SchemaWrongRegistrant()\":[{\"details\":\"0x71984561\"}]},\"kind\":\"dev\",\"methods\":{\"attest((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes),address,uint256,string,bytes,bytes)\":{\"details\":\"Emits `AttestationMade`.\",\"params\":{\"attestation\":\"See `Attestation`.\",\"delegateSignature\":\"An optional ECDSA delegateSignature if this is a delegated attestation. Use `\\\"\\\"` or `0x` otherwise.\",\"extraData\":\"This is forwarded to the resolver directly.\",\"indexingKey\":\"Used by the frontend to aid indexing.\",\"resolverFeesERC20Amount\":\"Amount of funds to send to the hook.\",\"resolverFeesERC20Token\":\"ERC20 token address used for payment.\"},\"returns\":{\"attestationId\":\"The assigned ID of the attestation.\"}},\"attest((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes),string,bytes,bytes)\":{\"details\":\"Emits `AttestationMade`.\",\"params\":{\"attestation\":\"See `Attestation`.\",\"delegateSignature\":\"An optional ECDSA delegateSignature if this is a delegated attestation. Use `\\\"\\\"` or `0x` otherwise.\",\"extraData\":\"This is forwarded to the resolver directly.\",\"indexingKey\":\"Used by the frontend to aid indexing.\"},\"returns\":{\"attestationId\":\"The assigned ID of the attestation.\"}},\"attest((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes),uint256,string,bytes,bytes)\":{\"details\":\"Emits `AttestationMade`.\",\"params\":{\"attestation\":\"See `Attestation`.\",\"delegateSignature\":\"An optional ECDSA delegateSignature if this is a delegated attestation. Use `\\\"\\\"` or `0x` otherwise.\",\"extraData\":\"This is forwarded to the resolver directly.\",\"indexingKey\":\"Used by the frontend to aid indexing.\",\"resolverFeesETH\":\"Amount of funds to send to the hook.\"},\"returns\":{\"attestationId\":\"The assigned ID of the attestation.\"}},\"attestOffchain(string,address,bytes)\":{\"details\":\"Emits `OffchainAttestationMade`.\",\"params\":{\"delegateAttester\":\"An optional delegated attester that authorized the caller to attest on their behalf if this is a delegated attestation. Use `address(0)` otherwise.\",\"delegateSignature\":\"An optional ECDSA delegateSignature if this is a delegated attestation. Use `\\\"\\\"` or `0x` otherwise. Use `\\\"\\\"` or `0x` otherwise.\",\"offchainAttestationId\":\"The off-chain data ID.\"}},\"register((address,bool,uint8,uint64,address,uint64,string),bytes)\":{\"details\":\"Emits `SchemaRegistered`.\",\"params\":{\"delegateSignature\":\"An optional ECDSA delegateSignature if this is a delegated attestation. Use `\\\"\\\"` or `0x` otherwise.\",\"schema\":\"See `Schema`.\"},\"returns\":{\"schemaId\":\"The assigned ID of the registered schema.\"}},\"revoke(uint64,string,address,uint256,bytes,bytes)\":{\"details\":\"Emits `AttestationRevoked`. Must be called by the attester.\",\"params\":{\"attestationId\":\"An existing attestation ID.\",\"delegateSignature\":\"An optional ECDSA delegateSignature if this is a delegated revocation.\",\"extraData\":\"This is forwarded to the resolver directly.\",\"reason\":\"The revocation reason. This is only emitted as an event to save gas.\",\"resolverFeesERC20Amount\":\"Amount of funds to send to the hook.\",\"resolverFeesERC20Token\":\"ERC20 token address used for payment.\"}},\"revoke(uint64,string,bytes,bytes)\":{\"details\":\"Emits `AttestationRevoked`. Must be called by the attester.\",\"params\":{\"attestationId\":\"An existing attestation ID.\",\"delegateSignature\":\"An optional ECDSA delegateSignature if this is a delegated revocation.\",\"extraData\":\"This is forwarded to the resolver directly.\",\"reason\":\"The revocation reason. This is only emitted as an event to save gas.\"}},\"revoke(uint64,string,uint256,bytes,bytes)\":{\"details\":\"Emits `AttestationRevoked`. Must be called by the attester.\",\"params\":{\"attestationId\":\"An existing attestation ID.\",\"delegateSignature\":\"An optional ECDSA delegateSignature if this is a delegated revocation.\",\"extraData\":\"This is forwarded to the resolver directly.\",\"reason\":\"The revocation reason. This is only emitted as an event to save gas.\",\"resolverFeesETH\":\"Amount of funds to send to the hook.\"}},\"revokeOffchain(string,string,bytes)\":{\"details\":\"Emits `OffchainAttestationRevoked`. Must be called by the attester.\",\"params\":{\"delegateSignature\":\"An optional ECDSA delegateSignature if this is a delegated revocation.\",\"offchainAttestationId\":\"An existing attestation ID.\",\"reason\":\"The revocation reason. This is only emitted as an event to save gas.\"}}},\"title\":\"Sign Protocol Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"attest((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes),address,uint256,string,bytes,bytes)\":{\"notice\":\"Makes an attestation where the schema hook expects ERC20 payment.\"},\"attest((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes),string,bytes,bytes)\":{\"notice\":\"Makes an attestation.\"},\"attest((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes),uint256,string,bytes,bytes)\":{\"notice\":\"Makes an attestation where the schema hook expects ETH payment.\"},\"attestBatch((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes)[],address[],uint256[],string[],bytes,bytes)\":{\"notice\":\"Batch attests where the schema hook expects ERC20 payment.\"},\"attestBatch((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes)[],string[],bytes,bytes)\":{\"notice\":\"Batch attests.\"},\"attestBatch((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes)[],uint256[],string[],bytes,bytes)\":{\"notice\":\"Batch attests where the schema hook expects ETH payment.\"},\"attestOffchain(string,address,bytes)\":{\"notice\":\"Timestamps an off-chain data ID.\"},\"attestOffchainBatch(string[],address,bytes)\":{\"notice\":\"Batch timestamps off-chain data IDs.\"},\"attestationCounter()\":{\"notice\":\"Returns the current on-chain attestation counter. This is incremented for each `Attestation` made.\"},\"getAttestation(uint64)\":{\"notice\":\"Returns the specified `Attestation`.\"},\"getDelegatedAttestBatchHash((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes)[])\":{\"notice\":\"Returns the hash that will be used to authorize a delegated batch attestation.\"},\"getDelegatedAttestHash((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes))\":{\"notice\":\"Returns the hash that will be used to authorize a delegated attestation.\"},\"getDelegatedOffchainAttestBatchHash(string[])\":{\"notice\":\"Returns the hash that will be used to authorize a delegated batch offchain attestation.\"},\"getDelegatedOffchainAttestHash(string)\":{\"notice\":\"Returns the hash that will be used to authorize a delegated offchain attestation.\"},\"getDelegatedOffchainRevokeBatchHash(string[],string[])\":{\"notice\":\"Returns the hash that will be used to authorize a delegated batch offchain revocation.\"},\"getDelegatedOffchainRevokeHash(string,string)\":{\"notice\":\"Returns the hash that will be used to authorize a delegated offchain revocation.\"},\"getDelegatedRegisterBatchHash((address,bool,uint8,uint64,address,uint64,string)[])\":{\"notice\":\"Returns the hash that will be used to authorize a delegated batch registration.\"},\"getDelegatedRegisterHash((address,bool,uint8,uint64,address,uint64,string))\":{\"notice\":\"Returns the hash that will be used to authorize a delegated registration.\"},\"getDelegatedRevokeBatchHash(uint64[],string[])\":{\"notice\":\"Returns the hash that will be used to authorize a delegated batch revocation.\"},\"getDelegatedRevokeHash(uint64,string)\":{\"notice\":\"Returns the hash that will be used to authorize a delegated revocation.\"},\"getOffchainAttestation(string)\":{\"notice\":\"Returns the specified `OffchainAttestation`.\"},\"getSchema(uint64)\":{\"notice\":\"Returns the specified `Schema`.\"},\"register((address,bool,uint8,uint64,address,uint64,string),bytes)\":{\"notice\":\"Registers a Schema.\"},\"registerBatch((address,bool,uint8,uint64,address,uint64,string)[],bytes)\":{\"notice\":\"Batch registers a Schema.\"},\"revoke(uint64,string,address,uint256,bytes,bytes)\":{\"notice\":\"Revokes an existing revocable attestation where the schema hook expects ERC20 payment.\"},\"revoke(uint64,string,bytes,bytes)\":{\"notice\":\"Revokes an existing revocable attestation.\"},\"revoke(uint64,string,uint256,bytes,bytes)\":{\"notice\":\"Revokes an existing revocable attestation where the schema hook expects ERC20 payment.\"},\"revokeBatch(uint64[],string[],address[],uint256[],bytes,bytes)\":{\"notice\":\"Batch revokes revocable on-chain attestations where the schema hook expects ERC20 payment.\"},\"revokeBatch(uint64[],string[],bytes,bytes)\":{\"notice\":\"Batch revokes revocable on-chain attestations.\"},\"revokeBatch(uint64[],string[],uint256[],bytes,bytes)\":{\"notice\":\"Batch revokes revocable on-chain attestations where the schema hook expects ETH payment.\"},\"revokeOffchain(string,string,bytes)\":{\"notice\":\"Revokes an existing offchain attestation.\"},\"revokeOffchainBatch(string[],string[],bytes)\":{\"notice\":\"Batch revokes off-chain attestations.\"},\"schemaCounter()\":{\"notice\":\"Returns the current schema counter. This is incremented for each `Schema` registered.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@ethsign/sign-protocol-evm/src/interfaces/ISP.sol\":\"ISP\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ethsign/sign-protocol-evm/src/interfaces/ISP.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { IVersionable } from \\\"./IVersionable.sol\\\";\\nimport { Schema } from \\\"../models/Schema.sol\\\";\\nimport { Attestation, OffchainAttestation } from \\\"../models/Attestation.sol\\\";\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/**\\n * @title Sign Protocol Interface\\n * @author Jack Xu @ EthSign\\n */\\ninterface ISP is IVersionable {\\n    event SchemaRegistered(uint64 schemaId);\\n    event AttestationMade(uint64 attestationId, string indexingKey);\\n    event AttestationRevoked(uint64 attestationId, string reason);\\n    event OffchainAttestationMade(string attestationId);\\n    event OffchainAttestationRevoked(string attestationId, string reason);\\n\\n    /**\\n     * @dev 0x9e87fac8\\n     */\\n    error Paused();\\n    /**\\n     * @dev 0x38f8c6c4\\n     */\\n    error SchemaNonexistent();\\n    /**\\n     * @dev 0x71984561\\n     */\\n    error SchemaWrongRegistrant();\\n    /**\\n     * @dev 0x8ac42f49\\n     */\\n    error AttestationIrrevocable();\\n    /**\\n     * @dev 0x54681a13\\n     */\\n    error AttestationNonexistent();\\n    /**\\n     * @dev 0xa65e02ed\\n     */\\n    error AttestationInvalidDuration();\\n    /**\\n     * @dev 0xd8c3da86\\n     */\\n    error AttestationAlreadyRevoked();\\n    /**\\n     * @dev 0xa9ad2007\\n     */\\n    error AttestationWrongAttester();\\n    /**\\n     * @dev 0xc83e3cdf\\n     */\\n    error OffchainAttestationExists();\\n    /**\\n     * @dev 0xa006519a\\n     */\\n    error OffchainAttestationNonexistent();\\n    /**\\n     * @dev 0xa0671d20\\n     */\\n    error OffchainAttestationAlreadyRevoked();\\n    /**\\n     * @dev 0xfdf4e6f9\\n     */\\n    error InvalidDelegateSignature();\\n    /**\\n     * @dev 0x5c34b9cc\\n     */\\n    error LegacySPRequired();\\n\\n    /**\\n     * @notice Registers a Schema.\\n     * @dev Emits `SchemaRegistered`.\\n     * @param schema See `Schema`.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\\\"\\\"` or `0x`\\n     * otherwise.\\n     * @return schemaId The assigned ID of the registered schema.\\n     */\\n    function register(Schema memory schema, bytes calldata delegateSignature) external returns (uint64 schemaId);\\n\\n    /**\\n     * @notice Makes an attestation.\\n     * @dev Emits `AttestationMade`.\\n     * @param attestation See `Attestation`.\\n     * @param indexingKey Used by the frontend to aid indexing.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\\\"\\\"` or `0x`\\n     * otherwise.\\n     * @param extraData This is forwarded to the resolver directly.\\n     * @return attestationId The assigned ID of the attestation.\\n     */\\n    function attest(\\n        Attestation calldata attestation,\\n        string calldata indexingKey,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        returns (uint64 attestationId);\\n\\n    /**\\n     * @notice Makes an attestation where the schema hook expects ETH payment.\\n     * @dev Emits `AttestationMade`.\\n     * @param attestation See `Attestation`.\\n     * @param resolverFeesETH Amount of funds to send to the hook.\\n     * @param indexingKey Used by the frontend to aid indexing.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\\\"\\\"` or `0x`\\n     * otherwise.\\n     * @param extraData This is forwarded to the resolver directly.\\n     * @return attestationId The assigned ID of the attestation.\\n     */\\n    function attest(\\n        Attestation calldata attestation,\\n        uint256 resolverFeesETH,\\n        string calldata indexingKey,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        payable\\n        returns (uint64 attestationId);\\n\\n    /**\\n     * @notice Makes an attestation where the schema hook expects ERC20 payment.\\n     * @dev Emits `AttestationMade`.\\n     * @param attestation See `Attestation`.\\n     * @param resolverFeesERC20Token ERC20 token address used for payment.\\n     * @param resolverFeesERC20Amount Amount of funds to send to the hook.\\n     * @param indexingKey Used by the frontend to aid indexing.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\\\"\\\"` or `0x`\\n     * otherwise.\\n     * @param extraData This is forwarded to the resolver directly.\\n     * @return attestationId The assigned ID of the attestation.\\n     */\\n    function attest(\\n        Attestation calldata attestation,\\n        IERC20 resolverFeesERC20Token,\\n        uint256 resolverFeesERC20Amount,\\n        string calldata indexingKey,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        returns (uint64 attestationId);\\n\\n    /**\\n     * @notice Timestamps an off-chain data ID.\\n     * @dev Emits `OffchainAttestationMade`.\\n     * @param offchainAttestationId The off-chain data ID.\\n     * @param delegateAttester An optional delegated attester that authorized the caller to attest on their behalf if\\n     * this is a delegated attestation. Use `address(0)` otherwise.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\\\"\\\"` or `0x`\\n     * otherwise. Use `\\\"\\\"` or `0x` otherwise.\\n     */\\n    function attestOffchain(\\n        string calldata offchainAttestationId,\\n        address delegateAttester,\\n        bytes calldata delegateSignature\\n    )\\n        external;\\n\\n    /**\\n     * @notice Revokes an existing revocable attestation.\\n     * @dev Emits `AttestationRevoked`. Must be called by the attester.\\n     * @param attestationId An existing attestation ID.\\n     * @param reason The revocation reason. This is only emitted as an event to save gas.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation.\\n     * @param extraData This is forwarded to the resolver directly.\\n     */\\n    function revoke(\\n        uint64 attestationId,\\n        string calldata reason,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external;\\n\\n    /**\\n     * @notice Revokes an existing revocable attestation where the schema hook expects ERC20 payment.\\n     * @dev Emits `AttestationRevoked`. Must be called by the attester.\\n     * @param attestationId An existing attestation ID.\\n     * @param reason The revocation reason. This is only emitted as an event to save gas.\\n     * @param resolverFeesETH Amount of funds to send to the hook.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation.\\n     * @param extraData This is forwarded to the resolver directly.\\n     */\\n    function revoke(\\n        uint64 attestationId,\\n        string calldata reason,\\n        uint256 resolverFeesETH,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        payable;\\n\\n    /**\\n     * @notice Revokes an existing revocable attestation where the schema hook expects ERC20 payment.\\n     * @dev Emits `AttestationRevoked`. Must be called by the attester.\\n     * @param attestationId An existing attestation ID.\\n     * @param reason The revocation reason. This is only emitted as an event to save gas.\\n     * @param resolverFeesERC20Token ERC20 token address used for payment.\\n     * @param resolverFeesERC20Amount Amount of funds to send to the hook.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation.\\n     * @param extraData This is forwarded to the resolver directly.\\n     */\\n    function revoke(\\n        uint64 attestationId,\\n        string calldata reason,\\n        IERC20 resolverFeesERC20Token,\\n        uint256 resolverFeesERC20Amount,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external;\\n\\n    /**\\n     * @notice Revokes an existing offchain attestation.\\n     * @dev Emits `OffchainAttestationRevoked`. Must be called by the attester.\\n     * @param offchainAttestationId An existing attestation ID.\\n     * @param reason The revocation reason. This is only emitted as an event to save gas.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation.\\n     */\\n    function revokeOffchain(\\n        string calldata offchainAttestationId,\\n        string calldata reason,\\n        bytes calldata delegateSignature\\n    )\\n        external;\\n\\n    /**\\n     * @notice Batch registers a Schema.\\n     */\\n    function registerBatch(\\n        Schema[] calldata schemas,\\n        bytes calldata delegateSignature\\n    )\\n        external\\n        returns (uint64[] calldata schemaIds);\\n\\n    /**\\n     * @notice Batch attests.\\n     */\\n    function attestBatch(\\n        Attestation[] calldata attestations,\\n        string[] calldata indexingKeys,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        returns (uint64[] calldata attestationIds);\\n\\n    /**\\n     * @notice Batch attests where the schema hook expects ETH payment.\\n     */\\n    function attestBatch(\\n        Attestation[] calldata attestations,\\n        uint256[] calldata resolverFeesETH,\\n        string[] calldata indexingKeys,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        payable\\n        returns (uint64[] calldata attestationIds);\\n\\n    /**\\n     * @notice Batch attests where the schema hook expects ERC20 payment.\\n     */\\n    function attestBatch(\\n        Attestation[] calldata attestations,\\n        IERC20[] calldata resolverFeesERC20Tokens,\\n        uint256[] calldata resolverFeesERC20Amount,\\n        string[] calldata indexingKeys,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        returns (uint64[] calldata attestationIds);\\n\\n    /**\\n     * @notice Batch timestamps off-chain data IDs.\\n     */\\n    function attestOffchainBatch(\\n        string[] calldata offchainAttestationIds,\\n        address delegateAttester,\\n        bytes calldata delegateSignature\\n    )\\n        external;\\n\\n    /**\\n     * @notice Batch revokes revocable on-chain attestations.\\n     */\\n    function revokeBatch(\\n        uint64[] calldata attestationIds,\\n        string[] calldata reasons,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external;\\n\\n    /**\\n     * @notice Batch revokes revocable on-chain attestations where the schema hook expects ETH payment.\\n     */\\n    function revokeBatch(\\n        uint64[] calldata attestationIds,\\n        string[] calldata reasons,\\n        uint256[] calldata resolverFeesETH,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        payable;\\n\\n    /**\\n     * @notice Batch revokes revocable on-chain attestations where the schema hook expects ERC20 payment.\\n     */\\n    function revokeBatch(\\n        uint64[] calldata attestationIds,\\n        string[] calldata reasons,\\n        IERC20[] calldata resolverFeesERC20Tokens,\\n        uint256[] calldata resolverFeesERC20Amount,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external;\\n\\n    /**\\n     * @notice Batch revokes off-chain attestations.\\n     */\\n    function revokeOffchainBatch(\\n        string[] calldata offchainAttestationIds,\\n        string[] calldata reasons,\\n        bytes calldata delegateSignature\\n    )\\n        external;\\n\\n    /**\\n     * @notice Returns the specified `Schema`.\\n     */\\n    function getSchema(uint64 schemaId) external view returns (Schema calldata);\\n\\n    /**\\n     * @notice Returns the specified `Attestation`.\\n     */\\n    function getAttestation(uint64 attestationId) external view returns (Attestation calldata);\\n\\n    /**\\n     * @notice Returns the specified `OffchainAttestation`.\\n     */\\n    function getOffchainAttestation(string calldata offchainAttestationId)\\n        external\\n        view\\n        returns (OffchainAttestation calldata);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated registration.\\n     */\\n    function getDelegatedRegisterHash(Schema memory schema) external pure returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated batch registration.\\n     */\\n    function getDelegatedRegisterBatchHash(Schema[] memory schemas) external pure returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated attestation.\\n     */\\n    function getDelegatedAttestHash(Attestation calldata attestation) external pure returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated batch attestation.\\n     */\\n    function getDelegatedAttestBatchHash(Attestation[] calldata attestations) external pure returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated offchain attestation.\\n     */\\n    function getDelegatedOffchainAttestHash(string calldata offchainAttestationId) external pure returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated batch offchain attestation.\\n     */\\n    function getDelegatedOffchainAttestBatchHash(string[] calldata offchainAttestationIds)\\n        external\\n        pure\\n        returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated revocation.\\n     */\\n    function getDelegatedRevokeHash(uint64 attestationId, string memory reason) external pure returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated batch revocation.\\n     */\\n    function getDelegatedRevokeBatchHash(\\n        uint64[] memory attestationIds,\\n        string[] memory reasons\\n    )\\n        external\\n        pure\\n        returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated offchain revocation.\\n     */\\n    function getDelegatedOffchainRevokeHash(\\n        string memory offchainAttestationId,\\n        string memory reason\\n    )\\n        external\\n        pure\\n        returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated batch offchain revocation.\\n     */\\n    function getDelegatedOffchainRevokeBatchHash(\\n        string[] memory offchainAttestationIds,\\n        string[] memory reasons\\n    )\\n        external\\n        pure\\n        returns (bytes32);\\n\\n    /**\\n     * @notice Returns the current schema counter. This is incremented for each `Schema` registered.\\n     */\\n    function schemaCounter() external view returns (uint64);\\n\\n    /**\\n     * @notice Returns the current on-chain attestation counter. This is incremented for each `Attestation` made.\\n     */\\n    function attestationCounter() external view returns (uint64);\\n}\\n\",\"keccak256\":\"0xd5ddbb7cc6af2ee4c11d6c5dac739fc6254d84e13167bc054eb4477244490756\",\"license\":\"MIT\"},\"@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/**\\n * @title SIGN Attestation Protocol Resolver Interface\\n * @author Jack Xu @ EthSign\\n */\\ninterface ISPHook {\\n    function didReceiveAttestation(\\n        address attester,\\n        uint64 schemaId,\\n        uint64 attestationId,\\n        bytes calldata extraData\\n    )\\n        external\\n        payable;\\n\\n    function didReceiveAttestation(\\n        address attester,\\n        uint64 schemaId,\\n        uint64 attestationId,\\n        IERC20 resolverFeeERC20Token,\\n        uint256 resolverFeeERC20Amount,\\n        bytes calldata extraData\\n    )\\n        external;\\n\\n    function didReceiveRevocation(\\n        address attester,\\n        uint64 schemaId,\\n        uint64 attestationId,\\n        bytes calldata extraData\\n    )\\n        external\\n        payable;\\n\\n    function didReceiveRevocation(\\n        address attester,\\n        uint64 schemaId,\\n        uint64 attestationId,\\n        IERC20 resolverFeeERC20Token,\\n        uint256 resolverFeeERC20Amount,\\n        bytes calldata extraData\\n    )\\n        external;\\n}\\n\",\"keccak256\":\"0xa42159d34c4b8fa91507efacad81c14106f466efdc63b81a7d566dc0d2e736f4\",\"license\":\"MIT\"},\"@ethsign/sign-protocol-evm/src/interfaces/IVersionable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title IVersionable\\n * @author Jack Xu @ EthSign\\n * @dev This interface helps contracts to keep track of their versioning for upgrade compatibility checks.\\n */\\ninterface IVersionable {\\n    function version() external pure returns (string memory);\\n}\\n\",\"keccak256\":\"0xbcf1955aa8423f4f77a46a988a7cd41a46ae92af42aa4546cfebdc2a92916129\",\"license\":\"MIT\"},\"@ethsign/sign-protocol-evm/src/models/Attestation.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { DataLocation } from \\\"./DataLocation.sol\\\";\\n\\n/**\\n * @title Attestation\\n * @author Jack Xu @ EthSign\\n * @notice This struct represents an on-chain attestation record. This record is not deleted after revocation.\\n *\\n * `schemaId`: The `Schema` that this Attestation is based on. It must exist.\\n * `linkedAttestationId`: Useful if the current Attestation references a previous Attestation. It can either be 0 or an\\n * existing attestation ID.\\n * `attestTimestamp`: When the attestation was made. This is automatically populated by `_attest(...)`.\\n * `revokeTimestamp`: When the attestation was revoked. This is automatically populated by `_revoke(...)`.\\n * `attester`: The attester. At this time, the attester must be the caller of `attest()`.\\n * `validUntil`: The expiration timestamp of the Attestation. Must respect `Schema.maxValidFor`. 0 indicates no\\n * expiration date.\\n * `dataLocation`: Where `Attestation.data` is stored. See `DataLocation.DataLocation`.\\n * `revoked`: If the Attestation has been revoked. It is possible to make a revoked Attestation.\\n * `recipients`: The intended ABI-encoded recipients of this Attestation. This is of type `bytes` to support non-EVM\\n * repicients.\\n * `data`: The raw data of the Attestation based on `Schema.schema`. There is no enforcement here, however. Recommended\\n * to use `abi.encode`.\\n */\\nstruct Attestation {\\n    uint64 schemaId;\\n    uint64 linkedAttestationId;\\n    uint64 attestTimestamp;\\n    uint64 revokeTimestamp;\\n    address attester;\\n    uint64 validUntil;\\n    DataLocation dataLocation;\\n    bool revoked;\\n    bytes[] recipients;\\n    bytes data;\\n}\\n\\n/**\\n * @title OffchainAttestation\\n * @author Jack Xu @ EthSign\\n * @notice This struct represents an off-chain attestation record. This record is not deleted after revocation.\\n *\\n * `attester`: The attester. At this time, the attester must be the caller of `attestOffchain()`.\\n * `timestamp`: The `block.timestamp` of the function call.\\n */\\nstruct OffchainAttestation {\\n    address attester;\\n    uint64 timestamp;\\n}\\n\",\"keccak256\":\"0x8e2a182141d06bfdcce1325d70e8dd307f7d6b3d7b6fafcedc2dbabeb99fa30f\",\"license\":\"MIT\"},\"@ethsign/sign-protocol-evm/src/models/DataLocation.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title DataLocation\\n * @author Jack Xu @ EthSign\\n * @notice This enum indicates where `Schema.data` and `Attestation.data` are stored.\\n */\\nenum DataLocation {\\n    ONCHAIN,\\n    ARWEAVE,\\n    IPFS,\\n    CUSTOM\\n}\\n\",\"keccak256\":\"0x14f64929317cae8ae822a0dd2c20315ac141f10fa255cd2b13a0a4962385ec10\",\"license\":\"MIT\"},\"@ethsign/sign-protocol-evm/src/models/Schema.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { ISPHook } from \\\"../interfaces/ISPHook.sol\\\";\\nimport { DataLocation } from \\\"./DataLocation.sol\\\";\\n\\n/**\\n * @title Schema\\n * @author Jack Xu @ EthSign\\n * @notice This struct represents an on-chain Schema that Attestations can conform to.\\n *\\n * `registrant`: The address that registered this schema.\\n * `revocable`: Whether Attestations that adopt this Schema can be revoked.\\n * `dataLocation`: Where `Schema.data` is stored. See `DataLocation.DataLocation`.\\n * `maxValidFor`: The maximum number of seconds that an Attestation can remain valid. 0 means Attestations can be valid\\n * forever. This is enforced through `Attestation.validUntil`.\\n * `hook`: The `ISPHook` that is called at the end of every function. 0 means there is no hook set. See\\n * `ISPHook`.\\n * `timestamp`: When the schema was registered. This is automatically populated by `_register(...)`.\\n * `data`: The raw schema that `Attestation.data` should follow. Since there is no way to enforce this, it is a `string`\\n * for easy readability.\\n */\\nstruct Schema {\\n    address registrant;\\n    bool revocable;\\n    DataLocation dataLocation;\\n    uint64 maxValidFor;\\n    ISPHook hook;\\n    uint64 timestamp;\\n    string data;\\n}\\n\",\"keccak256\":\"0xcf3bd964790fdc7f72bacc86380b307e58bf15fa5f7332852d4969fe0db58216\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"attest((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes),address,uint256,string,bytes,bytes)":{"notice":"Makes an attestation where the schema hook expects ERC20 payment."},"attest((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes),string,bytes,bytes)":{"notice":"Makes an attestation."},"attest((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes),uint256,string,bytes,bytes)":{"notice":"Makes an attestation where the schema hook expects ETH payment."},"attestBatch((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes)[],address[],uint256[],string[],bytes,bytes)":{"notice":"Batch attests where the schema hook expects ERC20 payment."},"attestBatch((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes)[],string[],bytes,bytes)":{"notice":"Batch attests."},"attestBatch((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes)[],uint256[],string[],bytes,bytes)":{"notice":"Batch attests where the schema hook expects ETH payment."},"attestOffchain(string,address,bytes)":{"notice":"Timestamps an off-chain data ID."},"attestOffchainBatch(string[],address,bytes)":{"notice":"Batch timestamps off-chain data IDs."},"attestationCounter()":{"notice":"Returns the current on-chain attestation counter. This is incremented for each `Attestation` made."},"getAttestation(uint64)":{"notice":"Returns the specified `Attestation`."},"getDelegatedAttestBatchHash((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes)[])":{"notice":"Returns the hash that will be used to authorize a delegated batch attestation."},"getDelegatedAttestHash((uint64,uint64,uint64,uint64,address,uint64,uint8,bool,bytes[],bytes))":{"notice":"Returns the hash that will be used to authorize a delegated attestation."},"getDelegatedOffchainAttestBatchHash(string[])":{"notice":"Returns the hash that will be used to authorize a delegated batch offchain attestation."},"getDelegatedOffchainAttestHash(string)":{"notice":"Returns the hash that will be used to authorize a delegated offchain attestation."},"getDelegatedOffchainRevokeBatchHash(string[],string[])":{"notice":"Returns the hash that will be used to authorize a delegated batch offchain revocation."},"getDelegatedOffchainRevokeHash(string,string)":{"notice":"Returns the hash that will be used to authorize a delegated offchain revocation."},"getDelegatedRegisterBatchHash((address,bool,uint8,uint64,address,uint64,string)[])":{"notice":"Returns the hash that will be used to authorize a delegated batch registration."},"getDelegatedRegisterHash((address,bool,uint8,uint64,address,uint64,string))":{"notice":"Returns the hash that will be used to authorize a delegated registration."},"getDelegatedRevokeBatchHash(uint64[],string[])":{"notice":"Returns the hash that will be used to authorize a delegated batch revocation."},"getDelegatedRevokeHash(uint64,string)":{"notice":"Returns the hash that will be used to authorize a delegated revocation."},"getOffchainAttestation(string)":{"notice":"Returns the specified `OffchainAttestation`."},"getSchema(uint64)":{"notice":"Returns the specified `Schema`."},"register((address,bool,uint8,uint64,address,uint64,string),bytes)":{"notice":"Registers a Schema."},"registerBatch((address,bool,uint8,uint64,address,uint64,string)[],bytes)":{"notice":"Batch registers a Schema."},"revoke(uint64,string,address,uint256,bytes,bytes)":{"notice":"Revokes an existing revocable attestation where the schema hook expects ERC20 payment."},"revoke(uint64,string,bytes,bytes)":{"notice":"Revokes an existing revocable attestation."},"revoke(uint64,string,uint256,bytes,bytes)":{"notice":"Revokes an existing revocable attestation where the schema hook expects ERC20 payment."},"revokeBatch(uint64[],string[],address[],uint256[],bytes,bytes)":{"notice":"Batch revokes revocable on-chain attestations where the schema hook expects ERC20 payment."},"revokeBatch(uint64[],string[],bytes,bytes)":{"notice":"Batch revokes revocable on-chain attestations."},"revokeBatch(uint64[],string[],uint256[],bytes,bytes)":{"notice":"Batch revokes revocable on-chain attestations where the schema hook expects ETH payment."},"revokeOffchain(string,string,bytes)":{"notice":"Revokes an existing offchain attestation."},"revokeOffchainBatch(string[],string[],bytes)":{"notice":"Batch revokes off-chain attestations."},"schemaCounter()":{"notice":"Returns the current schema counter. This is incremented for each `Schema` registered."}},"version":1}}},"@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol":{"ISPHook":{"abi":[{"inputs":[{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint64","name":"schemaId","type":"uint64"},{"internalType":"uint64","name":"attestationId","type":"uint64"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"didReceiveAttestation","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint64","name":"schemaId","type":"uint64"},{"internalType":"uint64","name":"attestationId","type":"uint64"},{"internalType":"contract IERC20","name":"resolverFeeERC20Token","type":"address"},{"internalType":"uint256","name":"resolverFeeERC20Amount","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"didReceiveAttestation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint64","name":"schemaId","type":"uint64"},{"internalType":"uint64","name":"attestationId","type":"uint64"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"didReceiveRevocation","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint64","name":"schemaId","type":"uint64"},{"internalType":"uint64","name":"attestationId","type":"uint64"},{"internalType":"contract IERC20","name":"resolverFeeERC20Token","type":"address"},{"internalType":"uint256","name":"resolverFeeERC20Amount","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"didReceiveRevocation","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Jack Xu @ EthSign","kind":"dev","methods":{},"title":"SIGN Attestation Protocol Resolver Interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"didReceiveAttestation(address,uint64,uint64,address,uint256,bytes)":"4466507a","didReceiveAttestation(address,uint64,uint64,bytes)":"3398b4ed","didReceiveRevocation(address,uint64,uint64,address,uint256,bytes)":"e830b5c7","didReceiveRevocation(address,uint64,uint64,bytes)":"e33361f4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"attestationId\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"didReceiveAttestation\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"attestationId\",\"type\":\"uint64\"},{\"internalType\":\"contract IERC20\",\"name\":\"resolverFeeERC20Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"resolverFeeERC20Amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"didReceiveAttestation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"attestationId\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"didReceiveRevocation\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"schemaId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"attestationId\",\"type\":\"uint64\"},{\"internalType\":\"contract IERC20\",\"name\":\"resolverFeeERC20Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"resolverFeeERC20Amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"didReceiveRevocation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Jack Xu @ EthSign\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SIGN Attestation Protocol Resolver Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol\":\"ISPHook\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/**\\n * @title SIGN Attestation Protocol Resolver Interface\\n * @author Jack Xu @ EthSign\\n */\\ninterface ISPHook {\\n    function didReceiveAttestation(\\n        address attester,\\n        uint64 schemaId,\\n        uint64 attestationId,\\n        bytes calldata extraData\\n    )\\n        external\\n        payable;\\n\\n    function didReceiveAttestation(\\n        address attester,\\n        uint64 schemaId,\\n        uint64 attestationId,\\n        IERC20 resolverFeeERC20Token,\\n        uint256 resolverFeeERC20Amount,\\n        bytes calldata extraData\\n    )\\n        external;\\n\\n    function didReceiveRevocation(\\n        address attester,\\n        uint64 schemaId,\\n        uint64 attestationId,\\n        bytes calldata extraData\\n    )\\n        external\\n        payable;\\n\\n    function didReceiveRevocation(\\n        address attester,\\n        uint64 schemaId,\\n        uint64 attestationId,\\n        IERC20 resolverFeeERC20Token,\\n        uint256 resolverFeeERC20Amount,\\n        bytes calldata extraData\\n    )\\n        external;\\n}\\n\",\"keccak256\":\"0xa42159d34c4b8fa91507efacad81c14106f466efdc63b81a7d566dc0d2e736f4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@ethsign/sign-protocol-evm/src/interfaces/IVersionable.sol":{"IVersionable":{"abi":[{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"}],"devdoc":{"author":"Jack Xu @ EthSign","details":"This interface helps contracts to keep track of their versioning for upgrade compatibility checks.","kind":"dev","methods":{},"title":"IVersionable","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Jack Xu @ EthSign\",\"details\":\"This interface helps contracts to keep track of their versioning for upgrade compatibility checks.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IVersionable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@ethsign/sign-protocol-evm/src/interfaces/IVersionable.sol\":\"IVersionable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ethsign/sign-protocol-evm/src/interfaces/IVersionable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title IVersionable\\n * @author Jack Xu @ EthSign\\n * @dev This interface helps contracts to keep track of their versioning for upgrade compatibility checks.\\n */\\ninterface IVersionable {\\n    function version() external pure returns (string memory);\\n}\\n\",\"keccak256\":\"0xbcf1955aa8423f4f77a46a988a7cd41a46ae92af42aa4546cfebdc2a92916129\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the address provided by the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":639,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/EducationalCredential.sol":{"EducationalCredential":{"abi":[{"inputs":[{"internalType":"address","name":"spInstanceAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"institution","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"string","name":"course","type":"string"},{"indexed":false,"internalType":"uint256","name":"issueDate","type":"uint256"}],"name":"CredentialIssued","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"CREDENTIAL_SCHEMA_ID","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"wallet","type":"address"}],"name":"getCredentials","outputs":[{"internalType":"string[]","name":"courses","type":"string[]"},{"internalType":"uint256[]","name":"issueDates","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"wallet","type":"address"}],"name":"getLatestCredential","outputs":[{"internalType":"bool","name":"found","type":"bool"},{"internalType":"string","name":"course","type":"string"},{"internalType":"uint256","name":"issueDate","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"string","name":"course","type":"string"},{"internalType":"uint256","name":"issueDate","type":"uint256"}],"name":"issueCredential","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"instance","type":"address"}],"name":"setSPInstance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"spInstance","outputs":[{"internalType":"contract ISP","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_681":{"entryPoint":null,"id":681,"parameterSlots":1,"returnSlots":0},"@_947":{"entryPoint":null,"id":947,"parameterSlots":1,"returnSlots":0},"@_msgSender_868":{"entryPoint":392,"id":868,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_777":{"entryPoint":400,"id":777,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":679,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":702,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":752,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_c8dd3191f3dcc39739dca1bcaf395cf1761dcb1f4ca0dd96a0d29ee3f0de65f4_to_t_string_memory_ptr_fromStack":{"entryPoint":856,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":769,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c8dd3191f3dcc39739dca1bcaf395cf1761dcb1f4ca0dd96a0d29ee3f0de65f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":895,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":798,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":633,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":601,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":596,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_c8dd3191f3dcc39739dca1bcaf395cf1761dcb1f4ca0dd96a0d29ee3f0de65f4":{"entryPoint":815,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":653,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:2706:10","nodeType":"YulBlock","src":"0:2706:10","statements":[{"body":{"nativeSrc":"47:35:10","nodeType":"YulBlock","src":"47:35:10","statements":[{"nativeSrc":"57:19:10","nodeType":"YulAssignment","src":"57:19:10","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:10","nodeType":"YulLiteral","src":"73:2:10","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:10","nodeType":"YulIdentifier","src":"67:5:10"},"nativeSrc":"67:9:10","nodeType":"YulFunctionCall","src":"67:9:10"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:10","nodeType":"YulIdentifier","src":"57:6:10"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:10","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:10","nodeType":"YulTypedName","src":"40:6:10","type":""}],"src":"7:75:10"},{"body":{"nativeSrc":"177:28:10","nodeType":"YulBlock","src":"177:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:10","nodeType":"YulLiteral","src":"194:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:10","nodeType":"YulLiteral","src":"197:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:10","nodeType":"YulIdentifier","src":"187:6:10"},"nativeSrc":"187:12:10","nodeType":"YulFunctionCall","src":"187:12:10"},"nativeSrc":"187:12:10","nodeType":"YulExpressionStatement","src":"187:12:10"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:10","nodeType":"YulFunctionDefinition","src":"88:117:10"},{"body":{"nativeSrc":"300:28:10","nodeType":"YulBlock","src":"300:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:10","nodeType":"YulLiteral","src":"317:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:10","nodeType":"YulLiteral","src":"320:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:10","nodeType":"YulIdentifier","src":"310:6:10"},"nativeSrc":"310:12:10","nodeType":"YulFunctionCall","src":"310:12:10"},"nativeSrc":"310:12:10","nodeType":"YulExpressionStatement","src":"310:12:10"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:10","nodeType":"YulFunctionDefinition","src":"211:117:10"},{"body":{"nativeSrc":"379:81:10","nodeType":"YulBlock","src":"379:81:10","statements":[{"nativeSrc":"389:65:10","nodeType":"YulAssignment","src":"389:65:10","value":{"arguments":[{"name":"value","nativeSrc":"404:5:10","nodeType":"YulIdentifier","src":"404:5:10"},{"kind":"number","nativeSrc":"411:42:10","nodeType":"YulLiteral","src":"411:42:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:10","nodeType":"YulIdentifier","src":"400:3:10"},"nativeSrc":"400:54:10","nodeType":"YulFunctionCall","src":"400:54:10"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:10","nodeType":"YulIdentifier","src":"389:7:10"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:10","nodeType":"YulTypedName","src":"361:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:10","nodeType":"YulTypedName","src":"371:7:10","type":""}],"src":"334:126:10"},{"body":{"nativeSrc":"511:51:10","nodeType":"YulBlock","src":"511:51:10","statements":[{"nativeSrc":"521:35:10","nodeType":"YulAssignment","src":"521:35:10","value":{"arguments":[{"name":"value","nativeSrc":"550:5:10","nodeType":"YulIdentifier","src":"550:5:10"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:10","nodeType":"YulIdentifier","src":"532:17:10"},"nativeSrc":"532:24:10","nodeType":"YulFunctionCall","src":"532:24:10"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:10","nodeType":"YulIdentifier","src":"521:7:10"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:10","nodeType":"YulTypedName","src":"493:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:10","nodeType":"YulTypedName","src":"503:7:10","type":""}],"src":"466:96:10"},{"body":{"nativeSrc":"611:79:10","nodeType":"YulBlock","src":"611:79:10","statements":[{"body":{"nativeSrc":"668:16:10","nodeType":"YulBlock","src":"668:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:10","nodeType":"YulLiteral","src":"677:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:10","nodeType":"YulLiteral","src":"680:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:10","nodeType":"YulIdentifier","src":"670:6:10"},"nativeSrc":"670:12:10","nodeType":"YulFunctionCall","src":"670:12:10"},"nativeSrc":"670:12:10","nodeType":"YulExpressionStatement","src":"670:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:10","nodeType":"YulIdentifier","src":"634:5:10"},{"arguments":[{"name":"value","nativeSrc":"659:5:10","nodeType":"YulIdentifier","src":"659:5:10"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:10","nodeType":"YulIdentifier","src":"641:17:10"},"nativeSrc":"641:24:10","nodeType":"YulFunctionCall","src":"641:24:10"}],"functionName":{"name":"eq","nativeSrc":"631:2:10","nodeType":"YulIdentifier","src":"631:2:10"},"nativeSrc":"631:35:10","nodeType":"YulFunctionCall","src":"631:35:10"}],"functionName":{"name":"iszero","nativeSrc":"624:6:10","nodeType":"YulIdentifier","src":"624:6:10"},"nativeSrc":"624:43:10","nodeType":"YulFunctionCall","src":"624:43:10"},"nativeSrc":"621:63:10","nodeType":"YulIf","src":"621:63:10"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:10","nodeType":"YulTypedName","src":"604:5:10","type":""}],"src":"568:122:10"},{"body":{"nativeSrc":"759:80:10","nodeType":"YulBlock","src":"759:80:10","statements":[{"nativeSrc":"769:22:10","nodeType":"YulAssignment","src":"769:22:10","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:10","nodeType":"YulIdentifier","src":"784:6:10"}],"functionName":{"name":"mload","nativeSrc":"778:5:10","nodeType":"YulIdentifier","src":"778:5:10"},"nativeSrc":"778:13:10","nodeType":"YulFunctionCall","src":"778:13:10"},"variableNames":[{"name":"value","nativeSrc":"769:5:10","nodeType":"YulIdentifier","src":"769:5:10"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:10","nodeType":"YulIdentifier","src":"827:5:10"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:10","nodeType":"YulIdentifier","src":"800:26:10"},"nativeSrc":"800:33:10","nodeType":"YulFunctionCall","src":"800:33:10"},"nativeSrc":"800:33:10","nodeType":"YulExpressionStatement","src":"800:33:10"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:10","nodeType":"YulTypedName","src":"737:6:10","type":""},{"name":"end","nativeSrc":"745:3:10","nodeType":"YulTypedName","src":"745:3:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:10","nodeType":"YulTypedName","src":"753:5:10","type":""}],"src":"696:143:10"},{"body":{"nativeSrc":"922:274:10","nodeType":"YulBlock","src":"922:274:10","statements":[{"body":{"nativeSrc":"968:83:10","nodeType":"YulBlock","src":"968:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"970:77:10","nodeType":"YulIdentifier","src":"970:77:10"},"nativeSrc":"970:79:10","nodeType":"YulFunctionCall","src":"970:79:10"},"nativeSrc":"970:79:10","nodeType":"YulExpressionStatement","src":"970:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"943:7:10","nodeType":"YulIdentifier","src":"943:7:10"},{"name":"headStart","nativeSrc":"952:9:10","nodeType":"YulIdentifier","src":"952:9:10"}],"functionName":{"name":"sub","nativeSrc":"939:3:10","nodeType":"YulIdentifier","src":"939:3:10"},"nativeSrc":"939:23:10","nodeType":"YulFunctionCall","src":"939:23:10"},{"kind":"number","nativeSrc":"964:2:10","nodeType":"YulLiteral","src":"964:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"935:3:10","nodeType":"YulIdentifier","src":"935:3:10"},"nativeSrc":"935:32:10","nodeType":"YulFunctionCall","src":"935:32:10"},"nativeSrc":"932:119:10","nodeType":"YulIf","src":"932:119:10"},{"nativeSrc":"1061:128:10","nodeType":"YulBlock","src":"1061:128:10","statements":[{"nativeSrc":"1076:15:10","nodeType":"YulVariableDeclaration","src":"1076:15:10","value":{"kind":"number","nativeSrc":"1090:1:10","nodeType":"YulLiteral","src":"1090:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1080:6:10","nodeType":"YulTypedName","src":"1080:6:10","type":""}]},{"nativeSrc":"1105:74:10","nodeType":"YulAssignment","src":"1105:74:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1151:9:10","nodeType":"YulIdentifier","src":"1151:9:10"},{"name":"offset","nativeSrc":"1162:6:10","nodeType":"YulIdentifier","src":"1162:6:10"}],"functionName":{"name":"add","nativeSrc":"1147:3:10","nodeType":"YulIdentifier","src":"1147:3:10"},"nativeSrc":"1147:22:10","nodeType":"YulFunctionCall","src":"1147:22:10"},{"name":"dataEnd","nativeSrc":"1171:7:10","nodeType":"YulIdentifier","src":"1171:7:10"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1115:31:10","nodeType":"YulIdentifier","src":"1115:31:10"},"nativeSrc":"1115:64:10","nodeType":"YulFunctionCall","src":"1115:64:10"},"variableNames":[{"name":"value0","nativeSrc":"1105:6:10","nodeType":"YulIdentifier","src":"1105:6:10"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"845:351:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"892:9:10","nodeType":"YulTypedName","src":"892:9:10","type":""},{"name":"dataEnd","nativeSrc":"903:7:10","nodeType":"YulTypedName","src":"903:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"915:6:10","nodeType":"YulTypedName","src":"915:6:10","type":""}],"src":"845:351:10"},{"body":{"nativeSrc":"1267:53:10","nodeType":"YulBlock","src":"1267:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1284:3:10","nodeType":"YulIdentifier","src":"1284:3:10"},{"arguments":[{"name":"value","nativeSrc":"1307:5:10","nodeType":"YulIdentifier","src":"1307:5:10"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1289:17:10","nodeType":"YulIdentifier","src":"1289:17:10"},"nativeSrc":"1289:24:10","nodeType":"YulFunctionCall","src":"1289:24:10"}],"functionName":{"name":"mstore","nativeSrc":"1277:6:10","nodeType":"YulIdentifier","src":"1277:6:10"},"nativeSrc":"1277:37:10","nodeType":"YulFunctionCall","src":"1277:37:10"},"nativeSrc":"1277:37:10","nodeType":"YulExpressionStatement","src":"1277:37:10"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"1202:118:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1255:5:10","nodeType":"YulTypedName","src":"1255:5:10","type":""},{"name":"pos","nativeSrc":"1262:3:10","nodeType":"YulTypedName","src":"1262:3:10","type":""}],"src":"1202:118:10"},{"body":{"nativeSrc":"1424:124:10","nodeType":"YulBlock","src":"1424:124:10","statements":[{"nativeSrc":"1434:26:10","nodeType":"YulAssignment","src":"1434:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"1446:9:10","nodeType":"YulIdentifier","src":"1446:9:10"},{"kind":"number","nativeSrc":"1457:2:10","nodeType":"YulLiteral","src":"1457:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1442:3:10","nodeType":"YulIdentifier","src":"1442:3:10"},"nativeSrc":"1442:18:10","nodeType":"YulFunctionCall","src":"1442:18:10"},"variableNames":[{"name":"tail","nativeSrc":"1434:4:10","nodeType":"YulIdentifier","src":"1434:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1514:6:10","nodeType":"YulIdentifier","src":"1514:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"1527:9:10","nodeType":"YulIdentifier","src":"1527:9:10"},{"kind":"number","nativeSrc":"1538:1:10","nodeType":"YulLiteral","src":"1538:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1523:3:10","nodeType":"YulIdentifier","src":"1523:3:10"},"nativeSrc":"1523:17:10","nodeType":"YulFunctionCall","src":"1523:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"1470:43:10","nodeType":"YulIdentifier","src":"1470:43:10"},"nativeSrc":"1470:71:10","nodeType":"YulFunctionCall","src":"1470:71:10"},"nativeSrc":"1470:71:10","nodeType":"YulExpressionStatement","src":"1470:71:10"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1326:222:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1396:9:10","nodeType":"YulTypedName","src":"1396:9:10","type":""},{"name":"value0","nativeSrc":"1408:6:10","nodeType":"YulTypedName","src":"1408:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1419:4:10","nodeType":"YulTypedName","src":"1419:4:10","type":""}],"src":"1326:222:10"},{"body":{"nativeSrc":"1650:73:10","nodeType":"YulBlock","src":"1650:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1667:3:10","nodeType":"YulIdentifier","src":"1667:3:10"},{"name":"length","nativeSrc":"1672:6:10","nodeType":"YulIdentifier","src":"1672:6:10"}],"functionName":{"name":"mstore","nativeSrc":"1660:6:10","nodeType":"YulIdentifier","src":"1660:6:10"},"nativeSrc":"1660:19:10","nodeType":"YulFunctionCall","src":"1660:19:10"},"nativeSrc":"1660:19:10","nodeType":"YulExpressionStatement","src":"1660:19:10"},{"nativeSrc":"1688:29:10","nodeType":"YulAssignment","src":"1688:29:10","value":{"arguments":[{"name":"pos","nativeSrc":"1707:3:10","nodeType":"YulIdentifier","src":"1707:3:10"},{"kind":"number","nativeSrc":"1712:4:10","nodeType":"YulLiteral","src":"1712:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1703:3:10","nodeType":"YulIdentifier","src":"1703:3:10"},"nativeSrc":"1703:14:10","nodeType":"YulFunctionCall","src":"1703:14:10"},"variableNames":[{"name":"updated_pos","nativeSrc":"1688:11:10","nodeType":"YulIdentifier","src":"1688:11:10"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1554:169:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1622:3:10","nodeType":"YulTypedName","src":"1622:3:10","type":""},{"name":"length","nativeSrc":"1627:6:10","nodeType":"YulTypedName","src":"1627:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1638:11:10","nodeType":"YulTypedName","src":"1638:11:10","type":""}],"src":"1554:169:10"},{"body":{"nativeSrc":"1835:71:10","nodeType":"YulBlock","src":"1835:71:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"1857:6:10","nodeType":"YulIdentifier","src":"1857:6:10"},{"kind":"number","nativeSrc":"1865:1:10","nodeType":"YulLiteral","src":"1865:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1853:3:10","nodeType":"YulIdentifier","src":"1853:3:10"},"nativeSrc":"1853:14:10","nodeType":"YulFunctionCall","src":"1853:14:10"},{"hexValue":"496e76616c696420535020696e7374616e63652061646472657373","kind":"string","nativeSrc":"1869:29:10","nodeType":"YulLiteral","src":"1869:29:10","type":"","value":"Invalid SP instance address"}],"functionName":{"name":"mstore","nativeSrc":"1846:6:10","nodeType":"YulIdentifier","src":"1846:6:10"},"nativeSrc":"1846:53:10","nodeType":"YulFunctionCall","src":"1846:53:10"},"nativeSrc":"1846:53:10","nodeType":"YulExpressionStatement","src":"1846:53:10"}]},"name":"store_literal_in_memory_c8dd3191f3dcc39739dca1bcaf395cf1761dcb1f4ca0dd96a0d29ee3f0de65f4","nativeSrc":"1729:177:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"1827:6:10","nodeType":"YulTypedName","src":"1827:6:10","type":""}],"src":"1729:177:10"},{"body":{"nativeSrc":"2058:220:10","nodeType":"YulBlock","src":"2058:220:10","statements":[{"nativeSrc":"2068:74:10","nodeType":"YulAssignment","src":"2068:74:10","value":{"arguments":[{"name":"pos","nativeSrc":"2134:3:10","nodeType":"YulIdentifier","src":"2134:3:10"},{"kind":"number","nativeSrc":"2139:2:10","nodeType":"YulLiteral","src":"2139:2:10","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2075:58:10","nodeType":"YulIdentifier","src":"2075:58:10"},"nativeSrc":"2075:67:10","nodeType":"YulFunctionCall","src":"2075:67:10"},"variableNames":[{"name":"pos","nativeSrc":"2068:3:10","nodeType":"YulIdentifier","src":"2068:3:10"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"2240:3:10","nodeType":"YulIdentifier","src":"2240:3:10"}],"functionName":{"name":"store_literal_in_memory_c8dd3191f3dcc39739dca1bcaf395cf1761dcb1f4ca0dd96a0d29ee3f0de65f4","nativeSrc":"2151:88:10","nodeType":"YulIdentifier","src":"2151:88:10"},"nativeSrc":"2151:93:10","nodeType":"YulFunctionCall","src":"2151:93:10"},"nativeSrc":"2151:93:10","nodeType":"YulExpressionStatement","src":"2151:93:10"},{"nativeSrc":"2253:19:10","nodeType":"YulAssignment","src":"2253:19:10","value":{"arguments":[{"name":"pos","nativeSrc":"2264:3:10","nodeType":"YulIdentifier","src":"2264:3:10"},{"kind":"number","nativeSrc":"2269:2:10","nodeType":"YulLiteral","src":"2269:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2260:3:10","nodeType":"YulIdentifier","src":"2260:3:10"},"nativeSrc":"2260:12:10","nodeType":"YulFunctionCall","src":"2260:12:10"},"variableNames":[{"name":"end","nativeSrc":"2253:3:10","nodeType":"YulIdentifier","src":"2253:3:10"}]}]},"name":"abi_encode_t_stringliteral_c8dd3191f3dcc39739dca1bcaf395cf1761dcb1f4ca0dd96a0d29ee3f0de65f4_to_t_string_memory_ptr_fromStack","nativeSrc":"1912:366:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"2046:3:10","nodeType":"YulTypedName","src":"2046:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2054:3:10","nodeType":"YulTypedName","src":"2054:3:10","type":""}],"src":"1912:366:10"},{"body":{"nativeSrc":"2455:248:10","nodeType":"YulBlock","src":"2455:248:10","statements":[{"nativeSrc":"2465:26:10","nodeType":"YulAssignment","src":"2465:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"2477:9:10","nodeType":"YulIdentifier","src":"2477:9:10"},{"kind":"number","nativeSrc":"2488:2:10","nodeType":"YulLiteral","src":"2488:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2473:3:10","nodeType":"YulIdentifier","src":"2473:3:10"},"nativeSrc":"2473:18:10","nodeType":"YulFunctionCall","src":"2473:18:10"},"variableNames":[{"name":"tail","nativeSrc":"2465:4:10","nodeType":"YulIdentifier","src":"2465:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2512:9:10","nodeType":"YulIdentifier","src":"2512:9:10"},{"kind":"number","nativeSrc":"2523:1:10","nodeType":"YulLiteral","src":"2523:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2508:3:10","nodeType":"YulIdentifier","src":"2508:3:10"},"nativeSrc":"2508:17:10","nodeType":"YulFunctionCall","src":"2508:17:10"},{"arguments":[{"name":"tail","nativeSrc":"2531:4:10","nodeType":"YulIdentifier","src":"2531:4:10"},{"name":"headStart","nativeSrc":"2537:9:10","nodeType":"YulIdentifier","src":"2537:9:10"}],"functionName":{"name":"sub","nativeSrc":"2527:3:10","nodeType":"YulIdentifier","src":"2527:3:10"},"nativeSrc":"2527:20:10","nodeType":"YulFunctionCall","src":"2527:20:10"}],"functionName":{"name":"mstore","nativeSrc":"2501:6:10","nodeType":"YulIdentifier","src":"2501:6:10"},"nativeSrc":"2501:47:10","nodeType":"YulFunctionCall","src":"2501:47:10"},"nativeSrc":"2501:47:10","nodeType":"YulExpressionStatement","src":"2501:47:10"},{"nativeSrc":"2557:139:10","nodeType":"YulAssignment","src":"2557:139:10","value":{"arguments":[{"name":"tail","nativeSrc":"2691:4:10","nodeType":"YulIdentifier","src":"2691:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_c8dd3191f3dcc39739dca1bcaf395cf1761dcb1f4ca0dd96a0d29ee3f0de65f4_to_t_string_memory_ptr_fromStack","nativeSrc":"2565:124:10","nodeType":"YulIdentifier","src":"2565:124:10"},"nativeSrc":"2565:131:10","nodeType":"YulFunctionCall","src":"2565:131:10"},"variableNames":[{"name":"tail","nativeSrc":"2557:4:10","nodeType":"YulIdentifier","src":"2557:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_c8dd3191f3dcc39739dca1bcaf395cf1761dcb1f4ca0dd96a0d29ee3f0de65f4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2284:419:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2435:9:10","nodeType":"YulTypedName","src":"2435:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2450:4:10","nodeType":"YulTypedName","src":"2450:4:10","type":""}],"src":"2284:419:10"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c8dd3191f3dcc39739dca1bcaf395cf1761dcb1f4ca0dd96a0d29ee3f0de65f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid SP instance address\")\n\n    }\n\n    function abi_encode_t_stringliteral_c8dd3191f3dcc39739dca1bcaf395cf1761dcb1f4ca0dd96a0d29ee3f0de65f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_c8dd3191f3dcc39739dca1bcaf395cf1761dcb1f4ca0dd96a0d29ee3f0de65f4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c8dd3191f3dcc39739dca1bcaf395cf1761dcb1f4ca0dd96a0d29ee3f0de65f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c8dd3191f3dcc39739dca1bcaf395cf1761dcb1f4ca0dd96a0d29ee3f0de65f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1E27 CODESIZE SUB DUP1 PUSH3 0x1E27 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2BE JUMP JUMPDEST PUSH3 0x47 PUSH3 0x188 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xBC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xB3 SWAP2 SWAP1 PUSH3 0x301 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xCD DUP2 PUSH3 0x190 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x140 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x137 SWAP1 PUSH3 0x37F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x3A1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x286 DUP3 PUSH3 0x259 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x298 DUP2 PUSH3 0x279 JUMP JUMPDEST DUP2 EQ PUSH3 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2B8 DUP2 PUSH3 0x28D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2D7 JUMPI PUSH3 0x2D6 PUSH3 0x254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2E7 DUP5 DUP3 DUP6 ADD PUSH3 0x2A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x2FB DUP2 PUSH3 0x279 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x318 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x2F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420535020696E7374616E636520616464726573730000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x367 PUSH1 0x1B DUP4 PUSH3 0x31E JUMP JUMPDEST SWAP2 POP PUSH3 0x374 DUP3 PUSH3 0x32F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x39A DUP2 PUSH3 0x358 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A76 DUP1 PUSH3 0x3B1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x8E9841D0 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x8E9D660F EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0xA8C5DC33 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x197 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x4DD8046 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x7DF5E551 EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0x84270608 EQ PUSH2 0xF2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x1B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xCEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBE PUSH2 0x1B8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x1CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x377 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP3 SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x5EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x10B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x1232 JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x896 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x181 PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x977 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x9FD JUMP JUMPDEST PUSH2 0x1CA PUSH1 0x0 PUSH2 0xA84 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x300 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x265 SWAP1 PUSH2 0x134A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x291 SWAP1 PUSH2 0x134A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x232 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x370 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 DUP4 MLOAD PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x13AA JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x351 JUMPI PUSH2 0x350 PUSH2 0x13DE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x20 ADD MLOAD SWAP5 POP SWAP5 POP SWAP5 POP POP POP JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x4A9 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x40E SWAP1 PUSH2 0x134A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x43A SWAP1 PUSH2 0x134A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x487 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x45C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x487 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x46A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3DB JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD SWAP1 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4CF JUMPI PUSH2 0x4CE PUSH2 0x10DB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x502 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x4ED JUMPI SWAP1 POP JUMPDEST POP SWAP4 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x51F JUMPI PUSH2 0x51E PUSH2 0x10DB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x54D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5E3 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x56E JUMPI PUSH2 0x56D PUSH2 0x13DE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x58D JUMPI PUSH2 0x58C PUSH2 0x13DE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x5AB JUMPI PUSH2 0x5AA PUSH2 0x13DE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5CA JUMPI PUSH2 0x5C9 PUSH2 0x13DE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x553 JUMP JUMPDEST POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x61C PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x682 SWAP1 PUSH2 0x1459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD GT PUSH2 0x6CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C6 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP2 GT ISZERO PUSH2 0x712 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x709 SWAP1 PUSH2 0x1557 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x741 PUSH1 0x1 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x72C SWAP3 SWAP2 SWAP1 PUSH2 0x1577 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP7 PUSH2 0xB48 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x783 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77A SWAP1 PUSH2 0x15F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x815 SWAP2 SWAP1 PUSH2 0x17B5 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x841 PUSH2 0xCBF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3CDCE538B6DB111FCF97C8CDFC0F65DCD4C7EAEEA28ABF410F46AD76DAED828B DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x888 SWAP3 SWAP2 SWAP1 PUSH2 0x1577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x89E PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x90D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x904 SWAP1 PUSH2 0x18D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x97F PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0x10B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9FA DUP2 PUSH2 0xA84 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA05 PUSH2 0xCBF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA23 PUSH2 0x5EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA82 JUMPI PUSH2 0xA46 PUSH2 0xCBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA79 SWAP2 SWAP1 PUSH2 0x10B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB98 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC07 SWAP1 PUSH2 0x1459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xC27 SWAP2 SWAP1 PUSH2 0x19E4 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP3 MLOAD GT PUSH2 0xC6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC66 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP2 GT ISZERO PUSH2 0xCB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA9 SWAP1 PUSH2 0x1557 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE4 DUP2 PUSH2 0xCC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCFF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD44 DUP3 PUSH2 0xD19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD54 DUP2 PUSH2 0xD39 JUMP JUMPDEST DUP2 EQ PUSH2 0xD5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD71 DUP2 PUSH2 0xD4B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD8D JUMPI PUSH2 0xD8C PUSH2 0xD0F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD9B DUP5 DUP3 DUP6 ADD PUSH2 0xD62 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB9 DUP2 PUSH2 0xDA4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDF9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDDE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE21 DUP3 PUSH2 0xDBF JUMP JUMPDEST PUSH2 0xE2B DUP2 DUP6 PUSH2 0xDCA JUMP JUMPDEST SWAP4 POP PUSH2 0xE3B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDDB JUMP JUMPDEST PUSH2 0xE44 DUP2 PUSH2 0xE05 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE62 DUP2 PUSH2 0xE4F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE7D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xDB0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xE8F DUP2 DUP6 PUSH2 0xE16 JUMP JUMPDEST SWAP1 POP PUSH2 0xE9E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE59 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEEE DUP3 PUSH2 0xDBF JUMP JUMPDEST PUSH2 0xEF8 DUP2 DUP6 PUSH2 0xED2 JUMP JUMPDEST SWAP4 POP PUSH2 0xF08 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDDB JUMP JUMPDEST PUSH2 0xF11 DUP2 PUSH2 0xE05 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF28 DUP4 DUP4 PUSH2 0xEE3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF48 DUP3 PUSH2 0xEA6 JUMP JUMPDEST PUSH2 0xF52 DUP2 DUP6 PUSH2 0xEB1 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0xF64 DUP6 PUSH2 0xEC2 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xFA0 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0xF81 DUP6 DUP3 PUSH2 0xF1C JUMP JUMPDEST SWAP5 POP PUSH2 0xF8C DUP4 PUSH2 0xF30 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xF68 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFE7 DUP2 PUSH2 0xE4F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF9 DUP4 DUP4 PUSH2 0xFDE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x101D DUP3 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0x1027 DUP2 DUP6 PUSH2 0xFBD JUMP JUMPDEST SWAP4 POP PUSH2 0x1032 DUP4 PUSH2 0xFCE JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1063 JUMPI DUP2 MLOAD PUSH2 0x104A DUP9 DUP3 PUSH2 0xFED JUMP JUMPDEST SWAP8 POP PUSH2 0x1055 DUP4 PUSH2 0x1005 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1036 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x108A DUP2 DUP6 PUSH2 0xF3D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x109E DUP2 DUP5 PUSH2 0x1012 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x10B0 DUP2 PUSH2 0xD39 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10CB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1113 DUP3 PUSH2 0xE05 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1132 JUMPI PUSH2 0x1131 PUSH2 0x10DB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1145 PUSH2 0xD05 JUMP JUMPDEST SWAP1 POP PUSH2 0x1151 DUP3 DUP3 PUSH2 0x110A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1171 JUMPI PUSH2 0x1170 PUSH2 0x10DB JUMP JUMPDEST JUMPDEST PUSH2 0x117A DUP3 PUSH2 0xE05 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A9 PUSH2 0x11A4 DUP5 PUSH2 0x1156 JUMP JUMPDEST PUSH2 0x113B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x11C5 JUMPI PUSH2 0x11C4 PUSH2 0x10D6 JUMP JUMPDEST JUMPDEST PUSH2 0x11D0 DUP5 DUP3 DUP6 PUSH2 0x1187 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11ED JUMPI PUSH2 0x11EC PUSH2 0x10D1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11FD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1196 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x120F DUP2 PUSH2 0xE4F JUMP JUMPDEST DUP2 EQ PUSH2 0x121A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x122C DUP2 PUSH2 0x1206 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x124B JUMPI PUSH2 0x124A PUSH2 0xD0F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1259 DUP7 DUP3 DUP8 ADD PUSH2 0xD62 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x127A JUMPI PUSH2 0x1279 PUSH2 0xD14 JUMP JUMPDEST JUMPDEST PUSH2 0x1286 DUP7 DUP3 DUP8 ADD PUSH2 0x11D8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1297 DUP7 DUP3 DUP8 ADD PUSH2 0x121D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C6 PUSH2 0x12C1 PUSH2 0x12BC DUP5 PUSH2 0xD19 JUMP JUMPDEST PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0xD19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D8 DUP3 PUSH2 0x12AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12EA DUP3 PUSH2 0x12CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12FA DUP2 PUSH2 0x12DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1315 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1362 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1375 JUMPI PUSH2 0x1374 PUSH2 0x131B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13B5 DUP3 PUSH2 0xE4F JUMP JUMPDEST SWAP2 POP PUSH2 0x13C0 DUP4 PUSH2 0xE4F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x13D8 JUMPI PUSH2 0x13D7 PUSH2 0x137B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1443 PUSH1 0x19 DUP4 PUSH2 0xDCA JUMP JUMPDEST SWAP2 POP PUSH2 0x144E DUP3 PUSH2 0x140D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1472 DUP2 PUSH2 0x1436 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F75727365206E616D652063616E6E6F7420626520656D7074790000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14AF PUSH1 0x1B DUP4 PUSH2 0xDCA JUMP JUMPDEST SWAP2 POP PUSH2 0x14BA DUP3 PUSH2 0x1479 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14DE DUP2 PUSH2 0x14A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x497373756520646174652063616E6E6F7420626520696E207468652066757475 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1541 PUSH1 0x22 DUP4 PUSH2 0xDCA JUMP JUMPDEST SWAP2 POP PUSH2 0x154C DUP3 PUSH2 0x14E5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1570 DUP2 PUSH2 0x1534 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1591 DUP2 DUP6 PUSH2 0xE16 JUMP JUMPDEST SWAP1 POP PUSH2 0x15A0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE59 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x446174612076616C69646174696F6E206661696C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15DD PUSH1 0x16 DUP4 PUSH2 0xDCA JUMP JUMPDEST SWAP2 POP PUSH2 0x15E8 DUP3 PUSH2 0x15A7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x160C DUP2 PUSH2 0x15D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x1675 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1638 JUMP JUMPDEST PUSH2 0x167F DUP7 DUP4 PUSH2 0x1638 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16B2 PUSH2 0x16AD PUSH2 0x16A8 DUP5 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0xE4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16CC DUP4 PUSH2 0x1697 JUMP JUMPDEST PUSH2 0x16E0 PUSH2 0x16D8 DUP3 PUSH2 0x16B9 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1645 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x16F5 PUSH2 0x16E8 JUMP JUMPDEST PUSH2 0x1700 DUP2 DUP5 DUP5 PUSH2 0x16C3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1724 JUMPI PUSH2 0x1719 PUSH1 0x0 DUP3 PUSH2 0x16ED JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1706 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1769 JUMPI PUSH2 0x173A DUP2 PUSH2 0x1613 JUMP JUMPDEST PUSH2 0x1743 DUP5 PUSH2 0x1628 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1752 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1766 PUSH2 0x175E DUP6 PUSH2 0x1628 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1705 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x178C PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x176E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A5 DUP4 DUP4 PUSH2 0x177B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17BE DUP3 PUSH2 0xDBF JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17D7 JUMPI PUSH2 0x17D6 PUSH2 0x10DB JUMP JUMPDEST JUMPDEST PUSH2 0x17E1 DUP3 SLOAD PUSH2 0x134A JUMP JUMPDEST PUSH2 0x17EC DUP3 DUP3 DUP6 PUSH2 0x1728 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x181F JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x180D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1817 DUP6 DUP3 PUSH2 0x1799 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x187F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x182D DUP7 PUSH2 0x1613 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1855 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1830 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1872 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x186E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x177B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420535020696E7374616E636520616464726573730000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BD PUSH1 0x1B DUP4 PUSH2 0xDCA JUMP JUMPDEST SWAP2 POP PUSH2 0x18C8 DUP3 PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18EC DUP2 PUSH2 0x18B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420736368656D61204944000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1929 PUSH1 0x11 DUP4 PUSH2 0xDCA JUMP JUMPDEST SWAP2 POP PUSH2 0x1934 DUP3 PUSH2 0x18F3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1958 DUP2 PUSH2 0x191C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1972 PUSH2 0x196D DUP5 PUSH2 0x1156 JUMP JUMPDEST PUSH2 0x113B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x198E JUMPI PUSH2 0x198D PUSH2 0x10D6 JUMP JUMPDEST JUMPDEST PUSH2 0x1999 DUP5 DUP3 DUP6 PUSH2 0xDDB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19B6 JUMPI PUSH2 0x19B5 PUSH2 0x10D1 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x19C6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x195F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x19DE DUP2 PUSH2 0x1206 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19FB JUMPI PUSH2 0x19FA PUSH2 0xD0F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A19 JUMPI PUSH2 0x1A18 PUSH2 0xD14 JUMP JUMPDEST JUMPDEST PUSH2 0x1A25 DUP6 DUP3 DUP7 ADD PUSH2 0x19A1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A36 DUP6 DUP3 DUP7 ADD PUSH2 0x19CF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xE6 LOG4 0xF6 RETURNDATACOPY 0xE PUSH1 0xC3 0x2E 0x24 0xC DUP13 SWAP14 0xD4 DUP15 PUSH20 0x9D3FC9B63AEE871ED5938C0807C7EA2164736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"201:3102:9:-:0;;;616:194;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;663:12;:10;;;:12;;:::i;:::-;1297:1:6;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;724:1:9::1;695:31;;:17;:31;;::::0;687:71:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;785:17;768:10;;:35;;;;;;;;;;;;;;;;;;616:194:::0;201:3102;;656:96:8;709:7;735:10;728:17;;656:96;:::o;2912:187:6:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;1554:169::-;1638:11;1672:6;1667:3;1660:19;1712:4;1707:3;1703:14;1688:29;;1554:169;;;;:::o;1729:177::-;1869:29;1865:1;1857:6;1853:14;1846:53;1729:177;:::o;1912:366::-;2054:3;2075:67;2139:2;2134:3;2075:67;:::i;:::-;2068:74;;2151:93;2240:3;2151:93;:::i;:::-;2269:2;2264:3;2260:12;2253:19;;1912:366;;;:::o;2284:419::-;2450:4;2488:2;2477:9;2473:18;2465:26;;2537:9;2531:4;2527:20;2523:1;2512:9;2508:17;2501:47;2565:131;2691:4;2565:131;:::i;:::-;2557:139;;2284:419;;;:::o;201:3102:9:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@CREDENTIAL_SCHEMA_ID_905":{"entryPoint":435,"id":905,"parameterSlots":0,"returnSlots":0},"@_checkOwner_715":{"entryPoint":2557,"id":715,"parameterSlots":0,"returnSlots":0},"@_msgSender_868":{"entryPoint":3263,"id":868,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_777":{"entryPoint":2692,"id":777,"parameterSlots":1,"returnSlots":0},"@getCredentials_1123":{"entryPoint":887,"id":1123,"parameterSlots":1,"returnSlots":2},"@getLatestCredential_1172":{"entryPoint":460,"id":1172,"parameterSlots":1,"returnSlots":3},"@issueCredential_1047":{"entryPoint":1556,"id":1047,"parameterSlots":3,"returnSlots":0},"@owner_698":{"entryPoint":1515,"id":698,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_729":{"entryPoint":440,"id":729,"parameterSlots":0,"returnSlots":0},"@schemaHook_1236":{"entryPoint":2888,"id":1236,"parameterSlots":3,"returnSlots":1},"@setSPInstance_971":{"entryPoint":2198,"id":971,"parameterSlots":1,"returnSlots":0},"@spInstance_902":{"entryPoint":2385,"id":902,"parameterSlots":0,"returnSlots":0},"@transferOwnership_757":{"entryPoint":2423,"id":757,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":4502,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":6495,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3426,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":4568,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":6561,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":4637,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":6607,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3447,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_string_memory_ptrt_uint256":{"entryPoint":4658,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_string_memory_ptrt_uint256_fromMemory":{"entryPoint":6628,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":3868,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":4077,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4263,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":3901,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":4114,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3504,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_ISP_$495_to_t_address_fromStack":{"entryPoint":4849,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":3811,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3606,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_3f7f8a0302ff255928d1a72eedf8fbacb95deed18c475d5a03e0d82ca55cffbb_to_t_string_memory_ptr_fromStack":{"entryPoint":6428,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97_to_t_string_memory_ptr_fromStack":{"entryPoint":5428,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988_to_t_string_memory_ptr_fromStack":{"entryPoint":5282,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df_to_t_string_memory_ptr_fromStack":{"entryPoint":5174,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c8dd3191f3dcc39739dca1bcaf395cf1761dcb1f4ca0dd96a0d29ee3f0de65f4_to_t_string_memory_ptr_fromStack":{"entryPoint":6320,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_df29a3d526a469d88dc1aca906946c8fa4e298109faf667a9cf40dbe115c170b_to_t_string_memory_ptr_fromStack":{"entryPoint":5584,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":4062,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3673,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":3291,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":4278,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":4208,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool_t_string_memory_ptr_t_uint256__to_t_bool_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":3688,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_contract$_ISP_$495__to_t_address__fromStack_reversed":{"entryPoint":4864,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":5495,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3f7f8a0302ff255928d1a72eedf8fbacb95deed18c475d5a03e0d82ca55cffbb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6463,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5463,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5317,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5209,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c8dd3191f3dcc39739dca1bcaf395cf1761dcb1f4ca0dd96a0d29ee3f0de65f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6355,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df29a3d526a469d88dc1aca906946c8fa4e298109faf667a9cf40dbe115c170b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5619,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":3306,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":4411,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":3333,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":4438,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":3778,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":4046,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":5651,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":3750,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":4018,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3519,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":3888,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":4101,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":3761,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":4029,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":3794,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3530,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5034,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":5928,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":3385,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3492,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3353,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3663,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":3271,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":5893,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_contract$_ISP_$495_to_t_address":{"entryPoint":4831,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":4813,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":4779,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":5783,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":6069,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":4487,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":3547,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":5672,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":4938,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":6041,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":4362,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":4769,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":6011,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":4987,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4891,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5086,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4315,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":5817,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":4305,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":4310,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":3348,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3343,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3589,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":5688,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":5998,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":5869,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_3f7f8a0302ff255928d1a72eedf8fbacb95deed18c475d5a03e0d82ca55cffbb":{"entryPoint":6387,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97":{"entryPoint":5349,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988":{"entryPoint":5241,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df":{"entryPoint":5133,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c8dd3191f3dcc39739dca1bcaf395cf1761dcb1f4ca0dd96a0d29ee3f0de65f4":{"entryPoint":6279,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_df29a3d526a469d88dc1aca906946c8fa4e298109faf667a9cf40dbe115c170b":{"entryPoint":5543,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":5701,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":5827,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3403,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":4614,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":5864,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:26053:10","nodeType":"YulBlock","src":"0:26053:10","statements":[{"body":{"nativeSrc":"51:57:10","nodeType":"YulBlock","src":"51:57:10","statements":[{"nativeSrc":"61:41:10","nodeType":"YulAssignment","src":"61:41:10","value":{"arguments":[{"name":"value","nativeSrc":"76:5:10","nodeType":"YulIdentifier","src":"76:5:10"},{"kind":"number","nativeSrc":"83:18:10","nodeType":"YulLiteral","src":"83:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"72:3:10","nodeType":"YulIdentifier","src":"72:3:10"},"nativeSrc":"72:30:10","nodeType":"YulFunctionCall","src":"72:30:10"},"variableNames":[{"name":"cleaned","nativeSrc":"61:7:10","nodeType":"YulIdentifier","src":"61:7:10"}]}]},"name":"cleanup_t_uint64","nativeSrc":"7:101:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"33:5:10","nodeType":"YulTypedName","src":"33:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"43:7:10","nodeType":"YulTypedName","src":"43:7:10","type":""}],"src":"7:101:10"},{"body":{"nativeSrc":"177:52:10","nodeType":"YulBlock","src":"177:52:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"194:3:10","nodeType":"YulIdentifier","src":"194:3:10"},{"arguments":[{"name":"value","nativeSrc":"216:5:10","nodeType":"YulIdentifier","src":"216:5:10"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"199:16:10","nodeType":"YulIdentifier","src":"199:16:10"},"nativeSrc":"199:23:10","nodeType":"YulFunctionCall","src":"199:23:10"}],"functionName":{"name":"mstore","nativeSrc":"187:6:10","nodeType":"YulIdentifier","src":"187:6:10"},"nativeSrc":"187:36:10","nodeType":"YulFunctionCall","src":"187:36:10"},"nativeSrc":"187:36:10","nodeType":"YulExpressionStatement","src":"187:36:10"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"114:115:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"165:5:10","nodeType":"YulTypedName","src":"165:5:10","type":""},{"name":"pos","nativeSrc":"172:3:10","nodeType":"YulTypedName","src":"172:3:10","type":""}],"src":"114:115:10"},{"body":{"nativeSrc":"331:122:10","nodeType":"YulBlock","src":"331:122:10","statements":[{"nativeSrc":"341:26:10","nodeType":"YulAssignment","src":"341:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"353:9:10","nodeType":"YulIdentifier","src":"353:9:10"},{"kind":"number","nativeSrc":"364:2:10","nodeType":"YulLiteral","src":"364:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"349:3:10","nodeType":"YulIdentifier","src":"349:3:10"},"nativeSrc":"349:18:10","nodeType":"YulFunctionCall","src":"349:18:10"},"variableNames":[{"name":"tail","nativeSrc":"341:4:10","nodeType":"YulIdentifier","src":"341:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"419:6:10","nodeType":"YulIdentifier","src":"419:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"432:9:10","nodeType":"YulIdentifier","src":"432:9:10"},{"kind":"number","nativeSrc":"443:1:10","nodeType":"YulLiteral","src":"443:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"428:3:10","nodeType":"YulIdentifier","src":"428:3:10"},"nativeSrc":"428:17:10","nodeType":"YulFunctionCall","src":"428:17:10"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"377:41:10","nodeType":"YulIdentifier","src":"377:41:10"},"nativeSrc":"377:69:10","nodeType":"YulFunctionCall","src":"377:69:10"},"nativeSrc":"377:69:10","nodeType":"YulExpressionStatement","src":"377:69:10"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nativeSrc":"235:218:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"303:9:10","nodeType":"YulTypedName","src":"303:9:10","type":""},{"name":"value0","nativeSrc":"315:6:10","nodeType":"YulTypedName","src":"315:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"326:4:10","nodeType":"YulTypedName","src":"326:4:10","type":""}],"src":"235:218:10"},{"body":{"nativeSrc":"499:35:10","nodeType":"YulBlock","src":"499:35:10","statements":[{"nativeSrc":"509:19:10","nodeType":"YulAssignment","src":"509:19:10","value":{"arguments":[{"kind":"number","nativeSrc":"525:2:10","nodeType":"YulLiteral","src":"525:2:10","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"519:5:10","nodeType":"YulIdentifier","src":"519:5:10"},"nativeSrc":"519:9:10","nodeType":"YulFunctionCall","src":"519:9:10"},"variableNames":[{"name":"memPtr","nativeSrc":"509:6:10","nodeType":"YulIdentifier","src":"509:6:10"}]}]},"name":"allocate_unbounded","nativeSrc":"459:75:10","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"492:6:10","nodeType":"YulTypedName","src":"492:6:10","type":""}],"src":"459:75:10"},{"body":{"nativeSrc":"629:28:10","nodeType":"YulBlock","src":"629:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"646:1:10","nodeType":"YulLiteral","src":"646:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"649:1:10","nodeType":"YulLiteral","src":"649:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"639:6:10","nodeType":"YulIdentifier","src":"639:6:10"},"nativeSrc":"639:12:10","nodeType":"YulFunctionCall","src":"639:12:10"},"nativeSrc":"639:12:10","nodeType":"YulExpressionStatement","src":"639:12:10"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"540:117:10","nodeType":"YulFunctionDefinition","src":"540:117:10"},{"body":{"nativeSrc":"752:28:10","nodeType":"YulBlock","src":"752:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"769:1:10","nodeType":"YulLiteral","src":"769:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"772:1:10","nodeType":"YulLiteral","src":"772:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"762:6:10","nodeType":"YulIdentifier","src":"762:6:10"},"nativeSrc":"762:12:10","nodeType":"YulFunctionCall","src":"762:12:10"},"nativeSrc":"762:12:10","nodeType":"YulExpressionStatement","src":"762:12:10"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"663:117:10","nodeType":"YulFunctionDefinition","src":"663:117:10"},{"body":{"nativeSrc":"831:81:10","nodeType":"YulBlock","src":"831:81:10","statements":[{"nativeSrc":"841:65:10","nodeType":"YulAssignment","src":"841:65:10","value":{"arguments":[{"name":"value","nativeSrc":"856:5:10","nodeType":"YulIdentifier","src":"856:5:10"},{"kind":"number","nativeSrc":"863:42:10","nodeType":"YulLiteral","src":"863:42:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"852:3:10","nodeType":"YulIdentifier","src":"852:3:10"},"nativeSrc":"852:54:10","nodeType":"YulFunctionCall","src":"852:54:10"},"variableNames":[{"name":"cleaned","nativeSrc":"841:7:10","nodeType":"YulIdentifier","src":"841:7:10"}]}]},"name":"cleanup_t_uint160","nativeSrc":"786:126:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"813:5:10","nodeType":"YulTypedName","src":"813:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"823:7:10","nodeType":"YulTypedName","src":"823:7:10","type":""}],"src":"786:126:10"},{"body":{"nativeSrc":"963:51:10","nodeType":"YulBlock","src":"963:51:10","statements":[{"nativeSrc":"973:35:10","nodeType":"YulAssignment","src":"973:35:10","value":{"arguments":[{"name":"value","nativeSrc":"1002:5:10","nodeType":"YulIdentifier","src":"1002:5:10"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"984:17:10","nodeType":"YulIdentifier","src":"984:17:10"},"nativeSrc":"984:24:10","nodeType":"YulFunctionCall","src":"984:24:10"},"variableNames":[{"name":"cleaned","nativeSrc":"973:7:10","nodeType":"YulIdentifier","src":"973:7:10"}]}]},"name":"cleanup_t_address","nativeSrc":"918:96:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"945:5:10","nodeType":"YulTypedName","src":"945:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"955:7:10","nodeType":"YulTypedName","src":"955:7:10","type":""}],"src":"918:96:10"},{"body":{"nativeSrc":"1063:79:10","nodeType":"YulBlock","src":"1063:79:10","statements":[{"body":{"nativeSrc":"1120:16:10","nodeType":"YulBlock","src":"1120:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1129:1:10","nodeType":"YulLiteral","src":"1129:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"1132:1:10","nodeType":"YulLiteral","src":"1132:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1122:6:10","nodeType":"YulIdentifier","src":"1122:6:10"},"nativeSrc":"1122:12:10","nodeType":"YulFunctionCall","src":"1122:12:10"},"nativeSrc":"1122:12:10","nodeType":"YulExpressionStatement","src":"1122:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1086:5:10","nodeType":"YulIdentifier","src":"1086:5:10"},{"arguments":[{"name":"value","nativeSrc":"1111:5:10","nodeType":"YulIdentifier","src":"1111:5:10"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1093:17:10","nodeType":"YulIdentifier","src":"1093:17:10"},"nativeSrc":"1093:24:10","nodeType":"YulFunctionCall","src":"1093:24:10"}],"functionName":{"name":"eq","nativeSrc":"1083:2:10","nodeType":"YulIdentifier","src":"1083:2:10"},"nativeSrc":"1083:35:10","nodeType":"YulFunctionCall","src":"1083:35:10"}],"functionName":{"name":"iszero","nativeSrc":"1076:6:10","nodeType":"YulIdentifier","src":"1076:6:10"},"nativeSrc":"1076:43:10","nodeType":"YulFunctionCall","src":"1076:43:10"},"nativeSrc":"1073:63:10","nodeType":"YulIf","src":"1073:63:10"}]},"name":"validator_revert_t_address","nativeSrc":"1020:122:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1056:5:10","nodeType":"YulTypedName","src":"1056:5:10","type":""}],"src":"1020:122:10"},{"body":{"nativeSrc":"1200:87:10","nodeType":"YulBlock","src":"1200:87:10","statements":[{"nativeSrc":"1210:29:10","nodeType":"YulAssignment","src":"1210:29:10","value":{"arguments":[{"name":"offset","nativeSrc":"1232:6:10","nodeType":"YulIdentifier","src":"1232:6:10"}],"functionName":{"name":"calldataload","nativeSrc":"1219:12:10","nodeType":"YulIdentifier","src":"1219:12:10"},"nativeSrc":"1219:20:10","nodeType":"YulFunctionCall","src":"1219:20:10"},"variableNames":[{"name":"value","nativeSrc":"1210:5:10","nodeType":"YulIdentifier","src":"1210:5:10"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1275:5:10","nodeType":"YulIdentifier","src":"1275:5:10"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"1248:26:10","nodeType":"YulIdentifier","src":"1248:26:10"},"nativeSrc":"1248:33:10","nodeType":"YulFunctionCall","src":"1248:33:10"},"nativeSrc":"1248:33:10","nodeType":"YulExpressionStatement","src":"1248:33:10"}]},"name":"abi_decode_t_address","nativeSrc":"1148:139:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1178:6:10","nodeType":"YulTypedName","src":"1178:6:10","type":""},{"name":"end","nativeSrc":"1186:3:10","nodeType":"YulTypedName","src":"1186:3:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1194:5:10","nodeType":"YulTypedName","src":"1194:5:10","type":""}],"src":"1148:139:10"},{"body":{"nativeSrc":"1359:263:10","nodeType":"YulBlock","src":"1359:263:10","statements":[{"body":{"nativeSrc":"1405:83:10","nodeType":"YulBlock","src":"1405:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1407:77:10","nodeType":"YulIdentifier","src":"1407:77:10"},"nativeSrc":"1407:79:10","nodeType":"YulFunctionCall","src":"1407:79:10"},"nativeSrc":"1407:79:10","nodeType":"YulExpressionStatement","src":"1407:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1380:7:10","nodeType":"YulIdentifier","src":"1380:7:10"},{"name":"headStart","nativeSrc":"1389:9:10","nodeType":"YulIdentifier","src":"1389:9:10"}],"functionName":{"name":"sub","nativeSrc":"1376:3:10","nodeType":"YulIdentifier","src":"1376:3:10"},"nativeSrc":"1376:23:10","nodeType":"YulFunctionCall","src":"1376:23:10"},{"kind":"number","nativeSrc":"1401:2:10","nodeType":"YulLiteral","src":"1401:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1372:3:10","nodeType":"YulIdentifier","src":"1372:3:10"},"nativeSrc":"1372:32:10","nodeType":"YulFunctionCall","src":"1372:32:10"},"nativeSrc":"1369:119:10","nodeType":"YulIf","src":"1369:119:10"},{"nativeSrc":"1498:117:10","nodeType":"YulBlock","src":"1498:117:10","statements":[{"nativeSrc":"1513:15:10","nodeType":"YulVariableDeclaration","src":"1513:15:10","value":{"kind":"number","nativeSrc":"1527:1:10","nodeType":"YulLiteral","src":"1527:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1517:6:10","nodeType":"YulTypedName","src":"1517:6:10","type":""}]},{"nativeSrc":"1542:63:10","nodeType":"YulAssignment","src":"1542:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1577:9:10","nodeType":"YulIdentifier","src":"1577:9:10"},{"name":"offset","nativeSrc":"1588:6:10","nodeType":"YulIdentifier","src":"1588:6:10"}],"functionName":{"name":"add","nativeSrc":"1573:3:10","nodeType":"YulIdentifier","src":"1573:3:10"},"nativeSrc":"1573:22:10","nodeType":"YulFunctionCall","src":"1573:22:10"},{"name":"dataEnd","nativeSrc":"1597:7:10","nodeType":"YulIdentifier","src":"1597:7:10"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1552:20:10","nodeType":"YulIdentifier","src":"1552:20:10"},"nativeSrc":"1552:53:10","nodeType":"YulFunctionCall","src":"1552:53:10"},"variableNames":[{"name":"value0","nativeSrc":"1542:6:10","nodeType":"YulIdentifier","src":"1542:6:10"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"1293:329:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1329:9:10","nodeType":"YulTypedName","src":"1329:9:10","type":""},{"name":"dataEnd","nativeSrc":"1340:7:10","nodeType":"YulTypedName","src":"1340:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1352:6:10","nodeType":"YulTypedName","src":"1352:6:10","type":""}],"src":"1293:329:10"},{"body":{"nativeSrc":"1670:48:10","nodeType":"YulBlock","src":"1670:48:10","statements":[{"nativeSrc":"1680:32:10","nodeType":"YulAssignment","src":"1680:32:10","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1705:5:10","nodeType":"YulIdentifier","src":"1705:5:10"}],"functionName":{"name":"iszero","nativeSrc":"1698:6:10","nodeType":"YulIdentifier","src":"1698:6:10"},"nativeSrc":"1698:13:10","nodeType":"YulFunctionCall","src":"1698:13:10"}],"functionName":{"name":"iszero","nativeSrc":"1691:6:10","nodeType":"YulIdentifier","src":"1691:6:10"},"nativeSrc":"1691:21:10","nodeType":"YulFunctionCall","src":"1691:21:10"},"variableNames":[{"name":"cleaned","nativeSrc":"1680:7:10","nodeType":"YulIdentifier","src":"1680:7:10"}]}]},"name":"cleanup_t_bool","nativeSrc":"1628:90:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1652:5:10","nodeType":"YulTypedName","src":"1652:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1662:7:10","nodeType":"YulTypedName","src":"1662:7:10","type":""}],"src":"1628:90:10"},{"body":{"nativeSrc":"1783:50:10","nodeType":"YulBlock","src":"1783:50:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1800:3:10","nodeType":"YulIdentifier","src":"1800:3:10"},{"arguments":[{"name":"value","nativeSrc":"1820:5:10","nodeType":"YulIdentifier","src":"1820:5:10"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1805:14:10","nodeType":"YulIdentifier","src":"1805:14:10"},"nativeSrc":"1805:21:10","nodeType":"YulFunctionCall","src":"1805:21:10"}],"functionName":{"name":"mstore","nativeSrc":"1793:6:10","nodeType":"YulIdentifier","src":"1793:6:10"},"nativeSrc":"1793:34:10","nodeType":"YulFunctionCall","src":"1793:34:10"},"nativeSrc":"1793:34:10","nodeType":"YulExpressionStatement","src":"1793:34:10"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1724:109:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1771:5:10","nodeType":"YulTypedName","src":"1771:5:10","type":""},{"name":"pos","nativeSrc":"1778:3:10","nodeType":"YulTypedName","src":"1778:3:10","type":""}],"src":"1724:109:10"},{"body":{"nativeSrc":"1898:40:10","nodeType":"YulBlock","src":"1898:40:10","statements":[{"nativeSrc":"1909:22:10","nodeType":"YulAssignment","src":"1909:22:10","value":{"arguments":[{"name":"value","nativeSrc":"1925:5:10","nodeType":"YulIdentifier","src":"1925:5:10"}],"functionName":{"name":"mload","nativeSrc":"1919:5:10","nodeType":"YulIdentifier","src":"1919:5:10"},"nativeSrc":"1919:12:10","nodeType":"YulFunctionCall","src":"1919:12:10"},"variableNames":[{"name":"length","nativeSrc":"1909:6:10","nodeType":"YulIdentifier","src":"1909:6:10"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1839:99:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1881:5:10","nodeType":"YulTypedName","src":"1881:5:10","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1891:6:10","nodeType":"YulTypedName","src":"1891:6:10","type":""}],"src":"1839:99:10"},{"body":{"nativeSrc":"2040:73:10","nodeType":"YulBlock","src":"2040:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2057:3:10","nodeType":"YulIdentifier","src":"2057:3:10"},{"name":"length","nativeSrc":"2062:6:10","nodeType":"YulIdentifier","src":"2062:6:10"}],"functionName":{"name":"mstore","nativeSrc":"2050:6:10","nodeType":"YulIdentifier","src":"2050:6:10"},"nativeSrc":"2050:19:10","nodeType":"YulFunctionCall","src":"2050:19:10"},"nativeSrc":"2050:19:10","nodeType":"YulExpressionStatement","src":"2050:19:10"},{"nativeSrc":"2078:29:10","nodeType":"YulAssignment","src":"2078:29:10","value":{"arguments":[{"name":"pos","nativeSrc":"2097:3:10","nodeType":"YulIdentifier","src":"2097:3:10"},{"kind":"number","nativeSrc":"2102:4:10","nodeType":"YulLiteral","src":"2102:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2093:3:10","nodeType":"YulIdentifier","src":"2093:3:10"},"nativeSrc":"2093:14:10","nodeType":"YulFunctionCall","src":"2093:14:10"},"variableNames":[{"name":"updated_pos","nativeSrc":"2078:11:10","nodeType":"YulIdentifier","src":"2078:11:10"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1944:169:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"2012:3:10","nodeType":"YulTypedName","src":"2012:3:10","type":""},{"name":"length","nativeSrc":"2017:6:10","nodeType":"YulTypedName","src":"2017:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"2028:11:10","nodeType":"YulTypedName","src":"2028:11:10","type":""}],"src":"1944:169:10"},{"body":{"nativeSrc":"2181:184:10","nodeType":"YulBlock","src":"2181:184:10","statements":[{"nativeSrc":"2191:10:10","nodeType":"YulVariableDeclaration","src":"2191:10:10","value":{"kind":"number","nativeSrc":"2200:1:10","nodeType":"YulLiteral","src":"2200:1:10","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"2195:1:10","nodeType":"YulTypedName","src":"2195:1:10","type":""}]},{"body":{"nativeSrc":"2260:63:10","nodeType":"YulBlock","src":"2260:63:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2285:3:10","nodeType":"YulIdentifier","src":"2285:3:10"},{"name":"i","nativeSrc":"2290:1:10","nodeType":"YulIdentifier","src":"2290:1:10"}],"functionName":{"name":"add","nativeSrc":"2281:3:10","nodeType":"YulIdentifier","src":"2281:3:10"},"nativeSrc":"2281:11:10","nodeType":"YulFunctionCall","src":"2281:11:10"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2304:3:10","nodeType":"YulIdentifier","src":"2304:3:10"},{"name":"i","nativeSrc":"2309:1:10","nodeType":"YulIdentifier","src":"2309:1:10"}],"functionName":{"name":"add","nativeSrc":"2300:3:10","nodeType":"YulIdentifier","src":"2300:3:10"},"nativeSrc":"2300:11:10","nodeType":"YulFunctionCall","src":"2300:11:10"}],"functionName":{"name":"mload","nativeSrc":"2294:5:10","nodeType":"YulIdentifier","src":"2294:5:10"},"nativeSrc":"2294:18:10","nodeType":"YulFunctionCall","src":"2294:18:10"}],"functionName":{"name":"mstore","nativeSrc":"2274:6:10","nodeType":"YulIdentifier","src":"2274:6:10"},"nativeSrc":"2274:39:10","nodeType":"YulFunctionCall","src":"2274:39:10"},"nativeSrc":"2274:39:10","nodeType":"YulExpressionStatement","src":"2274:39:10"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"2221:1:10","nodeType":"YulIdentifier","src":"2221:1:10"},{"name":"length","nativeSrc":"2224:6:10","nodeType":"YulIdentifier","src":"2224:6:10"}],"functionName":{"name":"lt","nativeSrc":"2218:2:10","nodeType":"YulIdentifier","src":"2218:2:10"},"nativeSrc":"2218:13:10","nodeType":"YulFunctionCall","src":"2218:13:10"},"nativeSrc":"2210:113:10","nodeType":"YulForLoop","post":{"nativeSrc":"2232:19:10","nodeType":"YulBlock","src":"2232:19:10","statements":[{"nativeSrc":"2234:15:10","nodeType":"YulAssignment","src":"2234:15:10","value":{"arguments":[{"name":"i","nativeSrc":"2243:1:10","nodeType":"YulIdentifier","src":"2243:1:10"},{"kind":"number","nativeSrc":"2246:2:10","nodeType":"YulLiteral","src":"2246:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2239:3:10","nodeType":"YulIdentifier","src":"2239:3:10"},"nativeSrc":"2239:10:10","nodeType":"YulFunctionCall","src":"2239:10:10"},"variableNames":[{"name":"i","nativeSrc":"2234:1:10","nodeType":"YulIdentifier","src":"2234:1:10"}]}]},"pre":{"nativeSrc":"2214:3:10","nodeType":"YulBlock","src":"2214:3:10","statements":[]},"src":"2210:113:10"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2343:3:10","nodeType":"YulIdentifier","src":"2343:3:10"},{"name":"length","nativeSrc":"2348:6:10","nodeType":"YulIdentifier","src":"2348:6:10"}],"functionName":{"name":"add","nativeSrc":"2339:3:10","nodeType":"YulIdentifier","src":"2339:3:10"},"nativeSrc":"2339:16:10","nodeType":"YulFunctionCall","src":"2339:16:10"},{"kind":"number","nativeSrc":"2357:1:10","nodeType":"YulLiteral","src":"2357:1:10","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2332:6:10","nodeType":"YulIdentifier","src":"2332:6:10"},"nativeSrc":"2332:27:10","nodeType":"YulFunctionCall","src":"2332:27:10"},"nativeSrc":"2332:27:10","nodeType":"YulExpressionStatement","src":"2332:27:10"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2119:246:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2163:3:10","nodeType":"YulTypedName","src":"2163:3:10","type":""},{"name":"dst","nativeSrc":"2168:3:10","nodeType":"YulTypedName","src":"2168:3:10","type":""},{"name":"length","nativeSrc":"2173:6:10","nodeType":"YulTypedName","src":"2173:6:10","type":""}],"src":"2119:246:10"},{"body":{"nativeSrc":"2419:54:10","nodeType":"YulBlock","src":"2419:54:10","statements":[{"nativeSrc":"2429:38:10","nodeType":"YulAssignment","src":"2429:38:10","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2447:5:10","nodeType":"YulIdentifier","src":"2447:5:10"},{"kind":"number","nativeSrc":"2454:2:10","nodeType":"YulLiteral","src":"2454:2:10","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2443:3:10","nodeType":"YulIdentifier","src":"2443:3:10"},"nativeSrc":"2443:14:10","nodeType":"YulFunctionCall","src":"2443:14:10"},{"arguments":[{"kind":"number","nativeSrc":"2463:2:10","nodeType":"YulLiteral","src":"2463:2:10","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2459:3:10","nodeType":"YulIdentifier","src":"2459:3:10"},"nativeSrc":"2459:7:10","nodeType":"YulFunctionCall","src":"2459:7:10"}],"functionName":{"name":"and","nativeSrc":"2439:3:10","nodeType":"YulIdentifier","src":"2439:3:10"},"nativeSrc":"2439:28:10","nodeType":"YulFunctionCall","src":"2439:28:10"},"variableNames":[{"name":"result","nativeSrc":"2429:6:10","nodeType":"YulIdentifier","src":"2429:6:10"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"2371:102:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2402:5:10","nodeType":"YulTypedName","src":"2402:5:10","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2412:6:10","nodeType":"YulTypedName","src":"2412:6:10","type":""}],"src":"2371:102:10"},{"body":{"nativeSrc":"2571:285:10","nodeType":"YulBlock","src":"2571:285:10","statements":[{"nativeSrc":"2581:53:10","nodeType":"YulVariableDeclaration","src":"2581:53:10","value":{"arguments":[{"name":"value","nativeSrc":"2628:5:10","nodeType":"YulIdentifier","src":"2628:5:10"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"2595:32:10","nodeType":"YulIdentifier","src":"2595:32:10"},"nativeSrc":"2595:39:10","nodeType":"YulFunctionCall","src":"2595:39:10"},"variables":[{"name":"length","nativeSrc":"2585:6:10","nodeType":"YulTypedName","src":"2585:6:10","type":""}]},{"nativeSrc":"2643:78:10","nodeType":"YulAssignment","src":"2643:78:10","value":{"arguments":[{"name":"pos","nativeSrc":"2709:3:10","nodeType":"YulIdentifier","src":"2709:3:10"},{"name":"length","nativeSrc":"2714:6:10","nodeType":"YulIdentifier","src":"2714:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2650:58:10","nodeType":"YulIdentifier","src":"2650:58:10"},"nativeSrc":"2650:71:10","nodeType":"YulFunctionCall","src":"2650:71:10"},"variableNames":[{"name":"pos","nativeSrc":"2643:3:10","nodeType":"YulIdentifier","src":"2643:3:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2769:5:10","nodeType":"YulIdentifier","src":"2769:5:10"},{"kind":"number","nativeSrc":"2776:4:10","nodeType":"YulLiteral","src":"2776:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2765:3:10","nodeType":"YulIdentifier","src":"2765:3:10"},"nativeSrc":"2765:16:10","nodeType":"YulFunctionCall","src":"2765:16:10"},{"name":"pos","nativeSrc":"2783:3:10","nodeType":"YulIdentifier","src":"2783:3:10"},{"name":"length","nativeSrc":"2788:6:10","nodeType":"YulIdentifier","src":"2788:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2730:34:10","nodeType":"YulIdentifier","src":"2730:34:10"},"nativeSrc":"2730:65:10","nodeType":"YulFunctionCall","src":"2730:65:10"},"nativeSrc":"2730:65:10","nodeType":"YulExpressionStatement","src":"2730:65:10"},{"nativeSrc":"2804:46:10","nodeType":"YulAssignment","src":"2804:46:10","value":{"arguments":[{"name":"pos","nativeSrc":"2815:3:10","nodeType":"YulIdentifier","src":"2815:3:10"},{"arguments":[{"name":"length","nativeSrc":"2842:6:10","nodeType":"YulIdentifier","src":"2842:6:10"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2820:21:10","nodeType":"YulIdentifier","src":"2820:21:10"},"nativeSrc":"2820:29:10","nodeType":"YulFunctionCall","src":"2820:29:10"}],"functionName":{"name":"add","nativeSrc":"2811:3:10","nodeType":"YulIdentifier","src":"2811:3:10"},"nativeSrc":"2811:39:10","nodeType":"YulFunctionCall","src":"2811:39:10"},"variableNames":[{"name":"end","nativeSrc":"2804:3:10","nodeType":"YulIdentifier","src":"2804:3:10"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2479:377:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2552:5:10","nodeType":"YulTypedName","src":"2552:5:10","type":""},{"name":"pos","nativeSrc":"2559:3:10","nodeType":"YulTypedName","src":"2559:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2567:3:10","nodeType":"YulTypedName","src":"2567:3:10","type":""}],"src":"2479:377:10"},{"body":{"nativeSrc":"2907:32:10","nodeType":"YulBlock","src":"2907:32:10","statements":[{"nativeSrc":"2917:16:10","nodeType":"YulAssignment","src":"2917:16:10","value":{"name":"value","nativeSrc":"2928:5:10","nodeType":"YulIdentifier","src":"2928:5:10"},"variableNames":[{"name":"cleaned","nativeSrc":"2917:7:10","nodeType":"YulIdentifier","src":"2917:7:10"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2862:77:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2889:5:10","nodeType":"YulTypedName","src":"2889:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2899:7:10","nodeType":"YulTypedName","src":"2899:7:10","type":""}],"src":"2862:77:10"},{"body":{"nativeSrc":"3010:53:10","nodeType":"YulBlock","src":"3010:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3027:3:10","nodeType":"YulIdentifier","src":"3027:3:10"},{"arguments":[{"name":"value","nativeSrc":"3050:5:10","nodeType":"YulIdentifier","src":"3050:5:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3032:17:10","nodeType":"YulIdentifier","src":"3032:17:10"},"nativeSrc":"3032:24:10","nodeType":"YulFunctionCall","src":"3032:24:10"}],"functionName":{"name":"mstore","nativeSrc":"3020:6:10","nodeType":"YulIdentifier","src":"3020:6:10"},"nativeSrc":"3020:37:10","nodeType":"YulFunctionCall","src":"3020:37:10"},"nativeSrc":"3020:37:10","nodeType":"YulExpressionStatement","src":"3020:37:10"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"2945:118:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2998:5:10","nodeType":"YulTypedName","src":"2998:5:10","type":""},{"name":"pos","nativeSrc":"3005:3:10","nodeType":"YulTypedName","src":"3005:3:10","type":""}],"src":"2945:118:10"},{"body":{"nativeSrc":"3237:353:10","nodeType":"YulBlock","src":"3237:353:10","statements":[{"nativeSrc":"3247:26:10","nodeType":"YulAssignment","src":"3247:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"3259:9:10","nodeType":"YulIdentifier","src":"3259:9:10"},{"kind":"number","nativeSrc":"3270:2:10","nodeType":"YulLiteral","src":"3270:2:10","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3255:3:10","nodeType":"YulIdentifier","src":"3255:3:10"},"nativeSrc":"3255:18:10","nodeType":"YulFunctionCall","src":"3255:18:10"},"variableNames":[{"name":"tail","nativeSrc":"3247:4:10","nodeType":"YulIdentifier","src":"3247:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3321:6:10","nodeType":"YulIdentifier","src":"3321:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"3334:9:10","nodeType":"YulIdentifier","src":"3334:9:10"},{"kind":"number","nativeSrc":"3345:1:10","nodeType":"YulLiteral","src":"3345:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3330:3:10","nodeType":"YulIdentifier","src":"3330:3:10"},"nativeSrc":"3330:17:10","nodeType":"YulFunctionCall","src":"3330:17:10"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3283:37:10","nodeType":"YulIdentifier","src":"3283:37:10"},"nativeSrc":"3283:65:10","nodeType":"YulFunctionCall","src":"3283:65:10"},"nativeSrc":"3283:65:10","nodeType":"YulExpressionStatement","src":"3283:65:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3369:9:10","nodeType":"YulIdentifier","src":"3369:9:10"},{"kind":"number","nativeSrc":"3380:2:10","nodeType":"YulLiteral","src":"3380:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3365:3:10","nodeType":"YulIdentifier","src":"3365:3:10"},"nativeSrc":"3365:18:10","nodeType":"YulFunctionCall","src":"3365:18:10"},{"arguments":[{"name":"tail","nativeSrc":"3389:4:10","nodeType":"YulIdentifier","src":"3389:4:10"},{"name":"headStart","nativeSrc":"3395:9:10","nodeType":"YulIdentifier","src":"3395:9:10"}],"functionName":{"name":"sub","nativeSrc":"3385:3:10","nodeType":"YulIdentifier","src":"3385:3:10"},"nativeSrc":"3385:20:10","nodeType":"YulFunctionCall","src":"3385:20:10"}],"functionName":{"name":"mstore","nativeSrc":"3358:6:10","nodeType":"YulIdentifier","src":"3358:6:10"},"nativeSrc":"3358:48:10","nodeType":"YulFunctionCall","src":"3358:48:10"},"nativeSrc":"3358:48:10","nodeType":"YulExpressionStatement","src":"3358:48:10"},{"nativeSrc":"3415:86:10","nodeType":"YulAssignment","src":"3415:86:10","value":{"arguments":[{"name":"value1","nativeSrc":"3487:6:10","nodeType":"YulIdentifier","src":"3487:6:10"},{"name":"tail","nativeSrc":"3496:4:10","nodeType":"YulIdentifier","src":"3496:4:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"3423:63:10","nodeType":"YulIdentifier","src":"3423:63:10"},"nativeSrc":"3423:78:10","nodeType":"YulFunctionCall","src":"3423:78:10"},"variableNames":[{"name":"tail","nativeSrc":"3415:4:10","nodeType":"YulIdentifier","src":"3415:4:10"}]},{"expression":{"arguments":[{"name":"value2","nativeSrc":"3555:6:10","nodeType":"YulIdentifier","src":"3555:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"3568:9:10","nodeType":"YulIdentifier","src":"3568:9:10"},{"kind":"number","nativeSrc":"3579:2:10","nodeType":"YulLiteral","src":"3579:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3564:3:10","nodeType":"YulIdentifier","src":"3564:3:10"},"nativeSrc":"3564:18:10","nodeType":"YulFunctionCall","src":"3564:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3511:43:10","nodeType":"YulIdentifier","src":"3511:43:10"},"nativeSrc":"3511:72:10","nodeType":"YulFunctionCall","src":"3511:72:10"},"nativeSrc":"3511:72:10","nodeType":"YulExpressionStatement","src":"3511:72:10"}]},"name":"abi_encode_tuple_t_bool_t_string_memory_ptr_t_uint256__to_t_bool_t_string_memory_ptr_t_uint256__fromStack_reversed","nativeSrc":"3069:521:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3193:9:10","nodeType":"YulTypedName","src":"3193:9:10","type":""},{"name":"value2","nativeSrc":"3205:6:10","nodeType":"YulTypedName","src":"3205:6:10","type":""},{"name":"value1","nativeSrc":"3213:6:10","nodeType":"YulTypedName","src":"3213:6:10","type":""},{"name":"value0","nativeSrc":"3221:6:10","nodeType":"YulTypedName","src":"3221:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3232:4:10","nodeType":"YulTypedName","src":"3232:4:10","type":""}],"src":"3069:521:10"},{"body":{"nativeSrc":"3680:40:10","nodeType":"YulBlock","src":"3680:40:10","statements":[{"nativeSrc":"3691:22:10","nodeType":"YulAssignment","src":"3691:22:10","value":{"arguments":[{"name":"value","nativeSrc":"3707:5:10","nodeType":"YulIdentifier","src":"3707:5:10"}],"functionName":{"name":"mload","nativeSrc":"3701:5:10","nodeType":"YulIdentifier","src":"3701:5:10"},"nativeSrc":"3701:12:10","nodeType":"YulFunctionCall","src":"3701:12:10"},"variableNames":[{"name":"length","nativeSrc":"3691:6:10","nodeType":"YulIdentifier","src":"3691:6:10"}]}]},"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"3596:124:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3663:5:10","nodeType":"YulTypedName","src":"3663:5:10","type":""}],"returnVariables":[{"name":"length","nativeSrc":"3673:6:10","nodeType":"YulTypedName","src":"3673:6:10","type":""}],"src":"3596:124:10"},{"body":{"nativeSrc":"3847:73:10","nodeType":"YulBlock","src":"3847:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3864:3:10","nodeType":"YulIdentifier","src":"3864:3:10"},{"name":"length","nativeSrc":"3869:6:10","nodeType":"YulIdentifier","src":"3869:6:10"}],"functionName":{"name":"mstore","nativeSrc":"3857:6:10","nodeType":"YulIdentifier","src":"3857:6:10"},"nativeSrc":"3857:19:10","nodeType":"YulFunctionCall","src":"3857:19:10"},"nativeSrc":"3857:19:10","nodeType":"YulExpressionStatement","src":"3857:19:10"},{"nativeSrc":"3885:29:10","nodeType":"YulAssignment","src":"3885:29:10","value":{"arguments":[{"name":"pos","nativeSrc":"3904:3:10","nodeType":"YulIdentifier","src":"3904:3:10"},{"kind":"number","nativeSrc":"3909:4:10","nodeType":"YulLiteral","src":"3909:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3900:3:10","nodeType":"YulIdentifier","src":"3900:3:10"},"nativeSrc":"3900:14:10","nodeType":"YulFunctionCall","src":"3900:14:10"},"variableNames":[{"name":"updated_pos","nativeSrc":"3885:11:10","nodeType":"YulIdentifier","src":"3885:11:10"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nativeSrc":"3726:194:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"3819:3:10","nodeType":"YulTypedName","src":"3819:3:10","type":""},{"name":"length","nativeSrc":"3824:6:10","nodeType":"YulTypedName","src":"3824:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"3835:11:10","nodeType":"YulTypedName","src":"3835:11:10","type":""}],"src":"3726:194:10"},{"body":{"nativeSrc":"4008:60:10","nodeType":"YulBlock","src":"4008:60:10","statements":[{"nativeSrc":"4018:11:10","nodeType":"YulAssignment","src":"4018:11:10","value":{"name":"ptr","nativeSrc":"4026:3:10","nodeType":"YulIdentifier","src":"4026:3:10"},"variableNames":[{"name":"data","nativeSrc":"4018:4:10","nodeType":"YulIdentifier","src":"4018:4:10"}]},{"nativeSrc":"4039:22:10","nodeType":"YulAssignment","src":"4039:22:10","value":{"arguments":[{"name":"ptr","nativeSrc":"4051:3:10","nodeType":"YulIdentifier","src":"4051:3:10"},{"kind":"number","nativeSrc":"4056:4:10","nodeType":"YulLiteral","src":"4056:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4047:3:10","nodeType":"YulIdentifier","src":"4047:3:10"},"nativeSrc":"4047:14:10","nodeType":"YulFunctionCall","src":"4047:14:10"},"variableNames":[{"name":"data","nativeSrc":"4039:4:10","nodeType":"YulIdentifier","src":"4039:4:10"}]}]},"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"3926:142:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"3995:3:10","nodeType":"YulTypedName","src":"3995:3:10","type":""}],"returnVariables":[{"name":"data","nativeSrc":"4003:4:10","nodeType":"YulTypedName","src":"4003:4:10","type":""}],"src":"3926:142:10"},{"body":{"nativeSrc":"4160:73:10","nodeType":"YulBlock","src":"4160:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4177:3:10","nodeType":"YulIdentifier","src":"4177:3:10"},{"name":"length","nativeSrc":"4182:6:10","nodeType":"YulIdentifier","src":"4182:6:10"}],"functionName":{"name":"mstore","nativeSrc":"4170:6:10","nodeType":"YulIdentifier","src":"4170:6:10"},"nativeSrc":"4170:19:10","nodeType":"YulFunctionCall","src":"4170:19:10"},"nativeSrc":"4170:19:10","nodeType":"YulExpressionStatement","src":"4170:19:10"},{"nativeSrc":"4198:29:10","nodeType":"YulAssignment","src":"4198:29:10","value":{"arguments":[{"name":"pos","nativeSrc":"4217:3:10","nodeType":"YulIdentifier","src":"4217:3:10"},{"kind":"number","nativeSrc":"4222:4:10","nodeType":"YulLiteral","src":"4222:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4213:3:10","nodeType":"YulIdentifier","src":"4213:3:10"},"nativeSrc":"4213:14:10","nodeType":"YulFunctionCall","src":"4213:14:10"},"variableNames":[{"name":"updated_pos","nativeSrc":"4198:11:10","nodeType":"YulIdentifier","src":"4198:11:10"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nativeSrc":"4074:159:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4132:3:10","nodeType":"YulTypedName","src":"4132:3:10","type":""},{"name":"length","nativeSrc":"4137:6:10","nodeType":"YulTypedName","src":"4137:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"4148:11:10","nodeType":"YulTypedName","src":"4148:11:10","type":""}],"src":"4074:159:10"},{"body":{"nativeSrc":"4321:275:10","nodeType":"YulBlock","src":"4321:275:10","statements":[{"nativeSrc":"4331:53:10","nodeType":"YulVariableDeclaration","src":"4331:53:10","value":{"arguments":[{"name":"value","nativeSrc":"4378:5:10","nodeType":"YulIdentifier","src":"4378:5:10"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"4345:32:10","nodeType":"YulIdentifier","src":"4345:32:10"},"nativeSrc":"4345:39:10","nodeType":"YulFunctionCall","src":"4345:39:10"},"variables":[{"name":"length","nativeSrc":"4335:6:10","nodeType":"YulTypedName","src":"4335:6:10","type":""}]},{"nativeSrc":"4393:68:10","nodeType":"YulAssignment","src":"4393:68:10","value":{"arguments":[{"name":"pos","nativeSrc":"4449:3:10","nodeType":"YulIdentifier","src":"4449:3:10"},{"name":"length","nativeSrc":"4454:6:10","nodeType":"YulIdentifier","src":"4454:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nativeSrc":"4400:48:10","nodeType":"YulIdentifier","src":"4400:48:10"},"nativeSrc":"4400:61:10","nodeType":"YulFunctionCall","src":"4400:61:10"},"variableNames":[{"name":"pos","nativeSrc":"4393:3:10","nodeType":"YulIdentifier","src":"4393:3:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4509:5:10","nodeType":"YulIdentifier","src":"4509:5:10"},{"kind":"number","nativeSrc":"4516:4:10","nodeType":"YulLiteral","src":"4516:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4505:3:10","nodeType":"YulIdentifier","src":"4505:3:10"},"nativeSrc":"4505:16:10","nodeType":"YulFunctionCall","src":"4505:16:10"},{"name":"pos","nativeSrc":"4523:3:10","nodeType":"YulIdentifier","src":"4523:3:10"},{"name":"length","nativeSrc":"4528:6:10","nodeType":"YulIdentifier","src":"4528:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"4470:34:10","nodeType":"YulIdentifier","src":"4470:34:10"},"nativeSrc":"4470:65:10","nodeType":"YulFunctionCall","src":"4470:65:10"},"nativeSrc":"4470:65:10","nodeType":"YulExpressionStatement","src":"4470:65:10"},{"nativeSrc":"4544:46:10","nodeType":"YulAssignment","src":"4544:46:10","value":{"arguments":[{"name":"pos","nativeSrc":"4555:3:10","nodeType":"YulIdentifier","src":"4555:3:10"},{"arguments":[{"name":"length","nativeSrc":"4582:6:10","nodeType":"YulIdentifier","src":"4582:6:10"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"4560:21:10","nodeType":"YulIdentifier","src":"4560:21:10"},"nativeSrc":"4560:29:10","nodeType":"YulFunctionCall","src":"4560:29:10"}],"functionName":{"name":"add","nativeSrc":"4551:3:10","nodeType":"YulIdentifier","src":"4551:3:10"},"nativeSrc":"4551:39:10","nodeType":"YulFunctionCall","src":"4551:39:10"},"variableNames":[{"name":"end","nativeSrc":"4544:3:10","nodeType":"YulIdentifier","src":"4544:3:10"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nativeSrc":"4239:357:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4302:5:10","nodeType":"YulTypedName","src":"4302:5:10","type":""},{"name":"pos","nativeSrc":"4309:3:10","nodeType":"YulTypedName","src":"4309:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"4317:3:10","nodeType":"YulTypedName","src":"4317:3:10","type":""}],"src":"4239:357:10"},{"body":{"nativeSrc":"4702:96:10","nodeType":"YulBlock","src":"4702:96:10","statements":[{"nativeSrc":"4712:80:10","nodeType":"YulAssignment","src":"4712:80:10","value":{"arguments":[{"name":"value0","nativeSrc":"4780:6:10","nodeType":"YulIdentifier","src":"4780:6:10"},{"name":"pos","nativeSrc":"4788:3:10","nodeType":"YulIdentifier","src":"4788:3:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nativeSrc":"4726:53:10","nodeType":"YulIdentifier","src":"4726:53:10"},"nativeSrc":"4726:66:10","nodeType":"YulFunctionCall","src":"4726:66:10"},"variableNames":[{"name":"updatedPos","nativeSrc":"4712:10:10","nodeType":"YulIdentifier","src":"4712:10:10"}]}]},"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nativeSrc":"4602:196:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"4675:6:10","nodeType":"YulTypedName","src":"4675:6:10","type":""},{"name":"pos","nativeSrc":"4683:3:10","nodeType":"YulTypedName","src":"4683:3:10","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"4691:10:10","nodeType":"YulTypedName","src":"4691:10:10","type":""}],"src":"4602:196:10"},{"body":{"nativeSrc":"4889:38:10","nodeType":"YulBlock","src":"4889:38:10","statements":[{"nativeSrc":"4899:22:10","nodeType":"YulAssignment","src":"4899:22:10","value":{"arguments":[{"name":"ptr","nativeSrc":"4911:3:10","nodeType":"YulIdentifier","src":"4911:3:10"},{"kind":"number","nativeSrc":"4916:4:10","nodeType":"YulLiteral","src":"4916:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4907:3:10","nodeType":"YulIdentifier","src":"4907:3:10"},"nativeSrc":"4907:14:10","nodeType":"YulFunctionCall","src":"4907:14:10"},"variableNames":[{"name":"next","nativeSrc":"4899:4:10","nodeType":"YulIdentifier","src":"4899:4:10"}]}]},"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"4804:123:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"4876:3:10","nodeType":"YulTypedName","src":"4876:3:10","type":""}],"returnVariables":[{"name":"next","nativeSrc":"4884:4:10","nodeType":"YulTypedName","src":"4884:4:10","type":""}],"src":"4804:123:10"},{"body":{"nativeSrc":"5105:847:10","nodeType":"YulBlock","src":"5105:847:10","statements":[{"nativeSrc":"5115:78:10","nodeType":"YulVariableDeclaration","src":"5115:78:10","value":{"arguments":[{"name":"value","nativeSrc":"5187:5:10","nodeType":"YulIdentifier","src":"5187:5:10"}],"functionName":{"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"5129:57:10","nodeType":"YulIdentifier","src":"5129:57:10"},"nativeSrc":"5129:64:10","nodeType":"YulFunctionCall","src":"5129:64:10"},"variables":[{"name":"length","nativeSrc":"5119:6:10","nodeType":"YulTypedName","src":"5119:6:10","type":""}]},{"nativeSrc":"5202:103:10","nodeType":"YulAssignment","src":"5202:103:10","value":{"arguments":[{"name":"pos","nativeSrc":"5293:3:10","nodeType":"YulIdentifier","src":"5293:3:10"},{"name":"length","nativeSrc":"5298:6:10","nodeType":"YulIdentifier","src":"5298:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nativeSrc":"5209:83:10","nodeType":"YulIdentifier","src":"5209:83:10"},"nativeSrc":"5209:96:10","nodeType":"YulFunctionCall","src":"5209:96:10"},"variableNames":[{"name":"pos","nativeSrc":"5202:3:10","nodeType":"YulIdentifier","src":"5202:3:10"}]},{"nativeSrc":"5314:20:10","nodeType":"YulVariableDeclaration","src":"5314:20:10","value":{"name":"pos","nativeSrc":"5331:3:10","nodeType":"YulIdentifier","src":"5331:3:10"},"variables":[{"name":"headStart","nativeSrc":"5318:9:10","nodeType":"YulTypedName","src":"5318:9:10","type":""}]},{"nativeSrc":"5343:39:10","nodeType":"YulVariableDeclaration","src":"5343:39:10","value":{"arguments":[{"name":"pos","nativeSrc":"5359:3:10","nodeType":"YulIdentifier","src":"5359:3:10"},{"arguments":[{"name":"length","nativeSrc":"5368:6:10","nodeType":"YulIdentifier","src":"5368:6:10"},{"kind":"number","nativeSrc":"5376:4:10","nodeType":"YulLiteral","src":"5376:4:10","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"5364:3:10","nodeType":"YulIdentifier","src":"5364:3:10"},"nativeSrc":"5364:17:10","nodeType":"YulFunctionCall","src":"5364:17:10"}],"functionName":{"name":"add","nativeSrc":"5355:3:10","nodeType":"YulIdentifier","src":"5355:3:10"},"nativeSrc":"5355:27:10","nodeType":"YulFunctionCall","src":"5355:27:10"},"variables":[{"name":"tail","nativeSrc":"5347:4:10","nodeType":"YulTypedName","src":"5347:4:10","type":""}]},{"nativeSrc":"5391:81:10","nodeType":"YulVariableDeclaration","src":"5391:81:10","value":{"arguments":[{"name":"value","nativeSrc":"5466:5:10","nodeType":"YulIdentifier","src":"5466:5:10"}],"functionName":{"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"5406:59:10","nodeType":"YulIdentifier","src":"5406:59:10"},"nativeSrc":"5406:66:10","nodeType":"YulFunctionCall","src":"5406:66:10"},"variables":[{"name":"baseRef","nativeSrc":"5395:7:10","nodeType":"YulTypedName","src":"5395:7:10","type":""}]},{"nativeSrc":"5481:21:10","nodeType":"YulVariableDeclaration","src":"5481:21:10","value":{"name":"baseRef","nativeSrc":"5495:7:10","nodeType":"YulIdentifier","src":"5495:7:10"},"variables":[{"name":"srcPtr","nativeSrc":"5485:6:10","nodeType":"YulTypedName","src":"5485:6:10","type":""}]},{"body":{"nativeSrc":"5571:336:10","nodeType":"YulBlock","src":"5571:336:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5592:3:10","nodeType":"YulIdentifier","src":"5592:3:10"},{"arguments":[{"name":"tail","nativeSrc":"5601:4:10","nodeType":"YulIdentifier","src":"5601:4:10"},{"name":"headStart","nativeSrc":"5607:9:10","nodeType":"YulIdentifier","src":"5607:9:10"}],"functionName":{"name":"sub","nativeSrc":"5597:3:10","nodeType":"YulIdentifier","src":"5597:3:10"},"nativeSrc":"5597:20:10","nodeType":"YulFunctionCall","src":"5597:20:10"}],"functionName":{"name":"mstore","nativeSrc":"5585:6:10","nodeType":"YulIdentifier","src":"5585:6:10"},"nativeSrc":"5585:33:10","nodeType":"YulFunctionCall","src":"5585:33:10"},"nativeSrc":"5585:33:10","nodeType":"YulExpressionStatement","src":"5585:33:10"},{"nativeSrc":"5631:34:10","nodeType":"YulVariableDeclaration","src":"5631:34:10","value":{"arguments":[{"name":"srcPtr","nativeSrc":"5658:6:10","nodeType":"YulIdentifier","src":"5658:6:10"}],"functionName":{"name":"mload","nativeSrc":"5652:5:10","nodeType":"YulIdentifier","src":"5652:5:10"},"nativeSrc":"5652:13:10","nodeType":"YulFunctionCall","src":"5652:13:10"},"variables":[{"name":"elementValue0","nativeSrc":"5635:13:10","nodeType":"YulTypedName","src":"5635:13:10","type":""}]},{"nativeSrc":"5678:92:10","nodeType":"YulAssignment","src":"5678:92:10","value":{"arguments":[{"name":"elementValue0","nativeSrc":"5750:13:10","nodeType":"YulIdentifier","src":"5750:13:10"},{"name":"tail","nativeSrc":"5765:4:10","nodeType":"YulIdentifier","src":"5765:4:10"}],"functionName":{"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nativeSrc":"5686:63:10","nodeType":"YulIdentifier","src":"5686:63:10"},"nativeSrc":"5686:84:10","nodeType":"YulFunctionCall","src":"5686:84:10"},"variableNames":[{"name":"tail","nativeSrc":"5678:4:10","nodeType":"YulIdentifier","src":"5678:4:10"}]},{"nativeSrc":"5783:80:10","nodeType":"YulAssignment","src":"5783:80:10","value":{"arguments":[{"name":"srcPtr","nativeSrc":"5856:6:10","nodeType":"YulIdentifier","src":"5856:6:10"}],"functionName":{"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nativeSrc":"5793:62:10","nodeType":"YulIdentifier","src":"5793:62:10"},"nativeSrc":"5793:70:10","nodeType":"YulFunctionCall","src":"5793:70:10"},"variableNames":[{"name":"srcPtr","nativeSrc":"5783:6:10","nodeType":"YulIdentifier","src":"5783:6:10"}]},{"nativeSrc":"5876:21:10","nodeType":"YulAssignment","src":"5876:21:10","value":{"arguments":[{"name":"pos","nativeSrc":"5887:3:10","nodeType":"YulIdentifier","src":"5887:3:10"},{"kind":"number","nativeSrc":"5892:4:10","nodeType":"YulLiteral","src":"5892:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5883:3:10","nodeType":"YulIdentifier","src":"5883:3:10"},"nativeSrc":"5883:14:10","nodeType":"YulFunctionCall","src":"5883:14:10"},"variableNames":[{"name":"pos","nativeSrc":"5876:3:10","nodeType":"YulIdentifier","src":"5876:3:10"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"5533:1:10","nodeType":"YulIdentifier","src":"5533:1:10"},{"name":"length","nativeSrc":"5536:6:10","nodeType":"YulIdentifier","src":"5536:6:10"}],"functionName":{"name":"lt","nativeSrc":"5530:2:10","nodeType":"YulIdentifier","src":"5530:2:10"},"nativeSrc":"5530:13:10","nodeType":"YulFunctionCall","src":"5530:13:10"},"nativeSrc":"5511:396:10","nodeType":"YulForLoop","post":{"nativeSrc":"5544:18:10","nodeType":"YulBlock","src":"5544:18:10","statements":[{"nativeSrc":"5546:14:10","nodeType":"YulAssignment","src":"5546:14:10","value":{"arguments":[{"name":"i","nativeSrc":"5555:1:10","nodeType":"YulIdentifier","src":"5555:1:10"},{"kind":"number","nativeSrc":"5558:1:10","nodeType":"YulLiteral","src":"5558:1:10","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"5551:3:10","nodeType":"YulIdentifier","src":"5551:3:10"},"nativeSrc":"5551:9:10","nodeType":"YulFunctionCall","src":"5551:9:10"},"variableNames":[{"name":"i","nativeSrc":"5546:1:10","nodeType":"YulIdentifier","src":"5546:1:10"}]}]},"pre":{"nativeSrc":"5515:14:10","nodeType":"YulBlock","src":"5515:14:10","statements":[{"nativeSrc":"5517:10:10","nodeType":"YulVariableDeclaration","src":"5517:10:10","value":{"kind":"number","nativeSrc":"5526:1:10","nodeType":"YulLiteral","src":"5526:1:10","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"5521:1:10","nodeType":"YulTypedName","src":"5521:1:10","type":""}]}]},"src":"5511:396:10"},{"nativeSrc":"5916:11:10","nodeType":"YulAssignment","src":"5916:11:10","value":{"name":"tail","nativeSrc":"5923:4:10","nodeType":"YulIdentifier","src":"5923:4:10"},"variableNames":[{"name":"pos","nativeSrc":"5916:3:10","nodeType":"YulIdentifier","src":"5916:3:10"}]},{"nativeSrc":"5936:10:10","nodeType":"YulAssignment","src":"5936:10:10","value":{"name":"pos","nativeSrc":"5943:3:10","nodeType":"YulIdentifier","src":"5943:3:10"},"variableNames":[{"name":"end","nativeSrc":"5936:3:10","nodeType":"YulIdentifier","src":"5936:3:10"}]}]},"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nativeSrc":"4961:991:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5084:5:10","nodeType":"YulTypedName","src":"5084:5:10","type":""},{"name":"pos","nativeSrc":"5091:3:10","nodeType":"YulTypedName","src":"5091:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"5100:3:10","nodeType":"YulTypedName","src":"5100:3:10","type":""}],"src":"4961:991:10"},{"body":{"nativeSrc":"6032:40:10","nodeType":"YulBlock","src":"6032:40:10","statements":[{"nativeSrc":"6043:22:10","nodeType":"YulAssignment","src":"6043:22:10","value":{"arguments":[{"name":"value","nativeSrc":"6059:5:10","nodeType":"YulIdentifier","src":"6059:5:10"}],"functionName":{"name":"mload","nativeSrc":"6053:5:10","nodeType":"YulIdentifier","src":"6053:5:10"},"nativeSrc":"6053:12:10","nodeType":"YulFunctionCall","src":"6053:12:10"},"variableNames":[{"name":"length","nativeSrc":"6043:6:10","nodeType":"YulIdentifier","src":"6043:6:10"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"5958:114:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6015:5:10","nodeType":"YulTypedName","src":"6015:5:10","type":""}],"returnVariables":[{"name":"length","nativeSrc":"6025:6:10","nodeType":"YulTypedName","src":"6025:6:10","type":""}],"src":"5958:114:10"},{"body":{"nativeSrc":"6189:73:10","nodeType":"YulBlock","src":"6189:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6206:3:10","nodeType":"YulIdentifier","src":"6206:3:10"},{"name":"length","nativeSrc":"6211:6:10","nodeType":"YulIdentifier","src":"6211:6:10"}],"functionName":{"name":"mstore","nativeSrc":"6199:6:10","nodeType":"YulIdentifier","src":"6199:6:10"},"nativeSrc":"6199:19:10","nodeType":"YulFunctionCall","src":"6199:19:10"},"nativeSrc":"6199:19:10","nodeType":"YulExpressionStatement","src":"6199:19:10"},{"nativeSrc":"6227:29:10","nodeType":"YulAssignment","src":"6227:29:10","value":{"arguments":[{"name":"pos","nativeSrc":"6246:3:10","nodeType":"YulIdentifier","src":"6246:3:10"},{"kind":"number","nativeSrc":"6251:4:10","nodeType":"YulLiteral","src":"6251:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6242:3:10","nodeType":"YulIdentifier","src":"6242:3:10"},"nativeSrc":"6242:14:10","nodeType":"YulFunctionCall","src":"6242:14:10"},"variableNames":[{"name":"updated_pos","nativeSrc":"6227:11:10","nodeType":"YulIdentifier","src":"6227:11:10"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"6078:184:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6161:3:10","nodeType":"YulTypedName","src":"6161:3:10","type":""},{"name":"length","nativeSrc":"6166:6:10","nodeType":"YulTypedName","src":"6166:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"6177:11:10","nodeType":"YulTypedName","src":"6177:11:10","type":""}],"src":"6078:184:10"},{"body":{"nativeSrc":"6340:60:10","nodeType":"YulBlock","src":"6340:60:10","statements":[{"nativeSrc":"6350:11:10","nodeType":"YulAssignment","src":"6350:11:10","value":{"name":"ptr","nativeSrc":"6358:3:10","nodeType":"YulIdentifier","src":"6358:3:10"},"variableNames":[{"name":"data","nativeSrc":"6350:4:10","nodeType":"YulIdentifier","src":"6350:4:10"}]},{"nativeSrc":"6371:22:10","nodeType":"YulAssignment","src":"6371:22:10","value":{"arguments":[{"name":"ptr","nativeSrc":"6383:3:10","nodeType":"YulIdentifier","src":"6383:3:10"},{"kind":"number","nativeSrc":"6388:4:10","nodeType":"YulLiteral","src":"6388:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6379:3:10","nodeType":"YulIdentifier","src":"6379:3:10"},"nativeSrc":"6379:14:10","nodeType":"YulFunctionCall","src":"6379:14:10"},"variableNames":[{"name":"data","nativeSrc":"6371:4:10","nodeType":"YulIdentifier","src":"6371:4:10"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"6268:132:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"6327:3:10","nodeType":"YulTypedName","src":"6327:3:10","type":""}],"returnVariables":[{"name":"data","nativeSrc":"6335:4:10","nodeType":"YulTypedName","src":"6335:4:10","type":""}],"src":"6268:132:10"},{"body":{"nativeSrc":"6461:53:10","nodeType":"YulBlock","src":"6461:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6478:3:10","nodeType":"YulIdentifier","src":"6478:3:10"},{"arguments":[{"name":"value","nativeSrc":"6501:5:10","nodeType":"YulIdentifier","src":"6501:5:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6483:17:10","nodeType":"YulIdentifier","src":"6483:17:10"},"nativeSrc":"6483:24:10","nodeType":"YulFunctionCall","src":"6483:24:10"}],"functionName":{"name":"mstore","nativeSrc":"6471:6:10","nodeType":"YulIdentifier","src":"6471:6:10"},"nativeSrc":"6471:37:10","nodeType":"YulFunctionCall","src":"6471:37:10"},"nativeSrc":"6471:37:10","nodeType":"YulExpressionStatement","src":"6471:37:10"}]},"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"6406:108:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6449:5:10","nodeType":"YulTypedName","src":"6449:5:10","type":""},{"name":"pos","nativeSrc":"6456:3:10","nodeType":"YulTypedName","src":"6456:3:10","type":""}],"src":"6406:108:10"},{"body":{"nativeSrc":"6600:99:10","nodeType":"YulBlock","src":"6600:99:10","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"6644:6:10","nodeType":"YulIdentifier","src":"6644:6:10"},{"name":"pos","nativeSrc":"6652:3:10","nodeType":"YulIdentifier","src":"6652:3:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"6610:33:10","nodeType":"YulIdentifier","src":"6610:33:10"},"nativeSrc":"6610:46:10","nodeType":"YulFunctionCall","src":"6610:46:10"},"nativeSrc":"6610:46:10","nodeType":"YulExpressionStatement","src":"6610:46:10"},{"nativeSrc":"6665:28:10","nodeType":"YulAssignment","src":"6665:28:10","value":{"arguments":[{"name":"pos","nativeSrc":"6683:3:10","nodeType":"YulIdentifier","src":"6683:3:10"},{"kind":"number","nativeSrc":"6688:4:10","nodeType":"YulLiteral","src":"6688:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6679:3:10","nodeType":"YulIdentifier","src":"6679:3:10"},"nativeSrc":"6679:14:10","nodeType":"YulFunctionCall","src":"6679:14:10"},"variableNames":[{"name":"updatedPos","nativeSrc":"6665:10:10","nodeType":"YulIdentifier","src":"6665:10:10"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"6520:179:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"6573:6:10","nodeType":"YulTypedName","src":"6573:6:10","type":""},{"name":"pos","nativeSrc":"6581:3:10","nodeType":"YulTypedName","src":"6581:3:10","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"6589:10:10","nodeType":"YulTypedName","src":"6589:10:10","type":""}],"src":"6520:179:10"},{"body":{"nativeSrc":"6780:38:10","nodeType":"YulBlock","src":"6780:38:10","statements":[{"nativeSrc":"6790:22:10","nodeType":"YulAssignment","src":"6790:22:10","value":{"arguments":[{"name":"ptr","nativeSrc":"6802:3:10","nodeType":"YulIdentifier","src":"6802:3:10"},{"kind":"number","nativeSrc":"6807:4:10","nodeType":"YulLiteral","src":"6807:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6798:3:10","nodeType":"YulIdentifier","src":"6798:3:10"},"nativeSrc":"6798:14:10","nodeType":"YulFunctionCall","src":"6798:14:10"},"variableNames":[{"name":"next","nativeSrc":"6790:4:10","nodeType":"YulIdentifier","src":"6790:4:10"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"6705:113:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"6767:3:10","nodeType":"YulTypedName","src":"6767:3:10","type":""}],"returnVariables":[{"name":"next","nativeSrc":"6775:4:10","nodeType":"YulTypedName","src":"6775:4:10","type":""}],"src":"6705:113:10"},{"body":{"nativeSrc":"6978:608:10","nodeType":"YulBlock","src":"6978:608:10","statements":[{"nativeSrc":"6988:68:10","nodeType":"YulVariableDeclaration","src":"6988:68:10","value":{"arguments":[{"name":"value","nativeSrc":"7050:5:10","nodeType":"YulIdentifier","src":"7050:5:10"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7002:47:10","nodeType":"YulIdentifier","src":"7002:47:10"},"nativeSrc":"7002:54:10","nodeType":"YulFunctionCall","src":"7002:54:10"},"variables":[{"name":"length","nativeSrc":"6992:6:10","nodeType":"YulTypedName","src":"6992:6:10","type":""}]},{"nativeSrc":"7065:93:10","nodeType":"YulAssignment","src":"7065:93:10","value":{"arguments":[{"name":"pos","nativeSrc":"7146:3:10","nodeType":"YulIdentifier","src":"7146:3:10"},{"name":"length","nativeSrc":"7151:6:10","nodeType":"YulIdentifier","src":"7151:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"7072:73:10","nodeType":"YulIdentifier","src":"7072:73:10"},"nativeSrc":"7072:86:10","nodeType":"YulFunctionCall","src":"7072:86:10"},"variableNames":[{"name":"pos","nativeSrc":"7065:3:10","nodeType":"YulIdentifier","src":"7065:3:10"}]},{"nativeSrc":"7167:71:10","nodeType":"YulVariableDeclaration","src":"7167:71:10","value":{"arguments":[{"name":"value","nativeSrc":"7232:5:10","nodeType":"YulIdentifier","src":"7232:5:10"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7182:49:10","nodeType":"YulIdentifier","src":"7182:49:10"},"nativeSrc":"7182:56:10","nodeType":"YulFunctionCall","src":"7182:56:10"},"variables":[{"name":"baseRef","nativeSrc":"7171:7:10","nodeType":"YulTypedName","src":"7171:7:10","type":""}]},{"nativeSrc":"7247:21:10","nodeType":"YulVariableDeclaration","src":"7247:21:10","value":{"name":"baseRef","nativeSrc":"7261:7:10","nodeType":"YulIdentifier","src":"7261:7:10"},"variables":[{"name":"srcPtr","nativeSrc":"7251:6:10","nodeType":"YulTypedName","src":"7251:6:10","type":""}]},{"body":{"nativeSrc":"7337:224:10","nodeType":"YulBlock","src":"7337:224:10","statements":[{"nativeSrc":"7351:34:10","nodeType":"YulVariableDeclaration","src":"7351:34:10","value":{"arguments":[{"name":"srcPtr","nativeSrc":"7378:6:10","nodeType":"YulIdentifier","src":"7378:6:10"}],"functionName":{"name":"mload","nativeSrc":"7372:5:10","nodeType":"YulIdentifier","src":"7372:5:10"},"nativeSrc":"7372:13:10","nodeType":"YulFunctionCall","src":"7372:13:10"},"variables":[{"name":"elementValue0","nativeSrc":"7355:13:10","nodeType":"YulTypedName","src":"7355:13:10","type":""}]},{"nativeSrc":"7398:70:10","nodeType":"YulAssignment","src":"7398:70:10","value":{"arguments":[{"name":"elementValue0","nativeSrc":"7449:13:10","nodeType":"YulIdentifier","src":"7449:13:10"},{"name":"pos","nativeSrc":"7464:3:10","nodeType":"YulIdentifier","src":"7464:3:10"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"7405:43:10","nodeType":"YulIdentifier","src":"7405:43:10"},"nativeSrc":"7405:63:10","nodeType":"YulFunctionCall","src":"7405:63:10"},"variableNames":[{"name":"pos","nativeSrc":"7398:3:10","nodeType":"YulIdentifier","src":"7398:3:10"}]},{"nativeSrc":"7481:70:10","nodeType":"YulAssignment","src":"7481:70:10","value":{"arguments":[{"name":"srcPtr","nativeSrc":"7544:6:10","nodeType":"YulIdentifier","src":"7544:6:10"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7491:52:10","nodeType":"YulIdentifier","src":"7491:52:10"},"nativeSrc":"7491:60:10","nodeType":"YulFunctionCall","src":"7491:60:10"},"variableNames":[{"name":"srcPtr","nativeSrc":"7481:6:10","nodeType":"YulIdentifier","src":"7481:6:10"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"7299:1:10","nodeType":"YulIdentifier","src":"7299:1:10"},{"name":"length","nativeSrc":"7302:6:10","nodeType":"YulIdentifier","src":"7302:6:10"}],"functionName":{"name":"lt","nativeSrc":"7296:2:10","nodeType":"YulIdentifier","src":"7296:2:10"},"nativeSrc":"7296:13:10","nodeType":"YulFunctionCall","src":"7296:13:10"},"nativeSrc":"7277:284:10","nodeType":"YulForLoop","post":{"nativeSrc":"7310:18:10","nodeType":"YulBlock","src":"7310:18:10","statements":[{"nativeSrc":"7312:14:10","nodeType":"YulAssignment","src":"7312:14:10","value":{"arguments":[{"name":"i","nativeSrc":"7321:1:10","nodeType":"YulIdentifier","src":"7321:1:10"},{"kind":"number","nativeSrc":"7324:1:10","nodeType":"YulLiteral","src":"7324:1:10","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7317:3:10","nodeType":"YulIdentifier","src":"7317:3:10"},"nativeSrc":"7317:9:10","nodeType":"YulFunctionCall","src":"7317:9:10"},"variableNames":[{"name":"i","nativeSrc":"7312:1:10","nodeType":"YulIdentifier","src":"7312:1:10"}]}]},"pre":{"nativeSrc":"7281:14:10","nodeType":"YulBlock","src":"7281:14:10","statements":[{"nativeSrc":"7283:10:10","nodeType":"YulVariableDeclaration","src":"7283:10:10","value":{"kind":"number","nativeSrc":"7292:1:10","nodeType":"YulLiteral","src":"7292:1:10","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"7287:1:10","nodeType":"YulTypedName","src":"7287:1:10","type":""}]}]},"src":"7277:284:10"},{"nativeSrc":"7570:10:10","nodeType":"YulAssignment","src":"7570:10:10","value":{"name":"pos","nativeSrc":"7577:3:10","nodeType":"YulIdentifier","src":"7577:3:10"},"variableNames":[{"name":"end","nativeSrc":"7570:3:10","nodeType":"YulIdentifier","src":"7570:3:10"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"6854:732:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6957:5:10","nodeType":"YulTypedName","src":"6957:5:10","type":""},{"name":"pos","nativeSrc":"6964:3:10","nodeType":"YulTypedName","src":"6964:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"6973:3:10","nodeType":"YulTypedName","src":"6973:3:10","type":""}],"src":"6854:732:10"},{"body":{"nativeSrc":"7838:428:10","nodeType":"YulBlock","src":"7838:428:10","statements":[{"nativeSrc":"7848:26:10","nodeType":"YulAssignment","src":"7848:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"7860:9:10","nodeType":"YulIdentifier","src":"7860:9:10"},{"kind":"number","nativeSrc":"7871:2:10","nodeType":"YulLiteral","src":"7871:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7856:3:10","nodeType":"YulIdentifier","src":"7856:3:10"},"nativeSrc":"7856:18:10","nodeType":"YulFunctionCall","src":"7856:18:10"},"variableNames":[{"name":"tail","nativeSrc":"7848:4:10","nodeType":"YulIdentifier","src":"7848:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7895:9:10","nodeType":"YulIdentifier","src":"7895:9:10"},{"kind":"number","nativeSrc":"7906:1:10","nodeType":"YulLiteral","src":"7906:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7891:3:10","nodeType":"YulIdentifier","src":"7891:3:10"},"nativeSrc":"7891:17:10","nodeType":"YulFunctionCall","src":"7891:17:10"},{"arguments":[{"name":"tail","nativeSrc":"7914:4:10","nodeType":"YulIdentifier","src":"7914:4:10"},{"name":"headStart","nativeSrc":"7920:9:10","nodeType":"YulIdentifier","src":"7920:9:10"}],"functionName":{"name":"sub","nativeSrc":"7910:3:10","nodeType":"YulIdentifier","src":"7910:3:10"},"nativeSrc":"7910:20:10","nodeType":"YulFunctionCall","src":"7910:20:10"}],"functionName":{"name":"mstore","nativeSrc":"7884:6:10","nodeType":"YulIdentifier","src":"7884:6:10"},"nativeSrc":"7884:47:10","nodeType":"YulFunctionCall","src":"7884:47:10"},"nativeSrc":"7884:47:10","nodeType":"YulExpressionStatement","src":"7884:47:10"},{"nativeSrc":"7940:136:10","nodeType":"YulAssignment","src":"7940:136:10","value":{"arguments":[{"name":"value0","nativeSrc":"8062:6:10","nodeType":"YulIdentifier","src":"8062:6:10"},{"name":"tail","nativeSrc":"8071:4:10","nodeType":"YulIdentifier","src":"8071:4:10"}],"functionName":{"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nativeSrc":"7948:113:10","nodeType":"YulIdentifier","src":"7948:113:10"},"nativeSrc":"7948:128:10","nodeType":"YulFunctionCall","src":"7948:128:10"},"variableNames":[{"name":"tail","nativeSrc":"7940:4:10","nodeType":"YulIdentifier","src":"7940:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8097:9:10","nodeType":"YulIdentifier","src":"8097:9:10"},{"kind":"number","nativeSrc":"8108:2:10","nodeType":"YulLiteral","src":"8108:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8093:3:10","nodeType":"YulIdentifier","src":"8093:3:10"},"nativeSrc":"8093:18:10","nodeType":"YulFunctionCall","src":"8093:18:10"},{"arguments":[{"name":"tail","nativeSrc":"8117:4:10","nodeType":"YulIdentifier","src":"8117:4:10"},{"name":"headStart","nativeSrc":"8123:9:10","nodeType":"YulIdentifier","src":"8123:9:10"}],"functionName":{"name":"sub","nativeSrc":"8113:3:10","nodeType":"YulIdentifier","src":"8113:3:10"},"nativeSrc":"8113:20:10","nodeType":"YulFunctionCall","src":"8113:20:10"}],"functionName":{"name":"mstore","nativeSrc":"8086:6:10","nodeType":"YulIdentifier","src":"8086:6:10"},"nativeSrc":"8086:48:10","nodeType":"YulFunctionCall","src":"8086:48:10"},"nativeSrc":"8086:48:10","nodeType":"YulExpressionStatement","src":"8086:48:10"},{"nativeSrc":"8143:116:10","nodeType":"YulAssignment","src":"8143:116:10","value":{"arguments":[{"name":"value1","nativeSrc":"8245:6:10","nodeType":"YulIdentifier","src":"8245:6:10"},{"name":"tail","nativeSrc":"8254:4:10","nodeType":"YulIdentifier","src":"8254:4:10"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"8151:93:10","nodeType":"YulIdentifier","src":"8151:93:10"},"nativeSrc":"8151:108:10","nodeType":"YulFunctionCall","src":"8151:108:10"},"variableNames":[{"name":"tail","nativeSrc":"8143:4:10","nodeType":"YulIdentifier","src":"8143:4:10"}]}]},"name":"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"7592:674:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7802:9:10","nodeType":"YulTypedName","src":"7802:9:10","type":""},{"name":"value1","nativeSrc":"7814:6:10","nodeType":"YulTypedName","src":"7814:6:10","type":""},{"name":"value0","nativeSrc":"7822:6:10","nodeType":"YulTypedName","src":"7822:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7833:4:10","nodeType":"YulTypedName","src":"7833:4:10","type":""}],"src":"7592:674:10"},{"body":{"nativeSrc":"8337:53:10","nodeType":"YulBlock","src":"8337:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8354:3:10","nodeType":"YulIdentifier","src":"8354:3:10"},{"arguments":[{"name":"value","nativeSrc":"8377:5:10","nodeType":"YulIdentifier","src":"8377:5:10"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"8359:17:10","nodeType":"YulIdentifier","src":"8359:17:10"},"nativeSrc":"8359:24:10","nodeType":"YulFunctionCall","src":"8359:24:10"}],"functionName":{"name":"mstore","nativeSrc":"8347:6:10","nodeType":"YulIdentifier","src":"8347:6:10"},"nativeSrc":"8347:37:10","nodeType":"YulFunctionCall","src":"8347:37:10"},"nativeSrc":"8347:37:10","nodeType":"YulExpressionStatement","src":"8347:37:10"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8272:118:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8325:5:10","nodeType":"YulTypedName","src":"8325:5:10","type":""},{"name":"pos","nativeSrc":"8332:3:10","nodeType":"YulTypedName","src":"8332:3:10","type":""}],"src":"8272:118:10"},{"body":{"nativeSrc":"8494:124:10","nodeType":"YulBlock","src":"8494:124:10","statements":[{"nativeSrc":"8504:26:10","nodeType":"YulAssignment","src":"8504:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"8516:9:10","nodeType":"YulIdentifier","src":"8516:9:10"},{"kind":"number","nativeSrc":"8527:2:10","nodeType":"YulLiteral","src":"8527:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8512:3:10","nodeType":"YulIdentifier","src":"8512:3:10"},"nativeSrc":"8512:18:10","nodeType":"YulFunctionCall","src":"8512:18:10"},"variableNames":[{"name":"tail","nativeSrc":"8504:4:10","nodeType":"YulIdentifier","src":"8504:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8584:6:10","nodeType":"YulIdentifier","src":"8584:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"8597:9:10","nodeType":"YulIdentifier","src":"8597:9:10"},{"kind":"number","nativeSrc":"8608:1:10","nodeType":"YulLiteral","src":"8608:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8593:3:10","nodeType":"YulIdentifier","src":"8593:3:10"},"nativeSrc":"8593:17:10","nodeType":"YulFunctionCall","src":"8593:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8540:43:10","nodeType":"YulIdentifier","src":"8540:43:10"},"nativeSrc":"8540:71:10","nodeType":"YulFunctionCall","src":"8540:71:10"},"nativeSrc":"8540:71:10","nodeType":"YulExpressionStatement","src":"8540:71:10"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"8396:222:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8466:9:10","nodeType":"YulTypedName","src":"8466:9:10","type":""},{"name":"value0","nativeSrc":"8478:6:10","nodeType":"YulTypedName","src":"8478:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8489:4:10","nodeType":"YulTypedName","src":"8489:4:10","type":""}],"src":"8396:222:10"},{"body":{"nativeSrc":"8713:28:10","nodeType":"YulBlock","src":"8713:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8730:1:10","nodeType":"YulLiteral","src":"8730:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"8733:1:10","nodeType":"YulLiteral","src":"8733:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8723:6:10","nodeType":"YulIdentifier","src":"8723:6:10"},"nativeSrc":"8723:12:10","nodeType":"YulFunctionCall","src":"8723:12:10"},"nativeSrc":"8723:12:10","nodeType":"YulExpressionStatement","src":"8723:12:10"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"8624:117:10","nodeType":"YulFunctionDefinition","src":"8624:117:10"},{"body":{"nativeSrc":"8836:28:10","nodeType":"YulBlock","src":"8836:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8853:1:10","nodeType":"YulLiteral","src":"8853:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"8856:1:10","nodeType":"YulLiteral","src":"8856:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8846:6:10","nodeType":"YulIdentifier","src":"8846:6:10"},"nativeSrc":"8846:12:10","nodeType":"YulFunctionCall","src":"8846:12:10"},"nativeSrc":"8846:12:10","nodeType":"YulExpressionStatement","src":"8846:12:10"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"8747:117:10","nodeType":"YulFunctionDefinition","src":"8747:117:10"},{"body":{"nativeSrc":"8898:152:10","nodeType":"YulBlock","src":"8898:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8915:1:10","nodeType":"YulLiteral","src":"8915:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"8918:77:10","nodeType":"YulLiteral","src":"8918:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"8908:6:10","nodeType":"YulIdentifier","src":"8908:6:10"},"nativeSrc":"8908:88:10","nodeType":"YulFunctionCall","src":"8908:88:10"},"nativeSrc":"8908:88:10","nodeType":"YulExpressionStatement","src":"8908:88:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9012:1:10","nodeType":"YulLiteral","src":"9012:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"9015:4:10","nodeType":"YulLiteral","src":"9015:4:10","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"9005:6:10","nodeType":"YulIdentifier","src":"9005:6:10"},"nativeSrc":"9005:15:10","nodeType":"YulFunctionCall","src":"9005:15:10"},"nativeSrc":"9005:15:10","nodeType":"YulExpressionStatement","src":"9005:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9036:1:10","nodeType":"YulLiteral","src":"9036:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"9039:4:10","nodeType":"YulLiteral","src":"9039:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9029:6:10","nodeType":"YulIdentifier","src":"9029:6:10"},"nativeSrc":"9029:15:10","nodeType":"YulFunctionCall","src":"9029:15:10"},"nativeSrc":"9029:15:10","nodeType":"YulExpressionStatement","src":"9029:15:10"}]},"name":"panic_error_0x41","nativeSrc":"8870:180:10","nodeType":"YulFunctionDefinition","src":"8870:180:10"},{"body":{"nativeSrc":"9099:238:10","nodeType":"YulBlock","src":"9099:238:10","statements":[{"nativeSrc":"9109:58:10","nodeType":"YulVariableDeclaration","src":"9109:58:10","value":{"arguments":[{"name":"memPtr","nativeSrc":"9131:6:10","nodeType":"YulIdentifier","src":"9131:6:10"},{"arguments":[{"name":"size","nativeSrc":"9161:4:10","nodeType":"YulIdentifier","src":"9161:4:10"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"9139:21:10","nodeType":"YulIdentifier","src":"9139:21:10"},"nativeSrc":"9139:27:10","nodeType":"YulFunctionCall","src":"9139:27:10"}],"functionName":{"name":"add","nativeSrc":"9127:3:10","nodeType":"YulIdentifier","src":"9127:3:10"},"nativeSrc":"9127:40:10","nodeType":"YulFunctionCall","src":"9127:40:10"},"variables":[{"name":"newFreePtr","nativeSrc":"9113:10:10","nodeType":"YulTypedName","src":"9113:10:10","type":""}]},{"body":{"nativeSrc":"9278:22:10","nodeType":"YulBlock","src":"9278:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"9280:16:10","nodeType":"YulIdentifier","src":"9280:16:10"},"nativeSrc":"9280:18:10","nodeType":"YulFunctionCall","src":"9280:18:10"},"nativeSrc":"9280:18:10","nodeType":"YulExpressionStatement","src":"9280:18:10"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"9221:10:10","nodeType":"YulIdentifier","src":"9221:10:10"},{"kind":"number","nativeSrc":"9233:18:10","nodeType":"YulLiteral","src":"9233:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9218:2:10","nodeType":"YulIdentifier","src":"9218:2:10"},"nativeSrc":"9218:34:10","nodeType":"YulFunctionCall","src":"9218:34:10"},{"arguments":[{"name":"newFreePtr","nativeSrc":"9257:10:10","nodeType":"YulIdentifier","src":"9257:10:10"},{"name":"memPtr","nativeSrc":"9269:6:10","nodeType":"YulIdentifier","src":"9269:6:10"}],"functionName":{"name":"lt","nativeSrc":"9254:2:10","nodeType":"YulIdentifier","src":"9254:2:10"},"nativeSrc":"9254:22:10","nodeType":"YulFunctionCall","src":"9254:22:10"}],"functionName":{"name":"or","nativeSrc":"9215:2:10","nodeType":"YulIdentifier","src":"9215:2:10"},"nativeSrc":"9215:62:10","nodeType":"YulFunctionCall","src":"9215:62:10"},"nativeSrc":"9212:88:10","nodeType":"YulIf","src":"9212:88:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9316:2:10","nodeType":"YulLiteral","src":"9316:2:10","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"9320:10:10","nodeType":"YulIdentifier","src":"9320:10:10"}],"functionName":{"name":"mstore","nativeSrc":"9309:6:10","nodeType":"YulIdentifier","src":"9309:6:10"},"nativeSrc":"9309:22:10","nodeType":"YulFunctionCall","src":"9309:22:10"},"nativeSrc":"9309:22:10","nodeType":"YulExpressionStatement","src":"9309:22:10"}]},"name":"finalize_allocation","nativeSrc":"9056:281:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"9085:6:10","nodeType":"YulTypedName","src":"9085:6:10","type":""},{"name":"size","nativeSrc":"9093:4:10","nodeType":"YulTypedName","src":"9093:4:10","type":""}],"src":"9056:281:10"},{"body":{"nativeSrc":"9384:88:10","nodeType":"YulBlock","src":"9384:88:10","statements":[{"nativeSrc":"9394:30:10","nodeType":"YulAssignment","src":"9394:30:10","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"9404:18:10","nodeType":"YulIdentifier","src":"9404:18:10"},"nativeSrc":"9404:20:10","nodeType":"YulFunctionCall","src":"9404:20:10"},"variableNames":[{"name":"memPtr","nativeSrc":"9394:6:10","nodeType":"YulIdentifier","src":"9394:6:10"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"9453:6:10","nodeType":"YulIdentifier","src":"9453:6:10"},{"name":"size","nativeSrc":"9461:4:10","nodeType":"YulIdentifier","src":"9461:4:10"}],"functionName":{"name":"finalize_allocation","nativeSrc":"9433:19:10","nodeType":"YulIdentifier","src":"9433:19:10"},"nativeSrc":"9433:33:10","nodeType":"YulFunctionCall","src":"9433:33:10"},"nativeSrc":"9433:33:10","nodeType":"YulExpressionStatement","src":"9433:33:10"}]},"name":"allocate_memory","nativeSrc":"9343:129:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"9368:4:10","nodeType":"YulTypedName","src":"9368:4:10","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"9377:6:10","nodeType":"YulTypedName","src":"9377:6:10","type":""}],"src":"9343:129:10"},{"body":{"nativeSrc":"9545:241:10","nodeType":"YulBlock","src":"9545:241:10","statements":[{"body":{"nativeSrc":"9650:22:10","nodeType":"YulBlock","src":"9650:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"9652:16:10","nodeType":"YulIdentifier","src":"9652:16:10"},"nativeSrc":"9652:18:10","nodeType":"YulFunctionCall","src":"9652:18:10"},"nativeSrc":"9652:18:10","nodeType":"YulExpressionStatement","src":"9652:18:10"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"9622:6:10","nodeType":"YulIdentifier","src":"9622:6:10"},{"kind":"number","nativeSrc":"9630:18:10","nodeType":"YulLiteral","src":"9630:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9619:2:10","nodeType":"YulIdentifier","src":"9619:2:10"},"nativeSrc":"9619:30:10","nodeType":"YulFunctionCall","src":"9619:30:10"},"nativeSrc":"9616:56:10","nodeType":"YulIf","src":"9616:56:10"},{"nativeSrc":"9682:37:10","nodeType":"YulAssignment","src":"9682:37:10","value":{"arguments":[{"name":"length","nativeSrc":"9712:6:10","nodeType":"YulIdentifier","src":"9712:6:10"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"9690:21:10","nodeType":"YulIdentifier","src":"9690:21:10"},"nativeSrc":"9690:29:10","nodeType":"YulFunctionCall","src":"9690:29:10"},"variableNames":[{"name":"size","nativeSrc":"9682:4:10","nodeType":"YulIdentifier","src":"9682:4:10"}]},{"nativeSrc":"9756:23:10","nodeType":"YulAssignment","src":"9756:23:10","value":{"arguments":[{"name":"size","nativeSrc":"9768:4:10","nodeType":"YulIdentifier","src":"9768:4:10"},{"kind":"number","nativeSrc":"9774:4:10","nodeType":"YulLiteral","src":"9774:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9764:3:10","nodeType":"YulIdentifier","src":"9764:3:10"},"nativeSrc":"9764:15:10","nodeType":"YulFunctionCall","src":"9764:15:10"},"variableNames":[{"name":"size","nativeSrc":"9756:4:10","nodeType":"YulIdentifier","src":"9756:4:10"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"9478:308:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"9529:6:10","nodeType":"YulTypedName","src":"9529:6:10","type":""}],"returnVariables":[{"name":"size","nativeSrc":"9540:4:10","nodeType":"YulTypedName","src":"9540:4:10","type":""}],"src":"9478:308:10"},{"body":{"nativeSrc":"9856:82:10","nodeType":"YulBlock","src":"9856:82:10","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"9879:3:10","nodeType":"YulIdentifier","src":"9879:3:10"},{"name":"src","nativeSrc":"9884:3:10","nodeType":"YulIdentifier","src":"9884:3:10"},{"name":"length","nativeSrc":"9889:6:10","nodeType":"YulIdentifier","src":"9889:6:10"}],"functionName":{"name":"calldatacopy","nativeSrc":"9866:12:10","nodeType":"YulIdentifier","src":"9866:12:10"},"nativeSrc":"9866:30:10","nodeType":"YulFunctionCall","src":"9866:30:10"},"nativeSrc":"9866:30:10","nodeType":"YulExpressionStatement","src":"9866:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"9916:3:10","nodeType":"YulIdentifier","src":"9916:3:10"},{"name":"length","nativeSrc":"9921:6:10","nodeType":"YulIdentifier","src":"9921:6:10"}],"functionName":{"name":"add","nativeSrc":"9912:3:10","nodeType":"YulIdentifier","src":"9912:3:10"},"nativeSrc":"9912:16:10","nodeType":"YulFunctionCall","src":"9912:16:10"},{"kind":"number","nativeSrc":"9930:1:10","nodeType":"YulLiteral","src":"9930:1:10","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"9905:6:10","nodeType":"YulIdentifier","src":"9905:6:10"},"nativeSrc":"9905:27:10","nodeType":"YulFunctionCall","src":"9905:27:10"},"nativeSrc":"9905:27:10","nodeType":"YulExpressionStatement","src":"9905:27:10"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"9792:146:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"9838:3:10","nodeType":"YulTypedName","src":"9838:3:10","type":""},{"name":"dst","nativeSrc":"9843:3:10","nodeType":"YulTypedName","src":"9843:3:10","type":""},{"name":"length","nativeSrc":"9848:6:10","nodeType":"YulTypedName","src":"9848:6:10","type":""}],"src":"9792:146:10"},{"body":{"nativeSrc":"10028:341:10","nodeType":"YulBlock","src":"10028:341:10","statements":[{"nativeSrc":"10038:75:10","nodeType":"YulAssignment","src":"10038:75:10","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"10105:6:10","nodeType":"YulIdentifier","src":"10105:6:10"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"10063:41:10","nodeType":"YulIdentifier","src":"10063:41:10"},"nativeSrc":"10063:49:10","nodeType":"YulFunctionCall","src":"10063:49:10"}],"functionName":{"name":"allocate_memory","nativeSrc":"10047:15:10","nodeType":"YulIdentifier","src":"10047:15:10"},"nativeSrc":"10047:66:10","nodeType":"YulFunctionCall","src":"10047:66:10"},"variableNames":[{"name":"array","nativeSrc":"10038:5:10","nodeType":"YulIdentifier","src":"10038:5:10"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"10129:5:10","nodeType":"YulIdentifier","src":"10129:5:10"},{"name":"length","nativeSrc":"10136:6:10","nodeType":"YulIdentifier","src":"10136:6:10"}],"functionName":{"name":"mstore","nativeSrc":"10122:6:10","nodeType":"YulIdentifier","src":"10122:6:10"},"nativeSrc":"10122:21:10","nodeType":"YulFunctionCall","src":"10122:21:10"},"nativeSrc":"10122:21:10","nodeType":"YulExpressionStatement","src":"10122:21:10"},{"nativeSrc":"10152:27:10","nodeType":"YulVariableDeclaration","src":"10152:27:10","value":{"arguments":[{"name":"array","nativeSrc":"10167:5:10","nodeType":"YulIdentifier","src":"10167:5:10"},{"kind":"number","nativeSrc":"10174:4:10","nodeType":"YulLiteral","src":"10174:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10163:3:10","nodeType":"YulIdentifier","src":"10163:3:10"},"nativeSrc":"10163:16:10","nodeType":"YulFunctionCall","src":"10163:16:10"},"variables":[{"name":"dst","nativeSrc":"10156:3:10","nodeType":"YulTypedName","src":"10156:3:10","type":""}]},{"body":{"nativeSrc":"10217:83:10","nodeType":"YulBlock","src":"10217:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"10219:77:10","nodeType":"YulIdentifier","src":"10219:77:10"},"nativeSrc":"10219:79:10","nodeType":"YulFunctionCall","src":"10219:79:10"},"nativeSrc":"10219:79:10","nodeType":"YulExpressionStatement","src":"10219:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"10198:3:10","nodeType":"YulIdentifier","src":"10198:3:10"},{"name":"length","nativeSrc":"10203:6:10","nodeType":"YulIdentifier","src":"10203:6:10"}],"functionName":{"name":"add","nativeSrc":"10194:3:10","nodeType":"YulIdentifier","src":"10194:3:10"},"nativeSrc":"10194:16:10","nodeType":"YulFunctionCall","src":"10194:16:10"},{"name":"end","nativeSrc":"10212:3:10","nodeType":"YulIdentifier","src":"10212:3:10"}],"functionName":{"name":"gt","nativeSrc":"10191:2:10","nodeType":"YulIdentifier","src":"10191:2:10"},"nativeSrc":"10191:25:10","nodeType":"YulFunctionCall","src":"10191:25:10"},"nativeSrc":"10188:112:10","nodeType":"YulIf","src":"10188:112:10"},{"expression":{"arguments":[{"name":"src","nativeSrc":"10346:3:10","nodeType":"YulIdentifier","src":"10346:3:10"},{"name":"dst","nativeSrc":"10351:3:10","nodeType":"YulIdentifier","src":"10351:3:10"},{"name":"length","nativeSrc":"10356:6:10","nodeType":"YulIdentifier","src":"10356:6:10"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"10309:36:10","nodeType":"YulIdentifier","src":"10309:36:10"},"nativeSrc":"10309:54:10","nodeType":"YulFunctionCall","src":"10309:54:10"},"nativeSrc":"10309:54:10","nodeType":"YulExpressionStatement","src":"10309:54:10"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"9944:425:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"10001:3:10","nodeType":"YulTypedName","src":"10001:3:10","type":""},{"name":"length","nativeSrc":"10006:6:10","nodeType":"YulTypedName","src":"10006:6:10","type":""},{"name":"end","nativeSrc":"10014:3:10","nodeType":"YulTypedName","src":"10014:3:10","type":""}],"returnVariables":[{"name":"array","nativeSrc":"10022:5:10","nodeType":"YulTypedName","src":"10022:5:10","type":""}],"src":"9944:425:10"},{"body":{"nativeSrc":"10451:278:10","nodeType":"YulBlock","src":"10451:278:10","statements":[{"body":{"nativeSrc":"10500:83:10","nodeType":"YulBlock","src":"10500:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"10502:77:10","nodeType":"YulIdentifier","src":"10502:77:10"},"nativeSrc":"10502:79:10","nodeType":"YulFunctionCall","src":"10502:79:10"},"nativeSrc":"10502:79:10","nodeType":"YulExpressionStatement","src":"10502:79:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"10479:6:10","nodeType":"YulIdentifier","src":"10479:6:10"},{"kind":"number","nativeSrc":"10487:4:10","nodeType":"YulLiteral","src":"10487:4:10","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"10475:3:10","nodeType":"YulIdentifier","src":"10475:3:10"},"nativeSrc":"10475:17:10","nodeType":"YulFunctionCall","src":"10475:17:10"},{"name":"end","nativeSrc":"10494:3:10","nodeType":"YulIdentifier","src":"10494:3:10"}],"functionName":{"name":"slt","nativeSrc":"10471:3:10","nodeType":"YulIdentifier","src":"10471:3:10"},"nativeSrc":"10471:27:10","nodeType":"YulFunctionCall","src":"10471:27:10"}],"functionName":{"name":"iszero","nativeSrc":"10464:6:10","nodeType":"YulIdentifier","src":"10464:6:10"},"nativeSrc":"10464:35:10","nodeType":"YulFunctionCall","src":"10464:35:10"},"nativeSrc":"10461:122:10","nodeType":"YulIf","src":"10461:122:10"},{"nativeSrc":"10592:34:10","nodeType":"YulVariableDeclaration","src":"10592:34:10","value":{"arguments":[{"name":"offset","nativeSrc":"10619:6:10","nodeType":"YulIdentifier","src":"10619:6:10"}],"functionName":{"name":"calldataload","nativeSrc":"10606:12:10","nodeType":"YulIdentifier","src":"10606:12:10"},"nativeSrc":"10606:20:10","nodeType":"YulFunctionCall","src":"10606:20:10"},"variables":[{"name":"length","nativeSrc":"10596:6:10","nodeType":"YulTypedName","src":"10596:6:10","type":""}]},{"nativeSrc":"10635:88:10","nodeType":"YulAssignment","src":"10635:88:10","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"10696:6:10","nodeType":"YulIdentifier","src":"10696:6:10"},{"kind":"number","nativeSrc":"10704:4:10","nodeType":"YulLiteral","src":"10704:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10692:3:10","nodeType":"YulIdentifier","src":"10692:3:10"},"nativeSrc":"10692:17:10","nodeType":"YulFunctionCall","src":"10692:17:10"},{"name":"length","nativeSrc":"10711:6:10","nodeType":"YulIdentifier","src":"10711:6:10"},{"name":"end","nativeSrc":"10719:3:10","nodeType":"YulIdentifier","src":"10719:3:10"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"10644:47:10","nodeType":"YulIdentifier","src":"10644:47:10"},"nativeSrc":"10644:79:10","nodeType":"YulFunctionCall","src":"10644:79:10"},"variableNames":[{"name":"array","nativeSrc":"10635:5:10","nodeType":"YulIdentifier","src":"10635:5:10"}]}]},"name":"abi_decode_t_string_memory_ptr","nativeSrc":"10389:340:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"10429:6:10","nodeType":"YulTypedName","src":"10429:6:10","type":""},{"name":"end","nativeSrc":"10437:3:10","nodeType":"YulTypedName","src":"10437:3:10","type":""}],"returnVariables":[{"name":"array","nativeSrc":"10445:5:10","nodeType":"YulTypedName","src":"10445:5:10","type":""}],"src":"10389:340:10"},{"body":{"nativeSrc":"10778:79:10","nodeType":"YulBlock","src":"10778:79:10","statements":[{"body":{"nativeSrc":"10835:16:10","nodeType":"YulBlock","src":"10835:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10844:1:10","nodeType":"YulLiteral","src":"10844:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"10847:1:10","nodeType":"YulLiteral","src":"10847:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10837:6:10","nodeType":"YulIdentifier","src":"10837:6:10"},"nativeSrc":"10837:12:10","nodeType":"YulFunctionCall","src":"10837:12:10"},"nativeSrc":"10837:12:10","nodeType":"YulExpressionStatement","src":"10837:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"10801:5:10","nodeType":"YulIdentifier","src":"10801:5:10"},{"arguments":[{"name":"value","nativeSrc":"10826:5:10","nodeType":"YulIdentifier","src":"10826:5:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10808:17:10","nodeType":"YulIdentifier","src":"10808:17:10"},"nativeSrc":"10808:24:10","nodeType":"YulFunctionCall","src":"10808:24:10"}],"functionName":{"name":"eq","nativeSrc":"10798:2:10","nodeType":"YulIdentifier","src":"10798:2:10"},"nativeSrc":"10798:35:10","nodeType":"YulFunctionCall","src":"10798:35:10"}],"functionName":{"name":"iszero","nativeSrc":"10791:6:10","nodeType":"YulIdentifier","src":"10791:6:10"},"nativeSrc":"10791:43:10","nodeType":"YulFunctionCall","src":"10791:43:10"},"nativeSrc":"10788:63:10","nodeType":"YulIf","src":"10788:63:10"}]},"name":"validator_revert_t_uint256","nativeSrc":"10735:122:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10771:5:10","nodeType":"YulTypedName","src":"10771:5:10","type":""}],"src":"10735:122:10"},{"body":{"nativeSrc":"10915:87:10","nodeType":"YulBlock","src":"10915:87:10","statements":[{"nativeSrc":"10925:29:10","nodeType":"YulAssignment","src":"10925:29:10","value":{"arguments":[{"name":"offset","nativeSrc":"10947:6:10","nodeType":"YulIdentifier","src":"10947:6:10"}],"functionName":{"name":"calldataload","nativeSrc":"10934:12:10","nodeType":"YulIdentifier","src":"10934:12:10"},"nativeSrc":"10934:20:10","nodeType":"YulFunctionCall","src":"10934:20:10"},"variableNames":[{"name":"value","nativeSrc":"10925:5:10","nodeType":"YulIdentifier","src":"10925:5:10"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"10990:5:10","nodeType":"YulIdentifier","src":"10990:5:10"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"10963:26:10","nodeType":"YulIdentifier","src":"10963:26:10"},"nativeSrc":"10963:33:10","nodeType":"YulFunctionCall","src":"10963:33:10"},"nativeSrc":"10963:33:10","nodeType":"YulExpressionStatement","src":"10963:33:10"}]},"name":"abi_decode_t_uint256","nativeSrc":"10863:139:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"10893:6:10","nodeType":"YulTypedName","src":"10893:6:10","type":""},{"name":"end","nativeSrc":"10901:3:10","nodeType":"YulTypedName","src":"10901:3:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"10909:5:10","nodeType":"YulTypedName","src":"10909:5:10","type":""}],"src":"10863:139:10"},{"body":{"nativeSrc":"11118:689:10","nodeType":"YulBlock","src":"11118:689:10","statements":[{"body":{"nativeSrc":"11164:83:10","nodeType":"YulBlock","src":"11164:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"11166:77:10","nodeType":"YulIdentifier","src":"11166:77:10"},"nativeSrc":"11166:79:10","nodeType":"YulFunctionCall","src":"11166:79:10"},"nativeSrc":"11166:79:10","nodeType":"YulExpressionStatement","src":"11166:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11139:7:10","nodeType":"YulIdentifier","src":"11139:7:10"},{"name":"headStart","nativeSrc":"11148:9:10","nodeType":"YulIdentifier","src":"11148:9:10"}],"functionName":{"name":"sub","nativeSrc":"11135:3:10","nodeType":"YulIdentifier","src":"11135:3:10"},"nativeSrc":"11135:23:10","nodeType":"YulFunctionCall","src":"11135:23:10"},{"kind":"number","nativeSrc":"11160:2:10","nodeType":"YulLiteral","src":"11160:2:10","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"11131:3:10","nodeType":"YulIdentifier","src":"11131:3:10"},"nativeSrc":"11131:32:10","nodeType":"YulFunctionCall","src":"11131:32:10"},"nativeSrc":"11128:119:10","nodeType":"YulIf","src":"11128:119:10"},{"nativeSrc":"11257:117:10","nodeType":"YulBlock","src":"11257:117:10","statements":[{"nativeSrc":"11272:15:10","nodeType":"YulVariableDeclaration","src":"11272:15:10","value":{"kind":"number","nativeSrc":"11286:1:10","nodeType":"YulLiteral","src":"11286:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"11276:6:10","nodeType":"YulTypedName","src":"11276:6:10","type":""}]},{"nativeSrc":"11301:63:10","nodeType":"YulAssignment","src":"11301:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11336:9:10","nodeType":"YulIdentifier","src":"11336:9:10"},{"name":"offset","nativeSrc":"11347:6:10","nodeType":"YulIdentifier","src":"11347:6:10"}],"functionName":{"name":"add","nativeSrc":"11332:3:10","nodeType":"YulIdentifier","src":"11332:3:10"},"nativeSrc":"11332:22:10","nodeType":"YulFunctionCall","src":"11332:22:10"},{"name":"dataEnd","nativeSrc":"11356:7:10","nodeType":"YulIdentifier","src":"11356:7:10"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11311:20:10","nodeType":"YulIdentifier","src":"11311:20:10"},"nativeSrc":"11311:53:10","nodeType":"YulFunctionCall","src":"11311:53:10"},"variableNames":[{"name":"value0","nativeSrc":"11301:6:10","nodeType":"YulIdentifier","src":"11301:6:10"}]}]},{"nativeSrc":"11384:288:10","nodeType":"YulBlock","src":"11384:288:10","statements":[{"nativeSrc":"11399:46:10","nodeType":"YulVariableDeclaration","src":"11399:46:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11430:9:10","nodeType":"YulIdentifier","src":"11430:9:10"},{"kind":"number","nativeSrc":"11441:2:10","nodeType":"YulLiteral","src":"11441:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11426:3:10","nodeType":"YulIdentifier","src":"11426:3:10"},"nativeSrc":"11426:18:10","nodeType":"YulFunctionCall","src":"11426:18:10"}],"functionName":{"name":"calldataload","nativeSrc":"11413:12:10","nodeType":"YulIdentifier","src":"11413:12:10"},"nativeSrc":"11413:32:10","nodeType":"YulFunctionCall","src":"11413:32:10"},"variables":[{"name":"offset","nativeSrc":"11403:6:10","nodeType":"YulTypedName","src":"11403:6:10","type":""}]},{"body":{"nativeSrc":"11492:83:10","nodeType":"YulBlock","src":"11492:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"11494:77:10","nodeType":"YulIdentifier","src":"11494:77:10"},"nativeSrc":"11494:79:10","nodeType":"YulFunctionCall","src":"11494:79:10"},"nativeSrc":"11494:79:10","nodeType":"YulExpressionStatement","src":"11494:79:10"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"11464:6:10","nodeType":"YulIdentifier","src":"11464:6:10"},{"kind":"number","nativeSrc":"11472:18:10","nodeType":"YulLiteral","src":"11472:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"11461:2:10","nodeType":"YulIdentifier","src":"11461:2:10"},"nativeSrc":"11461:30:10","nodeType":"YulFunctionCall","src":"11461:30:10"},"nativeSrc":"11458:117:10","nodeType":"YulIf","src":"11458:117:10"},{"nativeSrc":"11589:73:10","nodeType":"YulAssignment","src":"11589:73:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11634:9:10","nodeType":"YulIdentifier","src":"11634:9:10"},{"name":"offset","nativeSrc":"11645:6:10","nodeType":"YulIdentifier","src":"11645:6:10"}],"functionName":{"name":"add","nativeSrc":"11630:3:10","nodeType":"YulIdentifier","src":"11630:3:10"},"nativeSrc":"11630:22:10","nodeType":"YulFunctionCall","src":"11630:22:10"},{"name":"dataEnd","nativeSrc":"11654:7:10","nodeType":"YulIdentifier","src":"11654:7:10"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"11599:30:10","nodeType":"YulIdentifier","src":"11599:30:10"},"nativeSrc":"11599:63:10","nodeType":"YulFunctionCall","src":"11599:63:10"},"variableNames":[{"name":"value1","nativeSrc":"11589:6:10","nodeType":"YulIdentifier","src":"11589:6:10"}]}]},{"nativeSrc":"11682:118:10","nodeType":"YulBlock","src":"11682:118:10","statements":[{"nativeSrc":"11697:16:10","nodeType":"YulVariableDeclaration","src":"11697:16:10","value":{"kind":"number","nativeSrc":"11711:2:10","nodeType":"YulLiteral","src":"11711:2:10","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"11701:6:10","nodeType":"YulTypedName","src":"11701:6:10","type":""}]},{"nativeSrc":"11727:63:10","nodeType":"YulAssignment","src":"11727:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11762:9:10","nodeType":"YulIdentifier","src":"11762:9:10"},{"name":"offset","nativeSrc":"11773:6:10","nodeType":"YulIdentifier","src":"11773:6:10"}],"functionName":{"name":"add","nativeSrc":"11758:3:10","nodeType":"YulIdentifier","src":"11758:3:10"},"nativeSrc":"11758:22:10","nodeType":"YulFunctionCall","src":"11758:22:10"},{"name":"dataEnd","nativeSrc":"11782:7:10","nodeType":"YulIdentifier","src":"11782:7:10"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"11737:20:10","nodeType":"YulIdentifier","src":"11737:20:10"},"nativeSrc":"11737:53:10","nodeType":"YulFunctionCall","src":"11737:53:10"},"variableNames":[{"name":"value2","nativeSrc":"11727:6:10","nodeType":"YulIdentifier","src":"11727:6:10"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptrt_uint256","nativeSrc":"11008:799:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11072:9:10","nodeType":"YulTypedName","src":"11072:9:10","type":""},{"name":"dataEnd","nativeSrc":"11083:7:10","nodeType":"YulTypedName","src":"11083:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11095:6:10","nodeType":"YulTypedName","src":"11095:6:10","type":""},{"name":"value1","nativeSrc":"11103:6:10","nodeType":"YulTypedName","src":"11103:6:10","type":""},{"name":"value2","nativeSrc":"11111:6:10","nodeType":"YulTypedName","src":"11111:6:10","type":""}],"src":"11008:799:10"},{"body":{"nativeSrc":"11845:28:10","nodeType":"YulBlock","src":"11845:28:10","statements":[{"nativeSrc":"11855:12:10","nodeType":"YulAssignment","src":"11855:12:10","value":{"name":"value","nativeSrc":"11862:5:10","nodeType":"YulIdentifier","src":"11862:5:10"},"variableNames":[{"name":"ret","nativeSrc":"11855:3:10","nodeType":"YulIdentifier","src":"11855:3:10"}]}]},"name":"identity","nativeSrc":"11813:60:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11831:5:10","nodeType":"YulTypedName","src":"11831:5:10","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"11841:3:10","nodeType":"YulTypedName","src":"11841:3:10","type":""}],"src":"11813:60:10"},{"body":{"nativeSrc":"11939:82:10","nodeType":"YulBlock","src":"11939:82:10","statements":[{"nativeSrc":"11949:66:10","nodeType":"YulAssignment","src":"11949:66:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"12007:5:10","nodeType":"YulIdentifier","src":"12007:5:10"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"11989:17:10","nodeType":"YulIdentifier","src":"11989:17:10"},"nativeSrc":"11989:24:10","nodeType":"YulFunctionCall","src":"11989:24:10"}],"functionName":{"name":"identity","nativeSrc":"11980:8:10","nodeType":"YulIdentifier","src":"11980:8:10"},"nativeSrc":"11980:34:10","nodeType":"YulFunctionCall","src":"11980:34:10"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"11962:17:10","nodeType":"YulIdentifier","src":"11962:17:10"},"nativeSrc":"11962:53:10","nodeType":"YulFunctionCall","src":"11962:53:10"},"variableNames":[{"name":"converted","nativeSrc":"11949:9:10","nodeType":"YulIdentifier","src":"11949:9:10"}]}]},"name":"convert_t_uint160_to_t_uint160","nativeSrc":"11879:142:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11919:5:10","nodeType":"YulTypedName","src":"11919:5:10","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"11929:9:10","nodeType":"YulTypedName","src":"11929:9:10","type":""}],"src":"11879:142:10"},{"body":{"nativeSrc":"12087:66:10","nodeType":"YulBlock","src":"12087:66:10","statements":[{"nativeSrc":"12097:50:10","nodeType":"YulAssignment","src":"12097:50:10","value":{"arguments":[{"name":"value","nativeSrc":"12141:5:10","nodeType":"YulIdentifier","src":"12141:5:10"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nativeSrc":"12110:30:10","nodeType":"YulIdentifier","src":"12110:30:10"},"nativeSrc":"12110:37:10","nodeType":"YulFunctionCall","src":"12110:37:10"},"variableNames":[{"name":"converted","nativeSrc":"12097:9:10","nodeType":"YulIdentifier","src":"12097:9:10"}]}]},"name":"convert_t_uint160_to_t_address","nativeSrc":"12027:126:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12067:5:10","nodeType":"YulTypedName","src":"12067:5:10","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"12077:9:10","nodeType":"YulTypedName","src":"12077:9:10","type":""}],"src":"12027:126:10"},{"body":{"nativeSrc":"12230:66:10","nodeType":"YulBlock","src":"12230:66:10","statements":[{"nativeSrc":"12240:50:10","nodeType":"YulAssignment","src":"12240:50:10","value":{"arguments":[{"name":"value","nativeSrc":"12284:5:10","nodeType":"YulIdentifier","src":"12284:5:10"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"12253:30:10","nodeType":"YulIdentifier","src":"12253:30:10"},"nativeSrc":"12253:37:10","nodeType":"YulFunctionCall","src":"12253:37:10"},"variableNames":[{"name":"converted","nativeSrc":"12240:9:10","nodeType":"YulIdentifier","src":"12240:9:10"}]}]},"name":"convert_t_contract$_ISP_$495_to_t_address","nativeSrc":"12159:137:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12210:5:10","nodeType":"YulTypedName","src":"12210:5:10","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"12220:9:10","nodeType":"YulTypedName","src":"12220:9:10","type":""}],"src":"12159:137:10"},{"body":{"nativeSrc":"12378:77:10","nodeType":"YulBlock","src":"12378:77:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"12395:3:10","nodeType":"YulIdentifier","src":"12395:3:10"},{"arguments":[{"name":"value","nativeSrc":"12442:5:10","nodeType":"YulIdentifier","src":"12442:5:10"}],"functionName":{"name":"convert_t_contract$_ISP_$495_to_t_address","nativeSrc":"12400:41:10","nodeType":"YulIdentifier","src":"12400:41:10"},"nativeSrc":"12400:48:10","nodeType":"YulFunctionCall","src":"12400:48:10"}],"functionName":{"name":"mstore","nativeSrc":"12388:6:10","nodeType":"YulIdentifier","src":"12388:6:10"},"nativeSrc":"12388:61:10","nodeType":"YulFunctionCall","src":"12388:61:10"},"nativeSrc":"12388:61:10","nodeType":"YulExpressionStatement","src":"12388:61:10"}]},"name":"abi_encode_t_contract$_ISP_$495_to_t_address_fromStack","nativeSrc":"12302:153:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12366:5:10","nodeType":"YulTypedName","src":"12366:5:10","type":""},{"name":"pos","nativeSrc":"12373:3:10","nodeType":"YulTypedName","src":"12373:3:10","type":""}],"src":"12302:153:10"},{"body":{"nativeSrc":"12570:135:10","nodeType":"YulBlock","src":"12570:135:10","statements":[{"nativeSrc":"12580:26:10","nodeType":"YulAssignment","src":"12580:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"12592:9:10","nodeType":"YulIdentifier","src":"12592:9:10"},{"kind":"number","nativeSrc":"12603:2:10","nodeType":"YulLiteral","src":"12603:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12588:3:10","nodeType":"YulIdentifier","src":"12588:3:10"},"nativeSrc":"12588:18:10","nodeType":"YulFunctionCall","src":"12588:18:10"},"variableNames":[{"name":"tail","nativeSrc":"12580:4:10","nodeType":"YulIdentifier","src":"12580:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12671:6:10","nodeType":"YulIdentifier","src":"12671:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"12684:9:10","nodeType":"YulIdentifier","src":"12684:9:10"},{"kind":"number","nativeSrc":"12695:1:10","nodeType":"YulLiteral","src":"12695:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12680:3:10","nodeType":"YulIdentifier","src":"12680:3:10"},"nativeSrc":"12680:17:10","nodeType":"YulFunctionCall","src":"12680:17:10"}],"functionName":{"name":"abi_encode_t_contract$_ISP_$495_to_t_address_fromStack","nativeSrc":"12616:54:10","nodeType":"YulIdentifier","src":"12616:54:10"},"nativeSrc":"12616:82:10","nodeType":"YulFunctionCall","src":"12616:82:10"},"nativeSrc":"12616:82:10","nodeType":"YulExpressionStatement","src":"12616:82:10"}]},"name":"abi_encode_tuple_t_contract$_ISP_$495__to_t_address__fromStack_reversed","nativeSrc":"12461:244:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12542:9:10","nodeType":"YulTypedName","src":"12542:9:10","type":""},{"name":"value0","nativeSrc":"12554:6:10","nodeType":"YulTypedName","src":"12554:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12565:4:10","nodeType":"YulTypedName","src":"12565:4:10","type":""}],"src":"12461:244:10"},{"body":{"nativeSrc":"12739:152:10","nodeType":"YulBlock","src":"12739:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12756:1:10","nodeType":"YulLiteral","src":"12756:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"12759:77:10","nodeType":"YulLiteral","src":"12759:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"12749:6:10","nodeType":"YulIdentifier","src":"12749:6:10"},"nativeSrc":"12749:88:10","nodeType":"YulFunctionCall","src":"12749:88:10"},"nativeSrc":"12749:88:10","nodeType":"YulExpressionStatement","src":"12749:88:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12853:1:10","nodeType":"YulLiteral","src":"12853:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"12856:4:10","nodeType":"YulLiteral","src":"12856:4:10","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"12846:6:10","nodeType":"YulIdentifier","src":"12846:6:10"},"nativeSrc":"12846:15:10","nodeType":"YulFunctionCall","src":"12846:15:10"},"nativeSrc":"12846:15:10","nodeType":"YulExpressionStatement","src":"12846:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12877:1:10","nodeType":"YulLiteral","src":"12877:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"12880:4:10","nodeType":"YulLiteral","src":"12880:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"12870:6:10","nodeType":"YulIdentifier","src":"12870:6:10"},"nativeSrc":"12870:15:10","nodeType":"YulFunctionCall","src":"12870:15:10"},"nativeSrc":"12870:15:10","nodeType":"YulExpressionStatement","src":"12870:15:10"}]},"name":"panic_error_0x22","nativeSrc":"12711:180:10","nodeType":"YulFunctionDefinition","src":"12711:180:10"},{"body":{"nativeSrc":"12948:269:10","nodeType":"YulBlock","src":"12948:269:10","statements":[{"nativeSrc":"12958:22:10","nodeType":"YulAssignment","src":"12958:22:10","value":{"arguments":[{"name":"data","nativeSrc":"12972:4:10","nodeType":"YulIdentifier","src":"12972:4:10"},{"kind":"number","nativeSrc":"12978:1:10","nodeType":"YulLiteral","src":"12978:1:10","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"12968:3:10","nodeType":"YulIdentifier","src":"12968:3:10"},"nativeSrc":"12968:12:10","nodeType":"YulFunctionCall","src":"12968:12:10"},"variableNames":[{"name":"length","nativeSrc":"12958:6:10","nodeType":"YulIdentifier","src":"12958:6:10"}]},{"nativeSrc":"12989:38:10","nodeType":"YulVariableDeclaration","src":"12989:38:10","value":{"arguments":[{"name":"data","nativeSrc":"13019:4:10","nodeType":"YulIdentifier","src":"13019:4:10"},{"kind":"number","nativeSrc":"13025:1:10","nodeType":"YulLiteral","src":"13025:1:10","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"13015:3:10","nodeType":"YulIdentifier","src":"13015:3:10"},"nativeSrc":"13015:12:10","nodeType":"YulFunctionCall","src":"13015:12:10"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"12993:18:10","nodeType":"YulTypedName","src":"12993:18:10","type":""}]},{"body":{"nativeSrc":"13066:51:10","nodeType":"YulBlock","src":"13066:51:10","statements":[{"nativeSrc":"13080:27:10","nodeType":"YulAssignment","src":"13080:27:10","value":{"arguments":[{"name":"length","nativeSrc":"13094:6:10","nodeType":"YulIdentifier","src":"13094:6:10"},{"kind":"number","nativeSrc":"13102:4:10","nodeType":"YulLiteral","src":"13102:4:10","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"13090:3:10","nodeType":"YulIdentifier","src":"13090:3:10"},"nativeSrc":"13090:17:10","nodeType":"YulFunctionCall","src":"13090:17:10"},"variableNames":[{"name":"length","nativeSrc":"13080:6:10","nodeType":"YulIdentifier","src":"13080:6:10"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"13046:18:10","nodeType":"YulIdentifier","src":"13046:18:10"}],"functionName":{"name":"iszero","nativeSrc":"13039:6:10","nodeType":"YulIdentifier","src":"13039:6:10"},"nativeSrc":"13039:26:10","nodeType":"YulFunctionCall","src":"13039:26:10"},"nativeSrc":"13036:81:10","nodeType":"YulIf","src":"13036:81:10"},{"body":{"nativeSrc":"13169:42:10","nodeType":"YulBlock","src":"13169:42:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"13183:16:10","nodeType":"YulIdentifier","src":"13183:16:10"},"nativeSrc":"13183:18:10","nodeType":"YulFunctionCall","src":"13183:18:10"},"nativeSrc":"13183:18:10","nodeType":"YulExpressionStatement","src":"13183:18:10"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"13133:18:10","nodeType":"YulIdentifier","src":"13133:18:10"},{"arguments":[{"name":"length","nativeSrc":"13156:6:10","nodeType":"YulIdentifier","src":"13156:6:10"},{"kind":"number","nativeSrc":"13164:2:10","nodeType":"YulLiteral","src":"13164:2:10","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"13153:2:10","nodeType":"YulIdentifier","src":"13153:2:10"},"nativeSrc":"13153:14:10","nodeType":"YulFunctionCall","src":"13153:14:10"}],"functionName":{"name":"eq","nativeSrc":"13130:2:10","nodeType":"YulIdentifier","src":"13130:2:10"},"nativeSrc":"13130:38:10","nodeType":"YulFunctionCall","src":"13130:38:10"},"nativeSrc":"13127:84:10","nodeType":"YulIf","src":"13127:84:10"}]},"name":"extract_byte_array_length","nativeSrc":"12897:320:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"12932:4:10","nodeType":"YulTypedName","src":"12932:4:10","type":""}],"returnVariables":[{"name":"length","nativeSrc":"12941:6:10","nodeType":"YulTypedName","src":"12941:6:10","type":""}],"src":"12897:320:10"},{"body":{"nativeSrc":"13251:152:10","nodeType":"YulBlock","src":"13251:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13268:1:10","nodeType":"YulLiteral","src":"13268:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"13271:77:10","nodeType":"YulLiteral","src":"13271:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"13261:6:10","nodeType":"YulIdentifier","src":"13261:6:10"},"nativeSrc":"13261:88:10","nodeType":"YulFunctionCall","src":"13261:88:10"},"nativeSrc":"13261:88:10","nodeType":"YulExpressionStatement","src":"13261:88:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13365:1:10","nodeType":"YulLiteral","src":"13365:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"13368:4:10","nodeType":"YulLiteral","src":"13368:4:10","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"13358:6:10","nodeType":"YulIdentifier","src":"13358:6:10"},"nativeSrc":"13358:15:10","nodeType":"YulFunctionCall","src":"13358:15:10"},"nativeSrc":"13358:15:10","nodeType":"YulExpressionStatement","src":"13358:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13389:1:10","nodeType":"YulLiteral","src":"13389:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"13392:4:10","nodeType":"YulLiteral","src":"13392:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"13382:6:10","nodeType":"YulIdentifier","src":"13382:6:10"},"nativeSrc":"13382:15:10","nodeType":"YulFunctionCall","src":"13382:15:10"},"nativeSrc":"13382:15:10","nodeType":"YulExpressionStatement","src":"13382:15:10"}]},"name":"panic_error_0x11","nativeSrc":"13223:180:10","nodeType":"YulFunctionDefinition","src":"13223:180:10"},{"body":{"nativeSrc":"13454:149:10","nodeType":"YulBlock","src":"13454:149:10","statements":[{"nativeSrc":"13464:25:10","nodeType":"YulAssignment","src":"13464:25:10","value":{"arguments":[{"name":"x","nativeSrc":"13487:1:10","nodeType":"YulIdentifier","src":"13487:1:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13469:17:10","nodeType":"YulIdentifier","src":"13469:17:10"},"nativeSrc":"13469:20:10","nodeType":"YulFunctionCall","src":"13469:20:10"},"variableNames":[{"name":"x","nativeSrc":"13464:1:10","nodeType":"YulIdentifier","src":"13464:1:10"}]},{"nativeSrc":"13498:25:10","nodeType":"YulAssignment","src":"13498:25:10","value":{"arguments":[{"name":"y","nativeSrc":"13521:1:10","nodeType":"YulIdentifier","src":"13521:1:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13503:17:10","nodeType":"YulIdentifier","src":"13503:17:10"},"nativeSrc":"13503:20:10","nodeType":"YulFunctionCall","src":"13503:20:10"},"variableNames":[{"name":"y","nativeSrc":"13498:1:10","nodeType":"YulIdentifier","src":"13498:1:10"}]},{"nativeSrc":"13532:17:10","nodeType":"YulAssignment","src":"13532:17:10","value":{"arguments":[{"name":"x","nativeSrc":"13544:1:10","nodeType":"YulIdentifier","src":"13544:1:10"},{"name":"y","nativeSrc":"13547:1:10","nodeType":"YulIdentifier","src":"13547:1:10"}],"functionName":{"name":"sub","nativeSrc":"13540:3:10","nodeType":"YulIdentifier","src":"13540:3:10"},"nativeSrc":"13540:9:10","nodeType":"YulFunctionCall","src":"13540:9:10"},"variableNames":[{"name":"diff","nativeSrc":"13532:4:10","nodeType":"YulIdentifier","src":"13532:4:10"}]},{"body":{"nativeSrc":"13574:22:10","nodeType":"YulBlock","src":"13574:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13576:16:10","nodeType":"YulIdentifier","src":"13576:16:10"},"nativeSrc":"13576:18:10","nodeType":"YulFunctionCall","src":"13576:18:10"},"nativeSrc":"13576:18:10","nodeType":"YulExpressionStatement","src":"13576:18:10"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"13565:4:10","nodeType":"YulIdentifier","src":"13565:4:10"},{"name":"x","nativeSrc":"13571:1:10","nodeType":"YulIdentifier","src":"13571:1:10"}],"functionName":{"name":"gt","nativeSrc":"13562:2:10","nodeType":"YulIdentifier","src":"13562:2:10"},"nativeSrc":"13562:11:10","nodeType":"YulFunctionCall","src":"13562:11:10"},"nativeSrc":"13559:37:10","nodeType":"YulIf","src":"13559:37:10"}]},"name":"checked_sub_t_uint256","nativeSrc":"13409:194:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"13440:1:10","nodeType":"YulTypedName","src":"13440:1:10","type":""},{"name":"y","nativeSrc":"13443:1:10","nodeType":"YulTypedName","src":"13443:1:10","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"13449:4:10","nodeType":"YulTypedName","src":"13449:4:10","type":""}],"src":"13409:194:10"},{"body":{"nativeSrc":"13637:152:10","nodeType":"YulBlock","src":"13637:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13654:1:10","nodeType":"YulLiteral","src":"13654:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"13657:77:10","nodeType":"YulLiteral","src":"13657:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"13647:6:10","nodeType":"YulIdentifier","src":"13647:6:10"},"nativeSrc":"13647:88:10","nodeType":"YulFunctionCall","src":"13647:88:10"},"nativeSrc":"13647:88:10","nodeType":"YulExpressionStatement","src":"13647:88:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13751:1:10","nodeType":"YulLiteral","src":"13751:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"13754:4:10","nodeType":"YulLiteral","src":"13754:4:10","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"13744:6:10","nodeType":"YulIdentifier","src":"13744:6:10"},"nativeSrc":"13744:15:10","nodeType":"YulFunctionCall","src":"13744:15:10"},"nativeSrc":"13744:15:10","nodeType":"YulExpressionStatement","src":"13744:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13775:1:10","nodeType":"YulLiteral","src":"13775:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"13778:4:10","nodeType":"YulLiteral","src":"13778:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"13768:6:10","nodeType":"YulIdentifier","src":"13768:6:10"},"nativeSrc":"13768:15:10","nodeType":"YulFunctionCall","src":"13768:15:10"},"nativeSrc":"13768:15:10","nodeType":"YulExpressionStatement","src":"13768:15:10"}]},"name":"panic_error_0x32","nativeSrc":"13609:180:10","nodeType":"YulFunctionDefinition","src":"13609:180:10"},{"body":{"nativeSrc":"13901:69:10","nodeType":"YulBlock","src":"13901:69:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"13923:6:10","nodeType":"YulIdentifier","src":"13923:6:10"},{"kind":"number","nativeSrc":"13931:1:10","nodeType":"YulLiteral","src":"13931:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13919:3:10","nodeType":"YulIdentifier","src":"13919:3:10"},"nativeSrc":"13919:14:10","nodeType":"YulFunctionCall","src":"13919:14:10"},{"hexValue":"496e76616c696420726563697069656e742061646472657373","kind":"string","nativeSrc":"13935:27:10","nodeType":"YulLiteral","src":"13935:27:10","type":"","value":"Invalid recipient address"}],"functionName":{"name":"mstore","nativeSrc":"13912:6:10","nodeType":"YulIdentifier","src":"13912:6:10"},"nativeSrc":"13912:51:10","nodeType":"YulFunctionCall","src":"13912:51:10"},"nativeSrc":"13912:51:10","nodeType":"YulExpressionStatement","src":"13912:51:10"}]},"name":"store_literal_in_memory_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df","nativeSrc":"13795:175:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"13893:6:10","nodeType":"YulTypedName","src":"13893:6:10","type":""}],"src":"13795:175:10"},{"body":{"nativeSrc":"14122:220:10","nodeType":"YulBlock","src":"14122:220:10","statements":[{"nativeSrc":"14132:74:10","nodeType":"YulAssignment","src":"14132:74:10","value":{"arguments":[{"name":"pos","nativeSrc":"14198:3:10","nodeType":"YulIdentifier","src":"14198:3:10"},{"kind":"number","nativeSrc":"14203:2:10","nodeType":"YulLiteral","src":"14203:2:10","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"14139:58:10","nodeType":"YulIdentifier","src":"14139:58:10"},"nativeSrc":"14139:67:10","nodeType":"YulFunctionCall","src":"14139:67:10"},"variableNames":[{"name":"pos","nativeSrc":"14132:3:10","nodeType":"YulIdentifier","src":"14132:3:10"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"14304:3:10","nodeType":"YulIdentifier","src":"14304:3:10"}],"functionName":{"name":"store_literal_in_memory_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df","nativeSrc":"14215:88:10","nodeType":"YulIdentifier","src":"14215:88:10"},"nativeSrc":"14215:93:10","nodeType":"YulFunctionCall","src":"14215:93:10"},"nativeSrc":"14215:93:10","nodeType":"YulExpressionStatement","src":"14215:93:10"},{"nativeSrc":"14317:19:10","nodeType":"YulAssignment","src":"14317:19:10","value":{"arguments":[{"name":"pos","nativeSrc":"14328:3:10","nodeType":"YulIdentifier","src":"14328:3:10"},{"kind":"number","nativeSrc":"14333:2:10","nodeType":"YulLiteral","src":"14333:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14324:3:10","nodeType":"YulIdentifier","src":"14324:3:10"},"nativeSrc":"14324:12:10","nodeType":"YulFunctionCall","src":"14324:12:10"},"variableNames":[{"name":"end","nativeSrc":"14317:3:10","nodeType":"YulIdentifier","src":"14317:3:10"}]}]},"name":"abi_encode_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df_to_t_string_memory_ptr_fromStack","nativeSrc":"13976:366:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14110:3:10","nodeType":"YulTypedName","src":"14110:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"14118:3:10","nodeType":"YulTypedName","src":"14118:3:10","type":""}],"src":"13976:366:10"},{"body":{"nativeSrc":"14519:248:10","nodeType":"YulBlock","src":"14519:248:10","statements":[{"nativeSrc":"14529:26:10","nodeType":"YulAssignment","src":"14529:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"14541:9:10","nodeType":"YulIdentifier","src":"14541:9:10"},{"kind":"number","nativeSrc":"14552:2:10","nodeType":"YulLiteral","src":"14552:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14537:3:10","nodeType":"YulIdentifier","src":"14537:3:10"},"nativeSrc":"14537:18:10","nodeType":"YulFunctionCall","src":"14537:18:10"},"variableNames":[{"name":"tail","nativeSrc":"14529:4:10","nodeType":"YulIdentifier","src":"14529:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14576:9:10","nodeType":"YulIdentifier","src":"14576:9:10"},{"kind":"number","nativeSrc":"14587:1:10","nodeType":"YulLiteral","src":"14587:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14572:3:10","nodeType":"YulIdentifier","src":"14572:3:10"},"nativeSrc":"14572:17:10","nodeType":"YulFunctionCall","src":"14572:17:10"},{"arguments":[{"name":"tail","nativeSrc":"14595:4:10","nodeType":"YulIdentifier","src":"14595:4:10"},{"name":"headStart","nativeSrc":"14601:9:10","nodeType":"YulIdentifier","src":"14601:9:10"}],"functionName":{"name":"sub","nativeSrc":"14591:3:10","nodeType":"YulIdentifier","src":"14591:3:10"},"nativeSrc":"14591:20:10","nodeType":"YulFunctionCall","src":"14591:20:10"}],"functionName":{"name":"mstore","nativeSrc":"14565:6:10","nodeType":"YulIdentifier","src":"14565:6:10"},"nativeSrc":"14565:47:10","nodeType":"YulFunctionCall","src":"14565:47:10"},"nativeSrc":"14565:47:10","nodeType":"YulExpressionStatement","src":"14565:47:10"},{"nativeSrc":"14621:139:10","nodeType":"YulAssignment","src":"14621:139:10","value":{"arguments":[{"name":"tail","nativeSrc":"14755:4:10","nodeType":"YulIdentifier","src":"14755:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df_to_t_string_memory_ptr_fromStack","nativeSrc":"14629:124:10","nodeType":"YulIdentifier","src":"14629:124:10"},"nativeSrc":"14629:131:10","nodeType":"YulFunctionCall","src":"14629:131:10"},"variableNames":[{"name":"tail","nativeSrc":"14621:4:10","nodeType":"YulIdentifier","src":"14621:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14348:419:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14499:9:10","nodeType":"YulTypedName","src":"14499:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14514:4:10","nodeType":"YulTypedName","src":"14514:4:10","type":""}],"src":"14348:419:10"},{"body":{"nativeSrc":"14879:71:10","nodeType":"YulBlock","src":"14879:71:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"14901:6:10","nodeType":"YulIdentifier","src":"14901:6:10"},{"kind":"number","nativeSrc":"14909:1:10","nodeType":"YulLiteral","src":"14909:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14897:3:10","nodeType":"YulIdentifier","src":"14897:3:10"},"nativeSrc":"14897:14:10","nodeType":"YulFunctionCall","src":"14897:14:10"},{"hexValue":"436f75727365206e616d652063616e6e6f7420626520656d707479","kind":"string","nativeSrc":"14913:29:10","nodeType":"YulLiteral","src":"14913:29:10","type":"","value":"Course name cannot be empty"}],"functionName":{"name":"mstore","nativeSrc":"14890:6:10","nodeType":"YulIdentifier","src":"14890:6:10"},"nativeSrc":"14890:53:10","nodeType":"YulFunctionCall","src":"14890:53:10"},"nativeSrc":"14890:53:10","nodeType":"YulExpressionStatement","src":"14890:53:10"}]},"name":"store_literal_in_memory_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988","nativeSrc":"14773:177:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"14871:6:10","nodeType":"YulTypedName","src":"14871:6:10","type":""}],"src":"14773:177:10"},{"body":{"nativeSrc":"15102:220:10","nodeType":"YulBlock","src":"15102:220:10","statements":[{"nativeSrc":"15112:74:10","nodeType":"YulAssignment","src":"15112:74:10","value":{"arguments":[{"name":"pos","nativeSrc":"15178:3:10","nodeType":"YulIdentifier","src":"15178:3:10"},{"kind":"number","nativeSrc":"15183:2:10","nodeType":"YulLiteral","src":"15183:2:10","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"15119:58:10","nodeType":"YulIdentifier","src":"15119:58:10"},"nativeSrc":"15119:67:10","nodeType":"YulFunctionCall","src":"15119:67:10"},"variableNames":[{"name":"pos","nativeSrc":"15112:3:10","nodeType":"YulIdentifier","src":"15112:3:10"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"15284:3:10","nodeType":"YulIdentifier","src":"15284:3:10"}],"functionName":{"name":"store_literal_in_memory_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988","nativeSrc":"15195:88:10","nodeType":"YulIdentifier","src":"15195:88:10"},"nativeSrc":"15195:93:10","nodeType":"YulFunctionCall","src":"15195:93:10"},"nativeSrc":"15195:93:10","nodeType":"YulExpressionStatement","src":"15195:93:10"},{"nativeSrc":"15297:19:10","nodeType":"YulAssignment","src":"15297:19:10","value":{"arguments":[{"name":"pos","nativeSrc":"15308:3:10","nodeType":"YulIdentifier","src":"15308:3:10"},{"kind":"number","nativeSrc":"15313:2:10","nodeType":"YulLiteral","src":"15313:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15304:3:10","nodeType":"YulIdentifier","src":"15304:3:10"},"nativeSrc":"15304:12:10","nodeType":"YulFunctionCall","src":"15304:12:10"},"variableNames":[{"name":"end","nativeSrc":"15297:3:10","nodeType":"YulIdentifier","src":"15297:3:10"}]}]},"name":"abi_encode_t_stringliteral_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988_to_t_string_memory_ptr_fromStack","nativeSrc":"14956:366:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"15090:3:10","nodeType":"YulTypedName","src":"15090:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"15098:3:10","nodeType":"YulTypedName","src":"15098:3:10","type":""}],"src":"14956:366:10"},{"body":{"nativeSrc":"15499:248:10","nodeType":"YulBlock","src":"15499:248:10","statements":[{"nativeSrc":"15509:26:10","nodeType":"YulAssignment","src":"15509:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"15521:9:10","nodeType":"YulIdentifier","src":"15521:9:10"},{"kind":"number","nativeSrc":"15532:2:10","nodeType":"YulLiteral","src":"15532:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15517:3:10","nodeType":"YulIdentifier","src":"15517:3:10"},"nativeSrc":"15517:18:10","nodeType":"YulFunctionCall","src":"15517:18:10"},"variableNames":[{"name":"tail","nativeSrc":"15509:4:10","nodeType":"YulIdentifier","src":"15509:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15556:9:10","nodeType":"YulIdentifier","src":"15556:9:10"},{"kind":"number","nativeSrc":"15567:1:10","nodeType":"YulLiteral","src":"15567:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15552:3:10","nodeType":"YulIdentifier","src":"15552:3:10"},"nativeSrc":"15552:17:10","nodeType":"YulFunctionCall","src":"15552:17:10"},{"arguments":[{"name":"tail","nativeSrc":"15575:4:10","nodeType":"YulIdentifier","src":"15575:4:10"},{"name":"headStart","nativeSrc":"15581:9:10","nodeType":"YulIdentifier","src":"15581:9:10"}],"functionName":{"name":"sub","nativeSrc":"15571:3:10","nodeType":"YulIdentifier","src":"15571:3:10"},"nativeSrc":"15571:20:10","nodeType":"YulFunctionCall","src":"15571:20:10"}],"functionName":{"name":"mstore","nativeSrc":"15545:6:10","nodeType":"YulIdentifier","src":"15545:6:10"},"nativeSrc":"15545:47:10","nodeType":"YulFunctionCall","src":"15545:47:10"},"nativeSrc":"15545:47:10","nodeType":"YulExpressionStatement","src":"15545:47:10"},{"nativeSrc":"15601:139:10","nodeType":"YulAssignment","src":"15601:139:10","value":{"arguments":[{"name":"tail","nativeSrc":"15735:4:10","nodeType":"YulIdentifier","src":"15735:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988_to_t_string_memory_ptr_fromStack","nativeSrc":"15609:124:10","nodeType":"YulIdentifier","src":"15609:124:10"},"nativeSrc":"15609:131:10","nodeType":"YulFunctionCall","src":"15609:131:10"},"variableNames":[{"name":"tail","nativeSrc":"15601:4:10","nodeType":"YulIdentifier","src":"15601:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15328:419:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15479:9:10","nodeType":"YulTypedName","src":"15479:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15494:4:10","nodeType":"YulTypedName","src":"15494:4:10","type":""}],"src":"15328:419:10"},{"body":{"nativeSrc":"15859:115:10","nodeType":"YulBlock","src":"15859:115:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"15881:6:10","nodeType":"YulIdentifier","src":"15881:6:10"},{"kind":"number","nativeSrc":"15889:1:10","nodeType":"YulLiteral","src":"15889:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15877:3:10","nodeType":"YulIdentifier","src":"15877:3:10"},"nativeSrc":"15877:14:10","nodeType":"YulFunctionCall","src":"15877:14:10"},{"hexValue":"497373756520646174652063616e6e6f7420626520696e207468652066757475","kind":"string","nativeSrc":"15893:34:10","nodeType":"YulLiteral","src":"15893:34:10","type":"","value":"Issue date cannot be in the futu"}],"functionName":{"name":"mstore","nativeSrc":"15870:6:10","nodeType":"YulIdentifier","src":"15870:6:10"},"nativeSrc":"15870:58:10","nodeType":"YulFunctionCall","src":"15870:58:10"},"nativeSrc":"15870:58:10","nodeType":"YulExpressionStatement","src":"15870:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"15949:6:10","nodeType":"YulIdentifier","src":"15949:6:10"},{"kind":"number","nativeSrc":"15957:2:10","nodeType":"YulLiteral","src":"15957:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15945:3:10","nodeType":"YulIdentifier","src":"15945:3:10"},"nativeSrc":"15945:15:10","nodeType":"YulFunctionCall","src":"15945:15:10"},{"hexValue":"7265","kind":"string","nativeSrc":"15962:4:10","nodeType":"YulLiteral","src":"15962:4:10","type":"","value":"re"}],"functionName":{"name":"mstore","nativeSrc":"15938:6:10","nodeType":"YulIdentifier","src":"15938:6:10"},"nativeSrc":"15938:29:10","nodeType":"YulFunctionCall","src":"15938:29:10"},"nativeSrc":"15938:29:10","nodeType":"YulExpressionStatement","src":"15938:29:10"}]},"name":"store_literal_in_memory_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97","nativeSrc":"15753:221:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"15851:6:10","nodeType":"YulTypedName","src":"15851:6:10","type":""}],"src":"15753:221:10"},{"body":{"nativeSrc":"16126:220:10","nodeType":"YulBlock","src":"16126:220:10","statements":[{"nativeSrc":"16136:74:10","nodeType":"YulAssignment","src":"16136:74:10","value":{"arguments":[{"name":"pos","nativeSrc":"16202:3:10","nodeType":"YulIdentifier","src":"16202:3:10"},{"kind":"number","nativeSrc":"16207:2:10","nodeType":"YulLiteral","src":"16207:2:10","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"16143:58:10","nodeType":"YulIdentifier","src":"16143:58:10"},"nativeSrc":"16143:67:10","nodeType":"YulFunctionCall","src":"16143:67:10"},"variableNames":[{"name":"pos","nativeSrc":"16136:3:10","nodeType":"YulIdentifier","src":"16136:3:10"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"16308:3:10","nodeType":"YulIdentifier","src":"16308:3:10"}],"functionName":{"name":"store_literal_in_memory_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97","nativeSrc":"16219:88:10","nodeType":"YulIdentifier","src":"16219:88:10"},"nativeSrc":"16219:93:10","nodeType":"YulFunctionCall","src":"16219:93:10"},"nativeSrc":"16219:93:10","nodeType":"YulExpressionStatement","src":"16219:93:10"},{"nativeSrc":"16321:19:10","nodeType":"YulAssignment","src":"16321:19:10","value":{"arguments":[{"name":"pos","nativeSrc":"16332:3:10","nodeType":"YulIdentifier","src":"16332:3:10"},{"kind":"number","nativeSrc":"16337:2:10","nodeType":"YulLiteral","src":"16337:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16328:3:10","nodeType":"YulIdentifier","src":"16328:3:10"},"nativeSrc":"16328:12:10","nodeType":"YulFunctionCall","src":"16328:12:10"},"variableNames":[{"name":"end","nativeSrc":"16321:3:10","nodeType":"YulIdentifier","src":"16321:3:10"}]}]},"name":"abi_encode_t_stringliteral_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97_to_t_string_memory_ptr_fromStack","nativeSrc":"15980:366:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"16114:3:10","nodeType":"YulTypedName","src":"16114:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"16122:3:10","nodeType":"YulTypedName","src":"16122:3:10","type":""}],"src":"15980:366:10"},{"body":{"nativeSrc":"16523:248:10","nodeType":"YulBlock","src":"16523:248:10","statements":[{"nativeSrc":"16533:26:10","nodeType":"YulAssignment","src":"16533:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"16545:9:10","nodeType":"YulIdentifier","src":"16545:9:10"},{"kind":"number","nativeSrc":"16556:2:10","nodeType":"YulLiteral","src":"16556:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16541:3:10","nodeType":"YulIdentifier","src":"16541:3:10"},"nativeSrc":"16541:18:10","nodeType":"YulFunctionCall","src":"16541:18:10"},"variableNames":[{"name":"tail","nativeSrc":"16533:4:10","nodeType":"YulIdentifier","src":"16533:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16580:9:10","nodeType":"YulIdentifier","src":"16580:9:10"},{"kind":"number","nativeSrc":"16591:1:10","nodeType":"YulLiteral","src":"16591:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16576:3:10","nodeType":"YulIdentifier","src":"16576:3:10"},"nativeSrc":"16576:17:10","nodeType":"YulFunctionCall","src":"16576:17:10"},{"arguments":[{"name":"tail","nativeSrc":"16599:4:10","nodeType":"YulIdentifier","src":"16599:4:10"},{"name":"headStart","nativeSrc":"16605:9:10","nodeType":"YulIdentifier","src":"16605:9:10"}],"functionName":{"name":"sub","nativeSrc":"16595:3:10","nodeType":"YulIdentifier","src":"16595:3:10"},"nativeSrc":"16595:20:10","nodeType":"YulFunctionCall","src":"16595:20:10"}],"functionName":{"name":"mstore","nativeSrc":"16569:6:10","nodeType":"YulIdentifier","src":"16569:6:10"},"nativeSrc":"16569:47:10","nodeType":"YulFunctionCall","src":"16569:47:10"},"nativeSrc":"16569:47:10","nodeType":"YulExpressionStatement","src":"16569:47:10"},{"nativeSrc":"16625:139:10","nodeType":"YulAssignment","src":"16625:139:10","value":{"arguments":[{"name":"tail","nativeSrc":"16759:4:10","nodeType":"YulIdentifier","src":"16759:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97_to_t_string_memory_ptr_fromStack","nativeSrc":"16633:124:10","nodeType":"YulIdentifier","src":"16633:124:10"},"nativeSrc":"16633:131:10","nodeType":"YulFunctionCall","src":"16633:131:10"},"variableNames":[{"name":"tail","nativeSrc":"16625:4:10","nodeType":"YulIdentifier","src":"16625:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"16352:419:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16503:9:10","nodeType":"YulTypedName","src":"16503:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16518:4:10","nodeType":"YulTypedName","src":"16518:4:10","type":""}],"src":"16352:419:10"},{"body":{"nativeSrc":"16923:277:10","nodeType":"YulBlock","src":"16923:277:10","statements":[{"nativeSrc":"16933:26:10","nodeType":"YulAssignment","src":"16933:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"16945:9:10","nodeType":"YulIdentifier","src":"16945:9:10"},{"kind":"number","nativeSrc":"16956:2:10","nodeType":"YulLiteral","src":"16956:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16941:3:10","nodeType":"YulIdentifier","src":"16941:3:10"},"nativeSrc":"16941:18:10","nodeType":"YulFunctionCall","src":"16941:18:10"},"variableNames":[{"name":"tail","nativeSrc":"16933:4:10","nodeType":"YulIdentifier","src":"16933:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16980:9:10","nodeType":"YulIdentifier","src":"16980:9:10"},{"kind":"number","nativeSrc":"16991:1:10","nodeType":"YulLiteral","src":"16991:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16976:3:10","nodeType":"YulIdentifier","src":"16976:3:10"},"nativeSrc":"16976:17:10","nodeType":"YulFunctionCall","src":"16976:17:10"},{"arguments":[{"name":"tail","nativeSrc":"16999:4:10","nodeType":"YulIdentifier","src":"16999:4:10"},{"name":"headStart","nativeSrc":"17005:9:10","nodeType":"YulIdentifier","src":"17005:9:10"}],"functionName":{"name":"sub","nativeSrc":"16995:3:10","nodeType":"YulIdentifier","src":"16995:3:10"},"nativeSrc":"16995:20:10","nodeType":"YulFunctionCall","src":"16995:20:10"}],"functionName":{"name":"mstore","nativeSrc":"16969:6:10","nodeType":"YulIdentifier","src":"16969:6:10"},"nativeSrc":"16969:47:10","nodeType":"YulFunctionCall","src":"16969:47:10"},"nativeSrc":"16969:47:10","nodeType":"YulExpressionStatement","src":"16969:47:10"},{"nativeSrc":"17025:86:10","nodeType":"YulAssignment","src":"17025:86:10","value":{"arguments":[{"name":"value0","nativeSrc":"17097:6:10","nodeType":"YulIdentifier","src":"17097:6:10"},{"name":"tail","nativeSrc":"17106:4:10","nodeType":"YulIdentifier","src":"17106:4:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"17033:63:10","nodeType":"YulIdentifier","src":"17033:63:10"},"nativeSrc":"17033:78:10","nodeType":"YulFunctionCall","src":"17033:78:10"},"variableNames":[{"name":"tail","nativeSrc":"17025:4:10","nodeType":"YulIdentifier","src":"17025:4:10"}]},{"expression":{"arguments":[{"name":"value1","nativeSrc":"17165:6:10","nodeType":"YulIdentifier","src":"17165:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"17178:9:10","nodeType":"YulIdentifier","src":"17178:9:10"},{"kind":"number","nativeSrc":"17189:2:10","nodeType":"YulLiteral","src":"17189:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17174:3:10","nodeType":"YulIdentifier","src":"17174:3:10"},"nativeSrc":"17174:18:10","nodeType":"YulFunctionCall","src":"17174:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"17121:43:10","nodeType":"YulIdentifier","src":"17121:43:10"},"nativeSrc":"17121:72:10","nodeType":"YulFunctionCall","src":"17121:72:10"},"nativeSrc":"17121:72:10","nodeType":"YulExpressionStatement","src":"17121:72:10"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed","nativeSrc":"16777:423:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16887:9:10","nodeType":"YulTypedName","src":"16887:9:10","type":""},{"name":"value1","nativeSrc":"16899:6:10","nodeType":"YulTypedName","src":"16899:6:10","type":""},{"name":"value0","nativeSrc":"16907:6:10","nodeType":"YulTypedName","src":"16907:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16918:4:10","nodeType":"YulTypedName","src":"16918:4:10","type":""}],"src":"16777:423:10"},{"body":{"nativeSrc":"17312:66:10","nodeType":"YulBlock","src":"17312:66:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"17334:6:10","nodeType":"YulIdentifier","src":"17334:6:10"},{"kind":"number","nativeSrc":"17342:1:10","nodeType":"YulLiteral","src":"17342:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17330:3:10","nodeType":"YulIdentifier","src":"17330:3:10"},"nativeSrc":"17330:14:10","nodeType":"YulFunctionCall","src":"17330:14:10"},{"hexValue":"446174612076616c69646174696f6e206661696c6564","kind":"string","nativeSrc":"17346:24:10","nodeType":"YulLiteral","src":"17346:24:10","type":"","value":"Data validation failed"}],"functionName":{"name":"mstore","nativeSrc":"17323:6:10","nodeType":"YulIdentifier","src":"17323:6:10"},"nativeSrc":"17323:48:10","nodeType":"YulFunctionCall","src":"17323:48:10"},"nativeSrc":"17323:48:10","nodeType":"YulExpressionStatement","src":"17323:48:10"}]},"name":"store_literal_in_memory_df29a3d526a469d88dc1aca906946c8fa4e298109faf667a9cf40dbe115c170b","nativeSrc":"17206:172:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"17304:6:10","nodeType":"YulTypedName","src":"17304:6:10","type":""}],"src":"17206:172:10"},{"body":{"nativeSrc":"17530:220:10","nodeType":"YulBlock","src":"17530:220:10","statements":[{"nativeSrc":"17540:74:10","nodeType":"YulAssignment","src":"17540:74:10","value":{"arguments":[{"name":"pos","nativeSrc":"17606:3:10","nodeType":"YulIdentifier","src":"17606:3:10"},{"kind":"number","nativeSrc":"17611:2:10","nodeType":"YulLiteral","src":"17611:2:10","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"17547:58:10","nodeType":"YulIdentifier","src":"17547:58:10"},"nativeSrc":"17547:67:10","nodeType":"YulFunctionCall","src":"17547:67:10"},"variableNames":[{"name":"pos","nativeSrc":"17540:3:10","nodeType":"YulIdentifier","src":"17540:3:10"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"17712:3:10","nodeType":"YulIdentifier","src":"17712:3:10"}],"functionName":{"name":"store_literal_in_memory_df29a3d526a469d88dc1aca906946c8fa4e298109faf667a9cf40dbe115c170b","nativeSrc":"17623:88:10","nodeType":"YulIdentifier","src":"17623:88:10"},"nativeSrc":"17623:93:10","nodeType":"YulFunctionCall","src":"17623:93:10"},"nativeSrc":"17623:93:10","nodeType":"YulExpressionStatement","src":"17623:93:10"},{"nativeSrc":"17725:19:10","nodeType":"YulAssignment","src":"17725:19:10","value":{"arguments":[{"name":"pos","nativeSrc":"17736:3:10","nodeType":"YulIdentifier","src":"17736:3:10"},{"kind":"number","nativeSrc":"17741:2:10","nodeType":"YulLiteral","src":"17741:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17732:3:10","nodeType":"YulIdentifier","src":"17732:3:10"},"nativeSrc":"17732:12:10","nodeType":"YulFunctionCall","src":"17732:12:10"},"variableNames":[{"name":"end","nativeSrc":"17725:3:10","nodeType":"YulIdentifier","src":"17725:3:10"}]}]},"name":"abi_encode_t_stringliteral_df29a3d526a469d88dc1aca906946c8fa4e298109faf667a9cf40dbe115c170b_to_t_string_memory_ptr_fromStack","nativeSrc":"17384:366:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"17518:3:10","nodeType":"YulTypedName","src":"17518:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"17526:3:10","nodeType":"YulTypedName","src":"17526:3:10","type":""}],"src":"17384:366:10"},{"body":{"nativeSrc":"17927:248:10","nodeType":"YulBlock","src":"17927:248:10","statements":[{"nativeSrc":"17937:26:10","nodeType":"YulAssignment","src":"17937:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"17949:9:10","nodeType":"YulIdentifier","src":"17949:9:10"},{"kind":"number","nativeSrc":"17960:2:10","nodeType":"YulLiteral","src":"17960:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17945:3:10","nodeType":"YulIdentifier","src":"17945:3:10"},"nativeSrc":"17945:18:10","nodeType":"YulFunctionCall","src":"17945:18:10"},"variableNames":[{"name":"tail","nativeSrc":"17937:4:10","nodeType":"YulIdentifier","src":"17937:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17984:9:10","nodeType":"YulIdentifier","src":"17984:9:10"},{"kind":"number","nativeSrc":"17995:1:10","nodeType":"YulLiteral","src":"17995:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17980:3:10","nodeType":"YulIdentifier","src":"17980:3:10"},"nativeSrc":"17980:17:10","nodeType":"YulFunctionCall","src":"17980:17:10"},{"arguments":[{"name":"tail","nativeSrc":"18003:4:10","nodeType":"YulIdentifier","src":"18003:4:10"},{"name":"headStart","nativeSrc":"18009:9:10","nodeType":"YulIdentifier","src":"18009:9:10"}],"functionName":{"name":"sub","nativeSrc":"17999:3:10","nodeType":"YulIdentifier","src":"17999:3:10"},"nativeSrc":"17999:20:10","nodeType":"YulFunctionCall","src":"17999:20:10"}],"functionName":{"name":"mstore","nativeSrc":"17973:6:10","nodeType":"YulIdentifier","src":"17973:6:10"},"nativeSrc":"17973:47:10","nodeType":"YulFunctionCall","src":"17973:47:10"},"nativeSrc":"17973:47:10","nodeType":"YulExpressionStatement","src":"17973:47:10"},{"nativeSrc":"18029:139:10","nodeType":"YulAssignment","src":"18029:139:10","value":{"arguments":[{"name":"tail","nativeSrc":"18163:4:10","nodeType":"YulIdentifier","src":"18163:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_df29a3d526a469d88dc1aca906946c8fa4e298109faf667a9cf40dbe115c170b_to_t_string_memory_ptr_fromStack","nativeSrc":"18037:124:10","nodeType":"YulIdentifier","src":"18037:124:10"},"nativeSrc":"18037:131:10","nodeType":"YulFunctionCall","src":"18037:131:10"},"variableNames":[{"name":"tail","nativeSrc":"18029:4:10","nodeType":"YulIdentifier","src":"18029:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_df29a3d526a469d88dc1aca906946c8fa4e298109faf667a9cf40dbe115c170b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"17756:419:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17907:9:10","nodeType":"YulTypedName","src":"17907:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17922:4:10","nodeType":"YulTypedName","src":"17922:4:10","type":""}],"src":"17756:419:10"},{"body":{"nativeSrc":"18235:87:10","nodeType":"YulBlock","src":"18235:87:10","statements":[{"nativeSrc":"18245:11:10","nodeType":"YulAssignment","src":"18245:11:10","value":{"name":"ptr","nativeSrc":"18253:3:10","nodeType":"YulIdentifier","src":"18253:3:10"},"variableNames":[{"name":"data","nativeSrc":"18245:4:10","nodeType":"YulIdentifier","src":"18245:4:10"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18273:1:10","nodeType":"YulLiteral","src":"18273:1:10","type":"","value":"0"},{"name":"ptr","nativeSrc":"18276:3:10","nodeType":"YulIdentifier","src":"18276:3:10"}],"functionName":{"name":"mstore","nativeSrc":"18266:6:10","nodeType":"YulIdentifier","src":"18266:6:10"},"nativeSrc":"18266:14:10","nodeType":"YulFunctionCall","src":"18266:14:10"},"nativeSrc":"18266:14:10","nodeType":"YulExpressionStatement","src":"18266:14:10"},{"nativeSrc":"18289:26:10","nodeType":"YulAssignment","src":"18289:26:10","value":{"arguments":[{"kind":"number","nativeSrc":"18307:1:10","nodeType":"YulLiteral","src":"18307:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"18310:4:10","nodeType":"YulLiteral","src":"18310:4:10","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"18297:9:10","nodeType":"YulIdentifier","src":"18297:9:10"},"nativeSrc":"18297:18:10","nodeType":"YulFunctionCall","src":"18297:18:10"},"variableNames":[{"name":"data","nativeSrc":"18289:4:10","nodeType":"YulIdentifier","src":"18289:4:10"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"18181:141:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"18222:3:10","nodeType":"YulTypedName","src":"18222:3:10","type":""}],"returnVariables":[{"name":"data","nativeSrc":"18230:4:10","nodeType":"YulTypedName","src":"18230:4:10","type":""}],"src":"18181:141:10"},{"body":{"nativeSrc":"18372:49:10","nodeType":"YulBlock","src":"18372:49:10","statements":[{"nativeSrc":"18382:33:10","nodeType":"YulAssignment","src":"18382:33:10","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"18400:5:10","nodeType":"YulIdentifier","src":"18400:5:10"},{"kind":"number","nativeSrc":"18407:2:10","nodeType":"YulLiteral","src":"18407:2:10","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"18396:3:10","nodeType":"YulIdentifier","src":"18396:3:10"},"nativeSrc":"18396:14:10","nodeType":"YulFunctionCall","src":"18396:14:10"},{"kind":"number","nativeSrc":"18412:2:10","nodeType":"YulLiteral","src":"18412:2:10","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"18392:3:10","nodeType":"YulIdentifier","src":"18392:3:10"},"nativeSrc":"18392:23:10","nodeType":"YulFunctionCall","src":"18392:23:10"},"variableNames":[{"name":"result","nativeSrc":"18382:6:10","nodeType":"YulIdentifier","src":"18382:6:10"}]}]},"name":"divide_by_32_ceil","nativeSrc":"18328:93:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18355:5:10","nodeType":"YulTypedName","src":"18355:5:10","type":""}],"returnVariables":[{"name":"result","nativeSrc":"18365:6:10","nodeType":"YulTypedName","src":"18365:6:10","type":""}],"src":"18328:93:10"},{"body":{"nativeSrc":"18480:54:10","nodeType":"YulBlock","src":"18480:54:10","statements":[{"nativeSrc":"18490:37:10","nodeType":"YulAssignment","src":"18490:37:10","value":{"arguments":[{"name":"bits","nativeSrc":"18515:4:10","nodeType":"YulIdentifier","src":"18515:4:10"},{"name":"value","nativeSrc":"18521:5:10","nodeType":"YulIdentifier","src":"18521:5:10"}],"functionName":{"name":"shl","nativeSrc":"18511:3:10","nodeType":"YulIdentifier","src":"18511:3:10"},"nativeSrc":"18511:16:10","nodeType":"YulFunctionCall","src":"18511:16:10"},"variableNames":[{"name":"newValue","nativeSrc":"18490:8:10","nodeType":"YulIdentifier","src":"18490:8:10"}]}]},"name":"shift_left_dynamic","nativeSrc":"18427:107:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"18455:4:10","nodeType":"YulTypedName","src":"18455:4:10","type":""},{"name":"value","nativeSrc":"18461:5:10","nodeType":"YulTypedName","src":"18461:5:10","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"18471:8:10","nodeType":"YulTypedName","src":"18471:8:10","type":""}],"src":"18427:107:10"},{"body":{"nativeSrc":"18616:317:10","nodeType":"YulBlock","src":"18616:317:10","statements":[{"nativeSrc":"18626:35:10","nodeType":"YulVariableDeclaration","src":"18626:35:10","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"18647:10:10","nodeType":"YulIdentifier","src":"18647:10:10"},{"kind":"number","nativeSrc":"18659:1:10","nodeType":"YulLiteral","src":"18659:1:10","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"18643:3:10","nodeType":"YulIdentifier","src":"18643:3:10"},"nativeSrc":"18643:18:10","nodeType":"YulFunctionCall","src":"18643:18:10"},"variables":[{"name":"shiftBits","nativeSrc":"18630:9:10","nodeType":"YulTypedName","src":"18630:9:10","type":""}]},{"nativeSrc":"18670:109:10","nodeType":"YulVariableDeclaration","src":"18670:109:10","value":{"arguments":[{"name":"shiftBits","nativeSrc":"18701:9:10","nodeType":"YulIdentifier","src":"18701:9:10"},{"kind":"number","nativeSrc":"18712:66:10","nodeType":"YulLiteral","src":"18712:66:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"18682:18:10","nodeType":"YulIdentifier","src":"18682:18:10"},"nativeSrc":"18682:97:10","nodeType":"YulFunctionCall","src":"18682:97:10"},"variables":[{"name":"mask","nativeSrc":"18674:4:10","nodeType":"YulTypedName","src":"18674:4:10","type":""}]},{"nativeSrc":"18788:51:10","nodeType":"YulAssignment","src":"18788:51:10","value":{"arguments":[{"name":"shiftBits","nativeSrc":"18819:9:10","nodeType":"YulIdentifier","src":"18819:9:10"},{"name":"toInsert","nativeSrc":"18830:8:10","nodeType":"YulIdentifier","src":"18830:8:10"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"18800:18:10","nodeType":"YulIdentifier","src":"18800:18:10"},"nativeSrc":"18800:39:10","nodeType":"YulFunctionCall","src":"18800:39:10"},"variableNames":[{"name":"toInsert","nativeSrc":"18788:8:10","nodeType":"YulIdentifier","src":"18788:8:10"}]},{"nativeSrc":"18848:30:10","nodeType":"YulAssignment","src":"18848:30:10","value":{"arguments":[{"name":"value","nativeSrc":"18861:5:10","nodeType":"YulIdentifier","src":"18861:5:10"},{"arguments":[{"name":"mask","nativeSrc":"18872:4:10","nodeType":"YulIdentifier","src":"18872:4:10"}],"functionName":{"name":"not","nativeSrc":"18868:3:10","nodeType":"YulIdentifier","src":"18868:3:10"},"nativeSrc":"18868:9:10","nodeType":"YulFunctionCall","src":"18868:9:10"}],"functionName":{"name":"and","nativeSrc":"18857:3:10","nodeType":"YulIdentifier","src":"18857:3:10"},"nativeSrc":"18857:21:10","nodeType":"YulFunctionCall","src":"18857:21:10"},"variableNames":[{"name":"value","nativeSrc":"18848:5:10","nodeType":"YulIdentifier","src":"18848:5:10"}]},{"nativeSrc":"18887:40:10","nodeType":"YulAssignment","src":"18887:40:10","value":{"arguments":[{"name":"value","nativeSrc":"18900:5:10","nodeType":"YulIdentifier","src":"18900:5:10"},{"arguments":[{"name":"toInsert","nativeSrc":"18911:8:10","nodeType":"YulIdentifier","src":"18911:8:10"},{"name":"mask","nativeSrc":"18921:4:10","nodeType":"YulIdentifier","src":"18921:4:10"}],"functionName":{"name":"and","nativeSrc":"18907:3:10","nodeType":"YulIdentifier","src":"18907:3:10"},"nativeSrc":"18907:19:10","nodeType":"YulFunctionCall","src":"18907:19:10"}],"functionName":{"name":"or","nativeSrc":"18897:2:10","nodeType":"YulIdentifier","src":"18897:2:10"},"nativeSrc":"18897:30:10","nodeType":"YulFunctionCall","src":"18897:30:10"},"variableNames":[{"name":"result","nativeSrc":"18887:6:10","nodeType":"YulIdentifier","src":"18887:6:10"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"18540:393:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18577:5:10","nodeType":"YulTypedName","src":"18577:5:10","type":""},{"name":"shiftBytes","nativeSrc":"18584:10:10","nodeType":"YulTypedName","src":"18584:10:10","type":""},{"name":"toInsert","nativeSrc":"18596:8:10","nodeType":"YulTypedName","src":"18596:8:10","type":""}],"returnVariables":[{"name":"result","nativeSrc":"18609:6:10","nodeType":"YulTypedName","src":"18609:6:10","type":""}],"src":"18540:393:10"},{"body":{"nativeSrc":"18999:82:10","nodeType":"YulBlock","src":"18999:82:10","statements":[{"nativeSrc":"19009:66:10","nodeType":"YulAssignment","src":"19009:66:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"19067:5:10","nodeType":"YulIdentifier","src":"19067:5:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"19049:17:10","nodeType":"YulIdentifier","src":"19049:17:10"},"nativeSrc":"19049:24:10","nodeType":"YulFunctionCall","src":"19049:24:10"}],"functionName":{"name":"identity","nativeSrc":"19040:8:10","nodeType":"YulIdentifier","src":"19040:8:10"},"nativeSrc":"19040:34:10","nodeType":"YulFunctionCall","src":"19040:34:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"19022:17:10","nodeType":"YulIdentifier","src":"19022:17:10"},"nativeSrc":"19022:53:10","nodeType":"YulFunctionCall","src":"19022:53:10"},"variableNames":[{"name":"converted","nativeSrc":"19009:9:10","nodeType":"YulIdentifier","src":"19009:9:10"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"18939:142:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18979:5:10","nodeType":"YulTypedName","src":"18979:5:10","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"18989:9:10","nodeType":"YulTypedName","src":"18989:9:10","type":""}],"src":"18939:142:10"},{"body":{"nativeSrc":"19134:28:10","nodeType":"YulBlock","src":"19134:28:10","statements":[{"nativeSrc":"19144:12:10","nodeType":"YulAssignment","src":"19144:12:10","value":{"name":"value","nativeSrc":"19151:5:10","nodeType":"YulIdentifier","src":"19151:5:10"},"variableNames":[{"name":"ret","nativeSrc":"19144:3:10","nodeType":"YulIdentifier","src":"19144:3:10"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"19087:75:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19120:5:10","nodeType":"YulTypedName","src":"19120:5:10","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"19130:3:10","nodeType":"YulTypedName","src":"19130:3:10","type":""}],"src":"19087:75:10"},{"body":{"nativeSrc":"19244:193:10","nodeType":"YulBlock","src":"19244:193:10","statements":[{"nativeSrc":"19254:63:10","nodeType":"YulVariableDeclaration","src":"19254:63:10","value":{"arguments":[{"name":"value_0","nativeSrc":"19309:7:10","nodeType":"YulIdentifier","src":"19309:7:10"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"19278:30:10","nodeType":"YulIdentifier","src":"19278:30:10"},"nativeSrc":"19278:39:10","nodeType":"YulFunctionCall","src":"19278:39:10"},"variables":[{"name":"convertedValue_0","nativeSrc":"19258:16:10","nodeType":"YulTypedName","src":"19258:16:10","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"19333:4:10","nodeType":"YulIdentifier","src":"19333:4:10"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"19373:4:10","nodeType":"YulIdentifier","src":"19373:4:10"}],"functionName":{"name":"sload","nativeSrc":"19367:5:10","nodeType":"YulIdentifier","src":"19367:5:10"},"nativeSrc":"19367:11:10","nodeType":"YulFunctionCall","src":"19367:11:10"},{"name":"offset","nativeSrc":"19380:6:10","nodeType":"YulIdentifier","src":"19380:6:10"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"19412:16:10","nodeType":"YulIdentifier","src":"19412:16:10"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"19388:23:10","nodeType":"YulIdentifier","src":"19388:23:10"},"nativeSrc":"19388:41:10","nodeType":"YulFunctionCall","src":"19388:41:10"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"19339:27:10","nodeType":"YulIdentifier","src":"19339:27:10"},"nativeSrc":"19339:91:10","nodeType":"YulFunctionCall","src":"19339:91:10"}],"functionName":{"name":"sstore","nativeSrc":"19326:6:10","nodeType":"YulIdentifier","src":"19326:6:10"},"nativeSrc":"19326:105:10","nodeType":"YulFunctionCall","src":"19326:105:10"},"nativeSrc":"19326:105:10","nodeType":"YulExpressionStatement","src":"19326:105:10"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"19168:269:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"19221:4:10","nodeType":"YulTypedName","src":"19221:4:10","type":""},{"name":"offset","nativeSrc":"19227:6:10","nodeType":"YulTypedName","src":"19227:6:10","type":""},{"name":"value_0","nativeSrc":"19235:7:10","nodeType":"YulTypedName","src":"19235:7:10","type":""}],"src":"19168:269:10"},{"body":{"nativeSrc":"19492:24:10","nodeType":"YulBlock","src":"19492:24:10","statements":[{"nativeSrc":"19502:8:10","nodeType":"YulAssignment","src":"19502:8:10","value":{"kind":"number","nativeSrc":"19509:1:10","nodeType":"YulLiteral","src":"19509:1:10","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"19502:3:10","nodeType":"YulIdentifier","src":"19502:3:10"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"19443:73:10","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"19488:3:10","nodeType":"YulTypedName","src":"19488:3:10","type":""}],"src":"19443:73:10"},{"body":{"nativeSrc":"19575:136:10","nodeType":"YulBlock","src":"19575:136:10","statements":[{"nativeSrc":"19585:46:10","nodeType":"YulVariableDeclaration","src":"19585:46:10","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"19599:30:10","nodeType":"YulIdentifier","src":"19599:30:10"},"nativeSrc":"19599:32:10","nodeType":"YulFunctionCall","src":"19599:32:10"},"variables":[{"name":"zero_0","nativeSrc":"19589:6:10","nodeType":"YulTypedName","src":"19589:6:10","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"19684:4:10","nodeType":"YulIdentifier","src":"19684:4:10"},{"name":"offset","nativeSrc":"19690:6:10","nodeType":"YulIdentifier","src":"19690:6:10"},{"name":"zero_0","nativeSrc":"19698:6:10","nodeType":"YulIdentifier","src":"19698:6:10"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"19640:43:10","nodeType":"YulIdentifier","src":"19640:43:10"},"nativeSrc":"19640:65:10","nodeType":"YulFunctionCall","src":"19640:65:10"},"nativeSrc":"19640:65:10","nodeType":"YulExpressionStatement","src":"19640:65:10"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"19522:189:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"19561:4:10","nodeType":"YulTypedName","src":"19561:4:10","type":""},{"name":"offset","nativeSrc":"19567:6:10","nodeType":"YulTypedName","src":"19567:6:10","type":""}],"src":"19522:189:10"},{"body":{"nativeSrc":"19767:136:10","nodeType":"YulBlock","src":"19767:136:10","statements":[{"body":{"nativeSrc":"19834:63:10","nodeType":"YulBlock","src":"19834:63:10","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"19878:5:10","nodeType":"YulIdentifier","src":"19878:5:10"},{"kind":"number","nativeSrc":"19885:1:10","nodeType":"YulLiteral","src":"19885:1:10","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"19848:29:10","nodeType":"YulIdentifier","src":"19848:29:10"},"nativeSrc":"19848:39:10","nodeType":"YulFunctionCall","src":"19848:39:10"},"nativeSrc":"19848:39:10","nodeType":"YulExpressionStatement","src":"19848:39:10"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"19787:5:10","nodeType":"YulIdentifier","src":"19787:5:10"},{"name":"end","nativeSrc":"19794:3:10","nodeType":"YulIdentifier","src":"19794:3:10"}],"functionName":{"name":"lt","nativeSrc":"19784:2:10","nodeType":"YulIdentifier","src":"19784:2:10"},"nativeSrc":"19784:14:10","nodeType":"YulFunctionCall","src":"19784:14:10"},"nativeSrc":"19777:120:10","nodeType":"YulForLoop","post":{"nativeSrc":"19799:26:10","nodeType":"YulBlock","src":"19799:26:10","statements":[{"nativeSrc":"19801:22:10","nodeType":"YulAssignment","src":"19801:22:10","value":{"arguments":[{"name":"start","nativeSrc":"19814:5:10","nodeType":"YulIdentifier","src":"19814:5:10"},{"kind":"number","nativeSrc":"19821:1:10","nodeType":"YulLiteral","src":"19821:1:10","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"19810:3:10","nodeType":"YulIdentifier","src":"19810:3:10"},"nativeSrc":"19810:13:10","nodeType":"YulFunctionCall","src":"19810:13:10"},"variableNames":[{"name":"start","nativeSrc":"19801:5:10","nodeType":"YulIdentifier","src":"19801:5:10"}]}]},"pre":{"nativeSrc":"19781:2:10","nodeType":"YulBlock","src":"19781:2:10","statements":[]},"src":"19777:120:10"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"19717:186:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"19755:5:10","nodeType":"YulTypedName","src":"19755:5:10","type":""},{"name":"end","nativeSrc":"19762:3:10","nodeType":"YulTypedName","src":"19762:3:10","type":""}],"src":"19717:186:10"},{"body":{"nativeSrc":"19988:464:10","nodeType":"YulBlock","src":"19988:464:10","statements":[{"body":{"nativeSrc":"20014:431:10","nodeType":"YulBlock","src":"20014:431:10","statements":[{"nativeSrc":"20028:54:10","nodeType":"YulVariableDeclaration","src":"20028:54:10","value":{"arguments":[{"name":"array","nativeSrc":"20076:5:10","nodeType":"YulIdentifier","src":"20076:5:10"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"20044:31:10","nodeType":"YulIdentifier","src":"20044:31:10"},"nativeSrc":"20044:38:10","nodeType":"YulFunctionCall","src":"20044:38:10"},"variables":[{"name":"dataArea","nativeSrc":"20032:8:10","nodeType":"YulTypedName","src":"20032:8:10","type":""}]},{"nativeSrc":"20095:63:10","nodeType":"YulVariableDeclaration","src":"20095:63:10","value":{"arguments":[{"name":"dataArea","nativeSrc":"20118:8:10","nodeType":"YulIdentifier","src":"20118:8:10"},{"arguments":[{"name":"startIndex","nativeSrc":"20146:10:10","nodeType":"YulIdentifier","src":"20146:10:10"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"20128:17:10","nodeType":"YulIdentifier","src":"20128:17:10"},"nativeSrc":"20128:29:10","nodeType":"YulFunctionCall","src":"20128:29:10"}],"functionName":{"name":"add","nativeSrc":"20114:3:10","nodeType":"YulIdentifier","src":"20114:3:10"},"nativeSrc":"20114:44:10","nodeType":"YulFunctionCall","src":"20114:44:10"},"variables":[{"name":"deleteStart","nativeSrc":"20099:11:10","nodeType":"YulTypedName","src":"20099:11:10","type":""}]},{"body":{"nativeSrc":"20315:27:10","nodeType":"YulBlock","src":"20315:27:10","statements":[{"nativeSrc":"20317:23:10","nodeType":"YulAssignment","src":"20317:23:10","value":{"name":"dataArea","nativeSrc":"20332:8:10","nodeType":"YulIdentifier","src":"20332:8:10"},"variableNames":[{"name":"deleteStart","nativeSrc":"20317:11:10","nodeType":"YulIdentifier","src":"20317:11:10"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"20299:10:10","nodeType":"YulIdentifier","src":"20299:10:10"},{"kind":"number","nativeSrc":"20311:2:10","nodeType":"YulLiteral","src":"20311:2:10","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"20296:2:10","nodeType":"YulIdentifier","src":"20296:2:10"},"nativeSrc":"20296:18:10","nodeType":"YulFunctionCall","src":"20296:18:10"},"nativeSrc":"20293:49:10","nodeType":"YulIf","src":"20293:49:10"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"20384:11:10","nodeType":"YulIdentifier","src":"20384:11:10"},{"arguments":[{"name":"dataArea","nativeSrc":"20401:8:10","nodeType":"YulIdentifier","src":"20401:8:10"},{"arguments":[{"name":"len","nativeSrc":"20429:3:10","nodeType":"YulIdentifier","src":"20429:3:10"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"20411:17:10","nodeType":"YulIdentifier","src":"20411:17:10"},"nativeSrc":"20411:22:10","nodeType":"YulFunctionCall","src":"20411:22:10"}],"functionName":{"name":"add","nativeSrc":"20397:3:10","nodeType":"YulIdentifier","src":"20397:3:10"},"nativeSrc":"20397:37:10","nodeType":"YulFunctionCall","src":"20397:37:10"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"20355:28:10","nodeType":"YulIdentifier","src":"20355:28:10"},"nativeSrc":"20355:80:10","nodeType":"YulFunctionCall","src":"20355:80:10"},"nativeSrc":"20355:80:10","nodeType":"YulExpressionStatement","src":"20355:80:10"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"20005:3:10","nodeType":"YulIdentifier","src":"20005:3:10"},{"kind":"number","nativeSrc":"20010:2:10","nodeType":"YulLiteral","src":"20010:2:10","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"20002:2:10","nodeType":"YulIdentifier","src":"20002:2:10"},"nativeSrc":"20002:11:10","nodeType":"YulFunctionCall","src":"20002:11:10"},"nativeSrc":"19999:446:10","nodeType":"YulIf","src":"19999:446:10"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"19909:543:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"19964:5:10","nodeType":"YulTypedName","src":"19964:5:10","type":""},{"name":"len","nativeSrc":"19971:3:10","nodeType":"YulTypedName","src":"19971:3:10","type":""},{"name":"startIndex","nativeSrc":"19976:10:10","nodeType":"YulTypedName","src":"19976:10:10","type":""}],"src":"19909:543:10"},{"body":{"nativeSrc":"20521:54:10","nodeType":"YulBlock","src":"20521:54:10","statements":[{"nativeSrc":"20531:37:10","nodeType":"YulAssignment","src":"20531:37:10","value":{"arguments":[{"name":"bits","nativeSrc":"20556:4:10","nodeType":"YulIdentifier","src":"20556:4:10"},{"name":"value","nativeSrc":"20562:5:10","nodeType":"YulIdentifier","src":"20562:5:10"}],"functionName":{"name":"shr","nativeSrc":"20552:3:10","nodeType":"YulIdentifier","src":"20552:3:10"},"nativeSrc":"20552:16:10","nodeType":"YulFunctionCall","src":"20552:16:10"},"variableNames":[{"name":"newValue","nativeSrc":"20531:8:10","nodeType":"YulIdentifier","src":"20531:8:10"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"20458:117:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"20496:4:10","nodeType":"YulTypedName","src":"20496:4:10","type":""},{"name":"value","nativeSrc":"20502:5:10","nodeType":"YulTypedName","src":"20502:5:10","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"20512:8:10","nodeType":"YulTypedName","src":"20512:8:10","type":""}],"src":"20458:117:10"},{"body":{"nativeSrc":"20632:118:10","nodeType":"YulBlock","src":"20632:118:10","statements":[{"nativeSrc":"20642:68:10","nodeType":"YulVariableDeclaration","src":"20642:68:10","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"20691:1:10","nodeType":"YulLiteral","src":"20691:1:10","type":"","value":"8"},{"name":"bytes","nativeSrc":"20694:5:10","nodeType":"YulIdentifier","src":"20694:5:10"}],"functionName":{"name":"mul","nativeSrc":"20687:3:10","nodeType":"YulIdentifier","src":"20687:3:10"},"nativeSrc":"20687:13:10","nodeType":"YulFunctionCall","src":"20687:13:10"},{"arguments":[{"kind":"number","nativeSrc":"20706:1:10","nodeType":"YulLiteral","src":"20706:1:10","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"20702:3:10","nodeType":"YulIdentifier","src":"20702:3:10"},"nativeSrc":"20702:6:10","nodeType":"YulFunctionCall","src":"20702:6:10"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"20658:28:10","nodeType":"YulIdentifier","src":"20658:28:10"},"nativeSrc":"20658:51:10","nodeType":"YulFunctionCall","src":"20658:51:10"}],"functionName":{"name":"not","nativeSrc":"20654:3:10","nodeType":"YulIdentifier","src":"20654:3:10"},"nativeSrc":"20654:56:10","nodeType":"YulFunctionCall","src":"20654:56:10"},"variables":[{"name":"mask","nativeSrc":"20646:4:10","nodeType":"YulTypedName","src":"20646:4:10","type":""}]},{"nativeSrc":"20719:25:10","nodeType":"YulAssignment","src":"20719:25:10","value":{"arguments":[{"name":"data","nativeSrc":"20733:4:10","nodeType":"YulIdentifier","src":"20733:4:10"},{"name":"mask","nativeSrc":"20739:4:10","nodeType":"YulIdentifier","src":"20739:4:10"}],"functionName":{"name":"and","nativeSrc":"20729:3:10","nodeType":"YulIdentifier","src":"20729:3:10"},"nativeSrc":"20729:15:10","nodeType":"YulFunctionCall","src":"20729:15:10"},"variableNames":[{"name":"result","nativeSrc":"20719:6:10","nodeType":"YulIdentifier","src":"20719:6:10"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"20581:169:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"20609:4:10","nodeType":"YulTypedName","src":"20609:4:10","type":""},{"name":"bytes","nativeSrc":"20615:5:10","nodeType":"YulTypedName","src":"20615:5:10","type":""}],"returnVariables":[{"name":"result","nativeSrc":"20625:6:10","nodeType":"YulTypedName","src":"20625:6:10","type":""}],"src":"20581:169:10"},{"body":{"nativeSrc":"20836:214:10","nodeType":"YulBlock","src":"20836:214:10","statements":[{"nativeSrc":"20969:37:10","nodeType":"YulAssignment","src":"20969:37:10","value":{"arguments":[{"name":"data","nativeSrc":"20996:4:10","nodeType":"YulIdentifier","src":"20996:4:10"},{"name":"len","nativeSrc":"21002:3:10","nodeType":"YulIdentifier","src":"21002:3:10"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"20977:18:10","nodeType":"YulIdentifier","src":"20977:18:10"},"nativeSrc":"20977:29:10","nodeType":"YulFunctionCall","src":"20977:29:10"},"variableNames":[{"name":"data","nativeSrc":"20969:4:10","nodeType":"YulIdentifier","src":"20969:4:10"}]},{"nativeSrc":"21015:29:10","nodeType":"YulAssignment","src":"21015:29:10","value":{"arguments":[{"name":"data","nativeSrc":"21026:4:10","nodeType":"YulIdentifier","src":"21026:4:10"},{"arguments":[{"kind":"number","nativeSrc":"21036:1:10","nodeType":"YulLiteral","src":"21036:1:10","type":"","value":"2"},{"name":"len","nativeSrc":"21039:3:10","nodeType":"YulIdentifier","src":"21039:3:10"}],"functionName":{"name":"mul","nativeSrc":"21032:3:10","nodeType":"YulIdentifier","src":"21032:3:10"},"nativeSrc":"21032:11:10","nodeType":"YulFunctionCall","src":"21032:11:10"}],"functionName":{"name":"or","nativeSrc":"21023:2:10","nodeType":"YulIdentifier","src":"21023:2:10"},"nativeSrc":"21023:21:10","nodeType":"YulFunctionCall","src":"21023:21:10"},"variableNames":[{"name":"used","nativeSrc":"21015:4:10","nodeType":"YulIdentifier","src":"21015:4:10"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"20755:295:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"20817:4:10","nodeType":"YulTypedName","src":"20817:4:10","type":""},{"name":"len","nativeSrc":"20823:3:10","nodeType":"YulTypedName","src":"20823:3:10","type":""}],"returnVariables":[{"name":"used","nativeSrc":"20831:4:10","nodeType":"YulTypedName","src":"20831:4:10","type":""}],"src":"20755:295:10"},{"body":{"nativeSrc":"21147:1303:10","nodeType":"YulBlock","src":"21147:1303:10","statements":[{"nativeSrc":"21158:51:10","nodeType":"YulVariableDeclaration","src":"21158:51:10","value":{"arguments":[{"name":"src","nativeSrc":"21205:3:10","nodeType":"YulIdentifier","src":"21205:3:10"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"21172:32:10","nodeType":"YulIdentifier","src":"21172:32:10"},"nativeSrc":"21172:37:10","nodeType":"YulFunctionCall","src":"21172:37:10"},"variables":[{"name":"newLen","nativeSrc":"21162:6:10","nodeType":"YulTypedName","src":"21162:6:10","type":""}]},{"body":{"nativeSrc":"21294:22:10","nodeType":"YulBlock","src":"21294:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"21296:16:10","nodeType":"YulIdentifier","src":"21296:16:10"},"nativeSrc":"21296:18:10","nodeType":"YulFunctionCall","src":"21296:18:10"},"nativeSrc":"21296:18:10","nodeType":"YulExpressionStatement","src":"21296:18:10"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"21266:6:10","nodeType":"YulIdentifier","src":"21266:6:10"},{"kind":"number","nativeSrc":"21274:18:10","nodeType":"YulLiteral","src":"21274:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"21263:2:10","nodeType":"YulIdentifier","src":"21263:2:10"},"nativeSrc":"21263:30:10","nodeType":"YulFunctionCall","src":"21263:30:10"},"nativeSrc":"21260:56:10","nodeType":"YulIf","src":"21260:56:10"},{"nativeSrc":"21326:52:10","nodeType":"YulVariableDeclaration","src":"21326:52:10","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"21372:4:10","nodeType":"YulIdentifier","src":"21372:4:10"}],"functionName":{"name":"sload","nativeSrc":"21366:5:10","nodeType":"YulIdentifier","src":"21366:5:10"},"nativeSrc":"21366:11:10","nodeType":"YulFunctionCall","src":"21366:11:10"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"21340:25:10","nodeType":"YulIdentifier","src":"21340:25:10"},"nativeSrc":"21340:38:10","nodeType":"YulFunctionCall","src":"21340:38:10"},"variables":[{"name":"oldLen","nativeSrc":"21330:6:10","nodeType":"YulTypedName","src":"21330:6:10","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"21471:4:10","nodeType":"YulIdentifier","src":"21471:4:10"},{"name":"oldLen","nativeSrc":"21477:6:10","nodeType":"YulIdentifier","src":"21477:6:10"},{"name":"newLen","nativeSrc":"21485:6:10","nodeType":"YulIdentifier","src":"21485:6:10"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"21425:45:10","nodeType":"YulIdentifier","src":"21425:45:10"},"nativeSrc":"21425:67:10","nodeType":"YulFunctionCall","src":"21425:67:10"},"nativeSrc":"21425:67:10","nodeType":"YulExpressionStatement","src":"21425:67:10"},{"nativeSrc":"21502:18:10","nodeType":"YulVariableDeclaration","src":"21502:18:10","value":{"kind":"number","nativeSrc":"21519:1:10","nodeType":"YulLiteral","src":"21519:1:10","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"21506:9:10","nodeType":"YulTypedName","src":"21506:9:10","type":""}]},{"nativeSrc":"21530:17:10","nodeType":"YulAssignment","src":"21530:17:10","value":{"kind":"number","nativeSrc":"21543:4:10","nodeType":"YulLiteral","src":"21543:4:10","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"21530:9:10","nodeType":"YulIdentifier","src":"21530:9:10"}]},{"cases":[{"body":{"nativeSrc":"21594:611:10","nodeType":"YulBlock","src":"21594:611:10","statements":[{"nativeSrc":"21608:37:10","nodeType":"YulVariableDeclaration","src":"21608:37:10","value":{"arguments":[{"name":"newLen","nativeSrc":"21627:6:10","nodeType":"YulIdentifier","src":"21627:6:10"},{"arguments":[{"kind":"number","nativeSrc":"21639:4:10","nodeType":"YulLiteral","src":"21639:4:10","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"21635:3:10","nodeType":"YulIdentifier","src":"21635:3:10"},"nativeSrc":"21635:9:10","nodeType":"YulFunctionCall","src":"21635:9:10"}],"functionName":{"name":"and","nativeSrc":"21623:3:10","nodeType":"YulIdentifier","src":"21623:3:10"},"nativeSrc":"21623:22:10","nodeType":"YulFunctionCall","src":"21623:22:10"},"variables":[{"name":"loopEnd","nativeSrc":"21612:7:10","nodeType":"YulTypedName","src":"21612:7:10","type":""}]},{"nativeSrc":"21659:51:10","nodeType":"YulVariableDeclaration","src":"21659:51:10","value":{"arguments":[{"name":"slot","nativeSrc":"21705:4:10","nodeType":"YulIdentifier","src":"21705:4:10"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"21673:31:10","nodeType":"YulIdentifier","src":"21673:31:10"},"nativeSrc":"21673:37:10","nodeType":"YulFunctionCall","src":"21673:37:10"},"variables":[{"name":"dstPtr","nativeSrc":"21663:6:10","nodeType":"YulTypedName","src":"21663:6:10","type":""}]},{"nativeSrc":"21723:10:10","nodeType":"YulVariableDeclaration","src":"21723:10:10","value":{"kind":"number","nativeSrc":"21732:1:10","nodeType":"YulLiteral","src":"21732:1:10","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"21727:1:10","nodeType":"YulTypedName","src":"21727:1:10","type":""}]},{"body":{"nativeSrc":"21791:163:10","nodeType":"YulBlock","src":"21791:163:10","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"21816:6:10","nodeType":"YulIdentifier","src":"21816:6:10"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"21834:3:10","nodeType":"YulIdentifier","src":"21834:3:10"},{"name":"srcOffset","nativeSrc":"21839:9:10","nodeType":"YulIdentifier","src":"21839:9:10"}],"functionName":{"name":"add","nativeSrc":"21830:3:10","nodeType":"YulIdentifier","src":"21830:3:10"},"nativeSrc":"21830:19:10","nodeType":"YulFunctionCall","src":"21830:19:10"}],"functionName":{"name":"mload","nativeSrc":"21824:5:10","nodeType":"YulIdentifier","src":"21824:5:10"},"nativeSrc":"21824:26:10","nodeType":"YulFunctionCall","src":"21824:26:10"}],"functionName":{"name":"sstore","nativeSrc":"21809:6:10","nodeType":"YulIdentifier","src":"21809:6:10"},"nativeSrc":"21809:42:10","nodeType":"YulFunctionCall","src":"21809:42:10"},"nativeSrc":"21809:42:10","nodeType":"YulExpressionStatement","src":"21809:42:10"},{"nativeSrc":"21868:24:10","nodeType":"YulAssignment","src":"21868:24:10","value":{"arguments":[{"name":"dstPtr","nativeSrc":"21882:6:10","nodeType":"YulIdentifier","src":"21882:6:10"},{"kind":"number","nativeSrc":"21890:1:10","nodeType":"YulLiteral","src":"21890:1:10","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"21878:3:10","nodeType":"YulIdentifier","src":"21878:3:10"},"nativeSrc":"21878:14:10","nodeType":"YulFunctionCall","src":"21878:14:10"},"variableNames":[{"name":"dstPtr","nativeSrc":"21868:6:10","nodeType":"YulIdentifier","src":"21868:6:10"}]},{"nativeSrc":"21909:31:10","nodeType":"YulAssignment","src":"21909:31:10","value":{"arguments":[{"name":"srcOffset","nativeSrc":"21926:9:10","nodeType":"YulIdentifier","src":"21926:9:10"},{"kind":"number","nativeSrc":"21937:2:10","nodeType":"YulLiteral","src":"21937:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21922:3:10","nodeType":"YulIdentifier","src":"21922:3:10"},"nativeSrc":"21922:18:10","nodeType":"YulFunctionCall","src":"21922:18:10"},"variableNames":[{"name":"srcOffset","nativeSrc":"21909:9:10","nodeType":"YulIdentifier","src":"21909:9:10"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"21757:1:10","nodeType":"YulIdentifier","src":"21757:1:10"},{"name":"loopEnd","nativeSrc":"21760:7:10","nodeType":"YulIdentifier","src":"21760:7:10"}],"functionName":{"name":"lt","nativeSrc":"21754:2:10","nodeType":"YulIdentifier","src":"21754:2:10"},"nativeSrc":"21754:14:10","nodeType":"YulFunctionCall","src":"21754:14:10"},"nativeSrc":"21746:208:10","nodeType":"YulForLoop","post":{"nativeSrc":"21769:21:10","nodeType":"YulBlock","src":"21769:21:10","statements":[{"nativeSrc":"21771:17:10","nodeType":"YulAssignment","src":"21771:17:10","value":{"arguments":[{"name":"i","nativeSrc":"21780:1:10","nodeType":"YulIdentifier","src":"21780:1:10"},{"kind":"number","nativeSrc":"21783:4:10","nodeType":"YulLiteral","src":"21783:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"21776:3:10","nodeType":"YulIdentifier","src":"21776:3:10"},"nativeSrc":"21776:12:10","nodeType":"YulFunctionCall","src":"21776:12:10"},"variableNames":[{"name":"i","nativeSrc":"21771:1:10","nodeType":"YulIdentifier","src":"21771:1:10"}]}]},"pre":{"nativeSrc":"21750:3:10","nodeType":"YulBlock","src":"21750:3:10","statements":[]},"src":"21746:208:10"},{"body":{"nativeSrc":"21990:156:10","nodeType":"YulBlock","src":"21990:156:10","statements":[{"nativeSrc":"22008:43:10","nodeType":"YulVariableDeclaration","src":"22008:43:10","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"22035:3:10","nodeType":"YulIdentifier","src":"22035:3:10"},{"name":"srcOffset","nativeSrc":"22040:9:10","nodeType":"YulIdentifier","src":"22040:9:10"}],"functionName":{"name":"add","nativeSrc":"22031:3:10","nodeType":"YulIdentifier","src":"22031:3:10"},"nativeSrc":"22031:19:10","nodeType":"YulFunctionCall","src":"22031:19:10"}],"functionName":{"name":"mload","nativeSrc":"22025:5:10","nodeType":"YulIdentifier","src":"22025:5:10"},"nativeSrc":"22025:26:10","nodeType":"YulFunctionCall","src":"22025:26:10"},"variables":[{"name":"lastValue","nativeSrc":"22012:9:10","nodeType":"YulTypedName","src":"22012:9:10","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"22075:6:10","nodeType":"YulIdentifier","src":"22075:6:10"},{"arguments":[{"name":"lastValue","nativeSrc":"22102:9:10","nodeType":"YulIdentifier","src":"22102:9:10"},{"arguments":[{"name":"newLen","nativeSrc":"22117:6:10","nodeType":"YulIdentifier","src":"22117:6:10"},{"kind":"number","nativeSrc":"22125:4:10","nodeType":"YulLiteral","src":"22125:4:10","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"22113:3:10","nodeType":"YulIdentifier","src":"22113:3:10"},"nativeSrc":"22113:17:10","nodeType":"YulFunctionCall","src":"22113:17:10"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"22083:18:10","nodeType":"YulIdentifier","src":"22083:18:10"},"nativeSrc":"22083:48:10","nodeType":"YulFunctionCall","src":"22083:48:10"}],"functionName":{"name":"sstore","nativeSrc":"22068:6:10","nodeType":"YulIdentifier","src":"22068:6:10"},"nativeSrc":"22068:64:10","nodeType":"YulFunctionCall","src":"22068:64:10"},"nativeSrc":"22068:64:10","nodeType":"YulExpressionStatement","src":"22068:64:10"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"21973:7:10","nodeType":"YulIdentifier","src":"21973:7:10"},{"name":"newLen","nativeSrc":"21982:6:10","nodeType":"YulIdentifier","src":"21982:6:10"}],"functionName":{"name":"lt","nativeSrc":"21970:2:10","nodeType":"YulIdentifier","src":"21970:2:10"},"nativeSrc":"21970:19:10","nodeType":"YulFunctionCall","src":"21970:19:10"},"nativeSrc":"21967:179:10","nodeType":"YulIf","src":"21967:179:10"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"22166:4:10","nodeType":"YulIdentifier","src":"22166:4:10"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"22180:6:10","nodeType":"YulIdentifier","src":"22180:6:10"},{"kind":"number","nativeSrc":"22188:1:10","nodeType":"YulLiteral","src":"22188:1:10","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"22176:3:10","nodeType":"YulIdentifier","src":"22176:3:10"},"nativeSrc":"22176:14:10","nodeType":"YulFunctionCall","src":"22176:14:10"},{"kind":"number","nativeSrc":"22192:1:10","nodeType":"YulLiteral","src":"22192:1:10","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"22172:3:10","nodeType":"YulIdentifier","src":"22172:3:10"},"nativeSrc":"22172:22:10","nodeType":"YulFunctionCall","src":"22172:22:10"}],"functionName":{"name":"sstore","nativeSrc":"22159:6:10","nodeType":"YulIdentifier","src":"22159:6:10"},"nativeSrc":"22159:36:10","nodeType":"YulFunctionCall","src":"22159:36:10"},"nativeSrc":"22159:36:10","nodeType":"YulExpressionStatement","src":"22159:36:10"}]},"nativeSrc":"21587:618:10","nodeType":"YulCase","src":"21587:618:10","value":{"kind":"number","nativeSrc":"21592:1:10","nodeType":"YulLiteral","src":"21592:1:10","type":"","value":"1"}},{"body":{"nativeSrc":"22222:222:10","nodeType":"YulBlock","src":"22222:222:10","statements":[{"nativeSrc":"22236:14:10","nodeType":"YulVariableDeclaration","src":"22236:14:10","value":{"kind":"number","nativeSrc":"22249:1:10","nodeType":"YulLiteral","src":"22249:1:10","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"22240:5:10","nodeType":"YulTypedName","src":"22240:5:10","type":""}]},{"body":{"nativeSrc":"22273:67:10","nodeType":"YulBlock","src":"22273:67:10","statements":[{"nativeSrc":"22291:35:10","nodeType":"YulAssignment","src":"22291:35:10","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"22310:3:10","nodeType":"YulIdentifier","src":"22310:3:10"},{"name":"srcOffset","nativeSrc":"22315:9:10","nodeType":"YulIdentifier","src":"22315:9:10"}],"functionName":{"name":"add","nativeSrc":"22306:3:10","nodeType":"YulIdentifier","src":"22306:3:10"},"nativeSrc":"22306:19:10","nodeType":"YulFunctionCall","src":"22306:19:10"}],"functionName":{"name":"mload","nativeSrc":"22300:5:10","nodeType":"YulIdentifier","src":"22300:5:10"},"nativeSrc":"22300:26:10","nodeType":"YulFunctionCall","src":"22300:26:10"},"variableNames":[{"name":"value","nativeSrc":"22291:5:10","nodeType":"YulIdentifier","src":"22291:5:10"}]}]},"condition":{"name":"newLen","nativeSrc":"22266:6:10","nodeType":"YulIdentifier","src":"22266:6:10"},"nativeSrc":"22263:77:10","nodeType":"YulIf","src":"22263:77:10"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"22360:4:10","nodeType":"YulIdentifier","src":"22360:4:10"},{"arguments":[{"name":"value","nativeSrc":"22419:5:10","nodeType":"YulIdentifier","src":"22419:5:10"},{"name":"newLen","nativeSrc":"22426:6:10","nodeType":"YulIdentifier","src":"22426:6:10"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"22366:52:10","nodeType":"YulIdentifier","src":"22366:52:10"},"nativeSrc":"22366:67:10","nodeType":"YulFunctionCall","src":"22366:67:10"}],"functionName":{"name":"sstore","nativeSrc":"22353:6:10","nodeType":"YulIdentifier","src":"22353:6:10"},"nativeSrc":"22353:81:10","nodeType":"YulFunctionCall","src":"22353:81:10"},"nativeSrc":"22353:81:10","nodeType":"YulExpressionStatement","src":"22353:81:10"}]},"nativeSrc":"22214:230:10","nodeType":"YulCase","src":"22214:230:10","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"21567:6:10","nodeType":"YulIdentifier","src":"21567:6:10"},{"kind":"number","nativeSrc":"21575:2:10","nodeType":"YulLiteral","src":"21575:2:10","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"21564:2:10","nodeType":"YulIdentifier","src":"21564:2:10"},"nativeSrc":"21564:14:10","nodeType":"YulFunctionCall","src":"21564:14:10"},"nativeSrc":"21557:887:10","nodeType":"YulSwitch","src":"21557:887:10"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"21055:1395:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"21136:4:10","nodeType":"YulTypedName","src":"21136:4:10","type":""},{"name":"src","nativeSrc":"21142:3:10","nodeType":"YulTypedName","src":"21142:3:10","type":""}],"src":"21055:1395:10"},{"body":{"nativeSrc":"22562:71:10","nodeType":"YulBlock","src":"22562:71:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"22584:6:10","nodeType":"YulIdentifier","src":"22584:6:10"},{"kind":"number","nativeSrc":"22592:1:10","nodeType":"YulLiteral","src":"22592:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22580:3:10","nodeType":"YulIdentifier","src":"22580:3:10"},"nativeSrc":"22580:14:10","nodeType":"YulFunctionCall","src":"22580:14:10"},{"hexValue":"496e76616c696420535020696e7374616e63652061646472657373","kind":"string","nativeSrc":"22596:29:10","nodeType":"YulLiteral","src":"22596:29:10","type":"","value":"Invalid SP instance address"}],"functionName":{"name":"mstore","nativeSrc":"22573:6:10","nodeType":"YulIdentifier","src":"22573:6:10"},"nativeSrc":"22573:53:10","nodeType":"YulFunctionCall","src":"22573:53:10"},"nativeSrc":"22573:53:10","nodeType":"YulExpressionStatement","src":"22573:53:10"}]},"name":"store_literal_in_memory_c8dd3191f3dcc39739dca1bcaf395cf1761dcb1f4ca0dd96a0d29ee3f0de65f4","nativeSrc":"22456:177:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"22554:6:10","nodeType":"YulTypedName","src":"22554:6:10","type":""}],"src":"22456:177:10"},{"body":{"nativeSrc":"22785:220:10","nodeType":"YulBlock","src":"22785:220:10","statements":[{"nativeSrc":"22795:74:10","nodeType":"YulAssignment","src":"22795:74:10","value":{"arguments":[{"name":"pos","nativeSrc":"22861:3:10","nodeType":"YulIdentifier","src":"22861:3:10"},{"kind":"number","nativeSrc":"22866:2:10","nodeType":"YulLiteral","src":"22866:2:10","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"22802:58:10","nodeType":"YulIdentifier","src":"22802:58:10"},"nativeSrc":"22802:67:10","nodeType":"YulFunctionCall","src":"22802:67:10"},"variableNames":[{"name":"pos","nativeSrc":"22795:3:10","nodeType":"YulIdentifier","src":"22795:3:10"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"22967:3:10","nodeType":"YulIdentifier","src":"22967:3:10"}],"functionName":{"name":"store_literal_in_memory_c8dd3191f3dcc39739dca1bcaf395cf1761dcb1f4ca0dd96a0d29ee3f0de65f4","nativeSrc":"22878:88:10","nodeType":"YulIdentifier","src":"22878:88:10"},"nativeSrc":"22878:93:10","nodeType":"YulFunctionCall","src":"22878:93:10"},"nativeSrc":"22878:93:10","nodeType":"YulExpressionStatement","src":"22878:93:10"},{"nativeSrc":"22980:19:10","nodeType":"YulAssignment","src":"22980:19:10","value":{"arguments":[{"name":"pos","nativeSrc":"22991:3:10","nodeType":"YulIdentifier","src":"22991:3:10"},{"kind":"number","nativeSrc":"22996:2:10","nodeType":"YulLiteral","src":"22996:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22987:3:10","nodeType":"YulIdentifier","src":"22987:3:10"},"nativeSrc":"22987:12:10","nodeType":"YulFunctionCall","src":"22987:12:10"},"variableNames":[{"name":"end","nativeSrc":"22980:3:10","nodeType":"YulIdentifier","src":"22980:3:10"}]}]},"name":"abi_encode_t_stringliteral_c8dd3191f3dcc39739dca1bcaf395cf1761dcb1f4ca0dd96a0d29ee3f0de65f4_to_t_string_memory_ptr_fromStack","nativeSrc":"22639:366:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"22773:3:10","nodeType":"YulTypedName","src":"22773:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"22781:3:10","nodeType":"YulTypedName","src":"22781:3:10","type":""}],"src":"22639:366:10"},{"body":{"nativeSrc":"23182:248:10","nodeType":"YulBlock","src":"23182:248:10","statements":[{"nativeSrc":"23192:26:10","nodeType":"YulAssignment","src":"23192:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"23204:9:10","nodeType":"YulIdentifier","src":"23204:9:10"},{"kind":"number","nativeSrc":"23215:2:10","nodeType":"YulLiteral","src":"23215:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23200:3:10","nodeType":"YulIdentifier","src":"23200:3:10"},"nativeSrc":"23200:18:10","nodeType":"YulFunctionCall","src":"23200:18:10"},"variableNames":[{"name":"tail","nativeSrc":"23192:4:10","nodeType":"YulIdentifier","src":"23192:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23239:9:10","nodeType":"YulIdentifier","src":"23239:9:10"},{"kind":"number","nativeSrc":"23250:1:10","nodeType":"YulLiteral","src":"23250:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23235:3:10","nodeType":"YulIdentifier","src":"23235:3:10"},"nativeSrc":"23235:17:10","nodeType":"YulFunctionCall","src":"23235:17:10"},{"arguments":[{"name":"tail","nativeSrc":"23258:4:10","nodeType":"YulIdentifier","src":"23258:4:10"},{"name":"headStart","nativeSrc":"23264:9:10","nodeType":"YulIdentifier","src":"23264:9:10"}],"functionName":{"name":"sub","nativeSrc":"23254:3:10","nodeType":"YulIdentifier","src":"23254:3:10"},"nativeSrc":"23254:20:10","nodeType":"YulFunctionCall","src":"23254:20:10"}],"functionName":{"name":"mstore","nativeSrc":"23228:6:10","nodeType":"YulIdentifier","src":"23228:6:10"},"nativeSrc":"23228:47:10","nodeType":"YulFunctionCall","src":"23228:47:10"},"nativeSrc":"23228:47:10","nodeType":"YulExpressionStatement","src":"23228:47:10"},{"nativeSrc":"23284:139:10","nodeType":"YulAssignment","src":"23284:139:10","value":{"arguments":[{"name":"tail","nativeSrc":"23418:4:10","nodeType":"YulIdentifier","src":"23418:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_c8dd3191f3dcc39739dca1bcaf395cf1761dcb1f4ca0dd96a0d29ee3f0de65f4_to_t_string_memory_ptr_fromStack","nativeSrc":"23292:124:10","nodeType":"YulIdentifier","src":"23292:124:10"},"nativeSrc":"23292:131:10","nodeType":"YulFunctionCall","src":"23292:131:10"},"variableNames":[{"name":"tail","nativeSrc":"23284:4:10","nodeType":"YulIdentifier","src":"23284:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_c8dd3191f3dcc39739dca1bcaf395cf1761dcb1f4ca0dd96a0d29ee3f0de65f4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"23011:419:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23162:9:10","nodeType":"YulTypedName","src":"23162:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"23177:4:10","nodeType":"YulTypedName","src":"23177:4:10","type":""}],"src":"23011:419:10"},{"body":{"nativeSrc":"23542:61:10","nodeType":"YulBlock","src":"23542:61:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"23564:6:10","nodeType":"YulIdentifier","src":"23564:6:10"},{"kind":"number","nativeSrc":"23572:1:10","nodeType":"YulLiteral","src":"23572:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23560:3:10","nodeType":"YulIdentifier","src":"23560:3:10"},"nativeSrc":"23560:14:10","nodeType":"YulFunctionCall","src":"23560:14:10"},{"hexValue":"496e76616c696420736368656d61204944","kind":"string","nativeSrc":"23576:19:10","nodeType":"YulLiteral","src":"23576:19:10","type":"","value":"Invalid schema ID"}],"functionName":{"name":"mstore","nativeSrc":"23553:6:10","nodeType":"YulIdentifier","src":"23553:6:10"},"nativeSrc":"23553:43:10","nodeType":"YulFunctionCall","src":"23553:43:10"},"nativeSrc":"23553:43:10","nodeType":"YulExpressionStatement","src":"23553:43:10"}]},"name":"store_literal_in_memory_3f7f8a0302ff255928d1a72eedf8fbacb95deed18c475d5a03e0d82ca55cffbb","nativeSrc":"23436:167:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"23534:6:10","nodeType":"YulTypedName","src":"23534:6:10","type":""}],"src":"23436:167:10"},{"body":{"nativeSrc":"23755:220:10","nodeType":"YulBlock","src":"23755:220:10","statements":[{"nativeSrc":"23765:74:10","nodeType":"YulAssignment","src":"23765:74:10","value":{"arguments":[{"name":"pos","nativeSrc":"23831:3:10","nodeType":"YulIdentifier","src":"23831:3:10"},{"kind":"number","nativeSrc":"23836:2:10","nodeType":"YulLiteral","src":"23836:2:10","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"23772:58:10","nodeType":"YulIdentifier","src":"23772:58:10"},"nativeSrc":"23772:67:10","nodeType":"YulFunctionCall","src":"23772:67:10"},"variableNames":[{"name":"pos","nativeSrc":"23765:3:10","nodeType":"YulIdentifier","src":"23765:3:10"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"23937:3:10","nodeType":"YulIdentifier","src":"23937:3:10"}],"functionName":{"name":"store_literal_in_memory_3f7f8a0302ff255928d1a72eedf8fbacb95deed18c475d5a03e0d82ca55cffbb","nativeSrc":"23848:88:10","nodeType":"YulIdentifier","src":"23848:88:10"},"nativeSrc":"23848:93:10","nodeType":"YulFunctionCall","src":"23848:93:10"},"nativeSrc":"23848:93:10","nodeType":"YulExpressionStatement","src":"23848:93:10"},{"nativeSrc":"23950:19:10","nodeType":"YulAssignment","src":"23950:19:10","value":{"arguments":[{"name":"pos","nativeSrc":"23961:3:10","nodeType":"YulIdentifier","src":"23961:3:10"},{"kind":"number","nativeSrc":"23966:2:10","nodeType":"YulLiteral","src":"23966:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23957:3:10","nodeType":"YulIdentifier","src":"23957:3:10"},"nativeSrc":"23957:12:10","nodeType":"YulFunctionCall","src":"23957:12:10"},"variableNames":[{"name":"end","nativeSrc":"23950:3:10","nodeType":"YulIdentifier","src":"23950:3:10"}]}]},"name":"abi_encode_t_stringliteral_3f7f8a0302ff255928d1a72eedf8fbacb95deed18c475d5a03e0d82ca55cffbb_to_t_string_memory_ptr_fromStack","nativeSrc":"23609:366:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"23743:3:10","nodeType":"YulTypedName","src":"23743:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"23751:3:10","nodeType":"YulTypedName","src":"23751:3:10","type":""}],"src":"23609:366:10"},{"body":{"nativeSrc":"24152:248:10","nodeType":"YulBlock","src":"24152:248:10","statements":[{"nativeSrc":"24162:26:10","nodeType":"YulAssignment","src":"24162:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"24174:9:10","nodeType":"YulIdentifier","src":"24174:9:10"},{"kind":"number","nativeSrc":"24185:2:10","nodeType":"YulLiteral","src":"24185:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24170:3:10","nodeType":"YulIdentifier","src":"24170:3:10"},"nativeSrc":"24170:18:10","nodeType":"YulFunctionCall","src":"24170:18:10"},"variableNames":[{"name":"tail","nativeSrc":"24162:4:10","nodeType":"YulIdentifier","src":"24162:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24209:9:10","nodeType":"YulIdentifier","src":"24209:9:10"},{"kind":"number","nativeSrc":"24220:1:10","nodeType":"YulLiteral","src":"24220:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24205:3:10","nodeType":"YulIdentifier","src":"24205:3:10"},"nativeSrc":"24205:17:10","nodeType":"YulFunctionCall","src":"24205:17:10"},{"arguments":[{"name":"tail","nativeSrc":"24228:4:10","nodeType":"YulIdentifier","src":"24228:4:10"},{"name":"headStart","nativeSrc":"24234:9:10","nodeType":"YulIdentifier","src":"24234:9:10"}],"functionName":{"name":"sub","nativeSrc":"24224:3:10","nodeType":"YulIdentifier","src":"24224:3:10"},"nativeSrc":"24224:20:10","nodeType":"YulFunctionCall","src":"24224:20:10"}],"functionName":{"name":"mstore","nativeSrc":"24198:6:10","nodeType":"YulIdentifier","src":"24198:6:10"},"nativeSrc":"24198:47:10","nodeType":"YulFunctionCall","src":"24198:47:10"},"nativeSrc":"24198:47:10","nodeType":"YulExpressionStatement","src":"24198:47:10"},{"nativeSrc":"24254:139:10","nodeType":"YulAssignment","src":"24254:139:10","value":{"arguments":[{"name":"tail","nativeSrc":"24388:4:10","nodeType":"YulIdentifier","src":"24388:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_3f7f8a0302ff255928d1a72eedf8fbacb95deed18c475d5a03e0d82ca55cffbb_to_t_string_memory_ptr_fromStack","nativeSrc":"24262:124:10","nodeType":"YulIdentifier","src":"24262:124:10"},"nativeSrc":"24262:131:10","nodeType":"YulFunctionCall","src":"24262:131:10"},"variableNames":[{"name":"tail","nativeSrc":"24254:4:10","nodeType":"YulIdentifier","src":"24254:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_3f7f8a0302ff255928d1a72eedf8fbacb95deed18c475d5a03e0d82ca55cffbb__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"23981:419:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24132:9:10","nodeType":"YulTypedName","src":"24132:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24147:4:10","nodeType":"YulTypedName","src":"24147:4:10","type":""}],"src":"23981:419:10"},{"body":{"nativeSrc":"24501:339:10","nodeType":"YulBlock","src":"24501:339:10","statements":[{"nativeSrc":"24511:75:10","nodeType":"YulAssignment","src":"24511:75:10","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"24578:6:10","nodeType":"YulIdentifier","src":"24578:6:10"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"24536:41:10","nodeType":"YulIdentifier","src":"24536:41:10"},"nativeSrc":"24536:49:10","nodeType":"YulFunctionCall","src":"24536:49:10"}],"functionName":{"name":"allocate_memory","nativeSrc":"24520:15:10","nodeType":"YulIdentifier","src":"24520:15:10"},"nativeSrc":"24520:66:10","nodeType":"YulFunctionCall","src":"24520:66:10"},"variableNames":[{"name":"array","nativeSrc":"24511:5:10","nodeType":"YulIdentifier","src":"24511:5:10"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"24602:5:10","nodeType":"YulIdentifier","src":"24602:5:10"},{"name":"length","nativeSrc":"24609:6:10","nodeType":"YulIdentifier","src":"24609:6:10"}],"functionName":{"name":"mstore","nativeSrc":"24595:6:10","nodeType":"YulIdentifier","src":"24595:6:10"},"nativeSrc":"24595:21:10","nodeType":"YulFunctionCall","src":"24595:21:10"},"nativeSrc":"24595:21:10","nodeType":"YulExpressionStatement","src":"24595:21:10"},{"nativeSrc":"24625:27:10","nodeType":"YulVariableDeclaration","src":"24625:27:10","value":{"arguments":[{"name":"array","nativeSrc":"24640:5:10","nodeType":"YulIdentifier","src":"24640:5:10"},{"kind":"number","nativeSrc":"24647:4:10","nodeType":"YulLiteral","src":"24647:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"24636:3:10","nodeType":"YulIdentifier","src":"24636:3:10"},"nativeSrc":"24636:16:10","nodeType":"YulFunctionCall","src":"24636:16:10"},"variables":[{"name":"dst","nativeSrc":"24629:3:10","nodeType":"YulTypedName","src":"24629:3:10","type":""}]},{"body":{"nativeSrc":"24690:83:10","nodeType":"YulBlock","src":"24690:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"24692:77:10","nodeType":"YulIdentifier","src":"24692:77:10"},"nativeSrc":"24692:79:10","nodeType":"YulFunctionCall","src":"24692:79:10"},"nativeSrc":"24692:79:10","nodeType":"YulExpressionStatement","src":"24692:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"24671:3:10","nodeType":"YulIdentifier","src":"24671:3:10"},{"name":"length","nativeSrc":"24676:6:10","nodeType":"YulIdentifier","src":"24676:6:10"}],"functionName":{"name":"add","nativeSrc":"24667:3:10","nodeType":"YulIdentifier","src":"24667:3:10"},"nativeSrc":"24667:16:10","nodeType":"YulFunctionCall","src":"24667:16:10"},{"name":"end","nativeSrc":"24685:3:10","nodeType":"YulIdentifier","src":"24685:3:10"}],"functionName":{"name":"gt","nativeSrc":"24664:2:10","nodeType":"YulIdentifier","src":"24664:2:10"},"nativeSrc":"24664:25:10","nodeType":"YulFunctionCall","src":"24664:25:10"},"nativeSrc":"24661:112:10","nodeType":"YulIf","src":"24661:112:10"},{"expression":{"arguments":[{"name":"src","nativeSrc":"24817:3:10","nodeType":"YulIdentifier","src":"24817:3:10"},{"name":"dst","nativeSrc":"24822:3:10","nodeType":"YulIdentifier","src":"24822:3:10"},{"name":"length","nativeSrc":"24827:6:10","nodeType":"YulIdentifier","src":"24827:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"24782:34:10","nodeType":"YulIdentifier","src":"24782:34:10"},"nativeSrc":"24782:52:10","nodeType":"YulFunctionCall","src":"24782:52:10"},"nativeSrc":"24782:52:10","nodeType":"YulExpressionStatement","src":"24782:52:10"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"24406:434:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"24474:3:10","nodeType":"YulTypedName","src":"24474:3:10","type":""},{"name":"length","nativeSrc":"24479:6:10","nodeType":"YulTypedName","src":"24479:6:10","type":""},{"name":"end","nativeSrc":"24487:3:10","nodeType":"YulTypedName","src":"24487:3:10","type":""}],"returnVariables":[{"name":"array","nativeSrc":"24495:5:10","nodeType":"YulTypedName","src":"24495:5:10","type":""}],"src":"24406:434:10"},{"body":{"nativeSrc":"24933:282:10","nodeType":"YulBlock","src":"24933:282:10","statements":[{"body":{"nativeSrc":"24982:83:10","nodeType":"YulBlock","src":"24982:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"24984:77:10","nodeType":"YulIdentifier","src":"24984:77:10"},"nativeSrc":"24984:79:10","nodeType":"YulFunctionCall","src":"24984:79:10"},"nativeSrc":"24984:79:10","nodeType":"YulExpressionStatement","src":"24984:79:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"24961:6:10","nodeType":"YulIdentifier","src":"24961:6:10"},{"kind":"number","nativeSrc":"24969:4:10","nodeType":"YulLiteral","src":"24969:4:10","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"24957:3:10","nodeType":"YulIdentifier","src":"24957:3:10"},"nativeSrc":"24957:17:10","nodeType":"YulFunctionCall","src":"24957:17:10"},{"name":"end","nativeSrc":"24976:3:10","nodeType":"YulIdentifier","src":"24976:3:10"}],"functionName":{"name":"slt","nativeSrc":"24953:3:10","nodeType":"YulIdentifier","src":"24953:3:10"},"nativeSrc":"24953:27:10","nodeType":"YulFunctionCall","src":"24953:27:10"}],"functionName":{"name":"iszero","nativeSrc":"24946:6:10","nodeType":"YulIdentifier","src":"24946:6:10"},"nativeSrc":"24946:35:10","nodeType":"YulFunctionCall","src":"24946:35:10"},"nativeSrc":"24943:122:10","nodeType":"YulIf","src":"24943:122:10"},{"nativeSrc":"25074:27:10","nodeType":"YulVariableDeclaration","src":"25074:27:10","value":{"arguments":[{"name":"offset","nativeSrc":"25094:6:10","nodeType":"YulIdentifier","src":"25094:6:10"}],"functionName":{"name":"mload","nativeSrc":"25088:5:10","nodeType":"YulIdentifier","src":"25088:5:10"},"nativeSrc":"25088:13:10","nodeType":"YulFunctionCall","src":"25088:13:10"},"variables":[{"name":"length","nativeSrc":"25078:6:10","nodeType":"YulTypedName","src":"25078:6:10","type":""}]},{"nativeSrc":"25110:99:10","nodeType":"YulAssignment","src":"25110:99:10","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"25182:6:10","nodeType":"YulIdentifier","src":"25182:6:10"},{"kind":"number","nativeSrc":"25190:4:10","nodeType":"YulLiteral","src":"25190:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"25178:3:10","nodeType":"YulIdentifier","src":"25178:3:10"},"nativeSrc":"25178:17:10","nodeType":"YulFunctionCall","src":"25178:17:10"},{"name":"length","nativeSrc":"25197:6:10","nodeType":"YulIdentifier","src":"25197:6:10"},{"name":"end","nativeSrc":"25205:3:10","nodeType":"YulIdentifier","src":"25205:3:10"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"25119:58:10","nodeType":"YulIdentifier","src":"25119:58:10"},"nativeSrc":"25119:90:10","nodeType":"YulFunctionCall","src":"25119:90:10"},"variableNames":[{"name":"array","nativeSrc":"25110:5:10","nodeType":"YulIdentifier","src":"25110:5:10"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"24860:355:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"24911:6:10","nodeType":"YulTypedName","src":"24911:6:10","type":""},{"name":"end","nativeSrc":"24919:3:10","nodeType":"YulTypedName","src":"24919:3:10","type":""}],"returnVariables":[{"name":"array","nativeSrc":"24927:5:10","nodeType":"YulTypedName","src":"24927:5:10","type":""}],"src":"24860:355:10"},{"body":{"nativeSrc":"25284:80:10","nodeType":"YulBlock","src":"25284:80:10","statements":[{"nativeSrc":"25294:22:10","nodeType":"YulAssignment","src":"25294:22:10","value":{"arguments":[{"name":"offset","nativeSrc":"25309:6:10","nodeType":"YulIdentifier","src":"25309:6:10"}],"functionName":{"name":"mload","nativeSrc":"25303:5:10","nodeType":"YulIdentifier","src":"25303:5:10"},"nativeSrc":"25303:13:10","nodeType":"YulFunctionCall","src":"25303:13:10"},"variableNames":[{"name":"value","nativeSrc":"25294:5:10","nodeType":"YulIdentifier","src":"25294:5:10"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"25352:5:10","nodeType":"YulIdentifier","src":"25352:5:10"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"25325:26:10","nodeType":"YulIdentifier","src":"25325:26:10"},"nativeSrc":"25325:33:10","nodeType":"YulFunctionCall","src":"25325:33:10"},"nativeSrc":"25325:33:10","nodeType":"YulExpressionStatement","src":"25325:33:10"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"25221:143:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"25262:6:10","nodeType":"YulTypedName","src":"25262:6:10","type":""},{"name":"end","nativeSrc":"25270:3:10","nodeType":"YulTypedName","src":"25270:3:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"25278:5:10","nodeType":"YulTypedName","src":"25278:5:10","type":""}],"src":"25221:143:10"},{"body":{"nativeSrc":"25474:576:10","nodeType":"YulBlock","src":"25474:576:10","statements":[{"body":{"nativeSrc":"25520:83:10","nodeType":"YulBlock","src":"25520:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"25522:77:10","nodeType":"YulIdentifier","src":"25522:77:10"},"nativeSrc":"25522:79:10","nodeType":"YulFunctionCall","src":"25522:79:10"},"nativeSrc":"25522:79:10","nodeType":"YulExpressionStatement","src":"25522:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"25495:7:10","nodeType":"YulIdentifier","src":"25495:7:10"},{"name":"headStart","nativeSrc":"25504:9:10","nodeType":"YulIdentifier","src":"25504:9:10"}],"functionName":{"name":"sub","nativeSrc":"25491:3:10","nodeType":"YulIdentifier","src":"25491:3:10"},"nativeSrc":"25491:23:10","nodeType":"YulFunctionCall","src":"25491:23:10"},{"kind":"number","nativeSrc":"25516:2:10","nodeType":"YulLiteral","src":"25516:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"25487:3:10","nodeType":"YulIdentifier","src":"25487:3:10"},"nativeSrc":"25487:32:10","nodeType":"YulFunctionCall","src":"25487:32:10"},"nativeSrc":"25484:119:10","nodeType":"YulIf","src":"25484:119:10"},{"nativeSrc":"25613:291:10","nodeType":"YulBlock","src":"25613:291:10","statements":[{"nativeSrc":"25628:38:10","nodeType":"YulVariableDeclaration","src":"25628:38:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25652:9:10","nodeType":"YulIdentifier","src":"25652:9:10"},{"kind":"number","nativeSrc":"25663:1:10","nodeType":"YulLiteral","src":"25663:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"25648:3:10","nodeType":"YulIdentifier","src":"25648:3:10"},"nativeSrc":"25648:17:10","nodeType":"YulFunctionCall","src":"25648:17:10"}],"functionName":{"name":"mload","nativeSrc":"25642:5:10","nodeType":"YulIdentifier","src":"25642:5:10"},"nativeSrc":"25642:24:10","nodeType":"YulFunctionCall","src":"25642:24:10"},"variables":[{"name":"offset","nativeSrc":"25632:6:10","nodeType":"YulTypedName","src":"25632:6:10","type":""}]},{"body":{"nativeSrc":"25713:83:10","nodeType":"YulBlock","src":"25713:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"25715:77:10","nodeType":"YulIdentifier","src":"25715:77:10"},"nativeSrc":"25715:79:10","nodeType":"YulFunctionCall","src":"25715:79:10"},"nativeSrc":"25715:79:10","nodeType":"YulExpressionStatement","src":"25715:79:10"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"25685:6:10","nodeType":"YulIdentifier","src":"25685:6:10"},{"kind":"number","nativeSrc":"25693:18:10","nodeType":"YulLiteral","src":"25693:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"25682:2:10","nodeType":"YulIdentifier","src":"25682:2:10"},"nativeSrc":"25682:30:10","nodeType":"YulFunctionCall","src":"25682:30:10"},"nativeSrc":"25679:117:10","nodeType":"YulIf","src":"25679:117:10"},{"nativeSrc":"25810:84:10","nodeType":"YulAssignment","src":"25810:84:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25866:9:10","nodeType":"YulIdentifier","src":"25866:9:10"},{"name":"offset","nativeSrc":"25877:6:10","nodeType":"YulIdentifier","src":"25877:6:10"}],"functionName":{"name":"add","nativeSrc":"25862:3:10","nodeType":"YulIdentifier","src":"25862:3:10"},"nativeSrc":"25862:22:10","nodeType":"YulFunctionCall","src":"25862:22:10"},{"name":"dataEnd","nativeSrc":"25886:7:10","nodeType":"YulIdentifier","src":"25886:7:10"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"25820:41:10","nodeType":"YulIdentifier","src":"25820:41:10"},"nativeSrc":"25820:74:10","nodeType":"YulFunctionCall","src":"25820:74:10"},"variableNames":[{"name":"value0","nativeSrc":"25810:6:10","nodeType":"YulIdentifier","src":"25810:6:10"}]}]},{"nativeSrc":"25914:129:10","nodeType":"YulBlock","src":"25914:129:10","statements":[{"nativeSrc":"25929:16:10","nodeType":"YulVariableDeclaration","src":"25929:16:10","value":{"kind":"number","nativeSrc":"25943:2:10","nodeType":"YulLiteral","src":"25943:2:10","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"25933:6:10","nodeType":"YulTypedName","src":"25933:6:10","type":""}]},{"nativeSrc":"25959:74:10","nodeType":"YulAssignment","src":"25959:74:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26005:9:10","nodeType":"YulIdentifier","src":"26005:9:10"},{"name":"offset","nativeSrc":"26016:6:10","nodeType":"YulIdentifier","src":"26016:6:10"}],"functionName":{"name":"add","nativeSrc":"26001:3:10","nodeType":"YulIdentifier","src":"26001:3:10"},"nativeSrc":"26001:22:10","nodeType":"YulFunctionCall","src":"26001:22:10"},{"name":"dataEnd","nativeSrc":"26025:7:10","nodeType":"YulIdentifier","src":"26025:7:10"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"25969:31:10","nodeType":"YulIdentifier","src":"25969:31:10"},"nativeSrc":"25969:64:10","nodeType":"YulFunctionCall","src":"25969:64:10"},"variableNames":[{"name":"value1","nativeSrc":"25959:6:10","nodeType":"YulIdentifier","src":"25959:6:10"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256_fromMemory","nativeSrc":"25370:680:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25436:9:10","nodeType":"YulTypedName","src":"25436:9:10","type":""},{"name":"dataEnd","nativeSrc":"25447:7:10","nodeType":"YulTypedName","src":"25447:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"25459:6:10","nodeType":"YulTypedName","src":"25459:6:10","type":""},{"name":"value1","nativeSrc":"25467:6:10","nodeType":"YulTypedName","src":"25467:6:10","type":""}],"src":"25370:680:10"}]},"contents":"{\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_string_memory_ptr_t_uint256__to_t_bool_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // string[] -> string[]\n    function abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISP_$495_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ISP_$495_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISP_$495_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ISP_$495__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISP_$495_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid recipient address\")\n\n    }\n\n    function abi_encode_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988(memPtr) {\n\n        mstore(add(memPtr, 0), \"Course name cannot be empty\")\n\n    }\n\n    function abi_encode_t_stringliteral_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8d3068af7f629cfcb0d131ea5d7dbda08c719575b085eee5157cf10181bf3988_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97(memPtr) {\n\n        mstore(add(memPtr, 0), \"Issue date cannot be in the futu\")\n\n        mstore(add(memPtr, 32), \"re\")\n\n    }\n\n    function abi_encode_t_stringliteral_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_44461803827868cbfb4d4e03c457da79779c3ea198fb5e026e5f52ae55833f97_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_df29a3d526a469d88dc1aca906946c8fa4e298109faf667a9cf40dbe115c170b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Data validation failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_df29a3d526a469d88dc1aca906946c8fa4e298109faf667a9cf40dbe115c170b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_df29a3d526a469d88dc1aca906946c8fa4e298109faf667a9cf40dbe115c170b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_df29a3d526a469d88dc1aca906946c8fa4e298109faf667a9cf40dbe115c170b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df29a3d526a469d88dc1aca906946c8fa4e298109faf667a9cf40dbe115c170b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function store_literal_in_memory_c8dd3191f3dcc39739dca1bcaf395cf1761dcb1f4ca0dd96a0d29ee3f0de65f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid SP instance address\")\n\n    }\n\n    function abi_encode_t_stringliteral_c8dd3191f3dcc39739dca1bcaf395cf1761dcb1f4ca0dd96a0d29ee3f0de65f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_c8dd3191f3dcc39739dca1bcaf395cf1761dcb1f4ca0dd96a0d29ee3f0de65f4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c8dd3191f3dcc39739dca1bcaf395cf1761dcb1f4ca0dd96a0d29ee3f0de65f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c8dd3191f3dcc39739dca1bcaf395cf1761dcb1f4ca0dd96a0d29ee3f0de65f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3f7f8a0302ff255928d1a72eedf8fbacb95deed18c475d5a03e0d82ca55cffbb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid schema ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_3f7f8a0302ff255928d1a72eedf8fbacb95deed18c475d5a03e0d82ca55cffbb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_3f7f8a0302ff255928d1a72eedf8fbacb95deed18c475d5a03e0d82ca55cffbb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3f7f8a0302ff255928d1a72eedf8fbacb95deed18c475d5a03e0d82ca55cffbb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3f7f8a0302ff255928d1a72eedf8fbacb95deed18c475d5a03e0d82ca55cffbb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b146101235780638e9841d0146101415780638e9d660f1461015d578063a8c5dc3314610179578063f2fde38b1461019757610093565b806304dd804614610098578063715018a6146100b65780637df5e551146100c057806384270608146100f2575b600080fd5b6100a06101b3565b6040516100ad9190610cea565b60405180910390f35b6100be6101b8565b005b6100da60048036038101906100d59190610d77565b6101cc565b6040516100e993929190610e68565b60405180910390f35b61010c60048036038101906101079190610d77565b610377565b60405161011a929190611070565b60405180910390f35b61012b6105eb565b60405161013891906110b6565b60405180910390f35b61015b60048036038101906101569190611232565b610614565b005b61017760048036038101906101729190610d77565b610896565b005b610181610951565b60405161018e9190611300565b60405180910390f35b6101b160048036038101906101ac9190610d77565b610977565b005b600181565b6101c06109fd565b6101ca6000610a84565b565b60006060600080600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561030057838290600052602060002090600202016040518060400160405290816000820180546102659061134a565b80601f01602080910402602001604051908101604052809291908181526020018280546102919061134a565b80156102de5780601f106102b3576101008083540402835291602001916102de565b820191906000526020600020905b8154815290600101906020018083116102c157829003601f168201915b5050505050815260200160018201548152505081526020019060010190610232565b505050509050600081510361032f57600080604051806020016040528060008152509093509350935050610370565b6000816001835161034091906113aa565b81518110610351576103506113de565b5b6020026020010151905060018160000151826020015194509450945050505b9193909250565b6060806000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156104a9578382906000526020600020906002020160405180604001604052908160008201805461040e9061134a565b80601f016020809104026020016040519081016040528092919081815260200182805461043a9061134a565b80156104875780601f1061045c57610100808354040283529160200191610487565b820191906000526020600020905b81548152906001019060200180831161046a57829003601f168201915b50505050508152602001600182015481525050815260200190600101906103db565b5050505090506000815190508067ffffffffffffffff8111156104cf576104ce6110db565b5b60405190808252806020026020018201604052801561050257816020015b60608152602001906001900390816104ed5790505b5093508067ffffffffffffffff81111561051f5761051e6110db565b5b60405190808252806020026020018201604052801561054d5781602001602082028036833780820191505090505b50925060005b818110156105e35782818151811061056e5761056d6113de565b5b60200260200101516000015185828151811061058d5761058c6113de565b5b60200260200101819052508281815181106105ab576105aa6113de565b5b6020026020010151602001518482815181106105ca576105c96113de565b5b6020026020010181815250508080600101915050610553565b505050915091565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61061c6109fd565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361068b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068290611459565b60405180910390fd5b60008251116106cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c6906114c5565b60405180910390fd5b42811115610712576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070990611557565b60405180910390fd5b60006107416001848460405160200161072c929190611577565b60405160208183030381529060405286610b48565b905080610783576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077a906115f3565b60405180910390fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405280858152602001848152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001908161081591906117b5565b506020820151816001015550508373ffffffffffffffffffffffffffffffffffffffff16610841610cbf565b73ffffffffffffffffffffffffffffffffffffffff167f3cdce538b6db111fcf97c8cdfc0f65dcd4c7eaeea28abf410f46ad76daed828b8585604051610888929190611577565b60405180910390a350505050565b61089e6109fd565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361090d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610904906118d3565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61097f6109fd565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109f15760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109e891906110b6565b60405180910390fd5b6109fa81610a84565b50565b610a05610cbf565b73ffffffffffffffffffffffffffffffffffffffff16610a236105eb565b73ffffffffffffffffffffffffffffffffffffffff1614610a8257610a46610cbf565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a7991906110b6565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600167ffffffffffffffff168467ffffffffffffffff1614610ba1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b989061193f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0790611459565b60405180910390fd5b60008084806020019051810190610c2791906119e4565b915091506000825111610c6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c66906114c5565b60405180910390fd5b42811115610cb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca990611557565b60405180910390fd5b6001925050509392505050565b600033905090565b600067ffffffffffffffff82169050919050565b610ce481610cc7565b82525050565b6000602082019050610cff6000830184610cdb565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d4482610d19565b9050919050565b610d5481610d39565b8114610d5f57600080fd5b50565b600081359050610d7181610d4b565b92915050565b600060208284031215610d8d57610d8c610d0f565b5b6000610d9b84828501610d62565b91505092915050565b60008115159050919050565b610db981610da4565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610df9578082015181840152602081019050610dde565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e2182610dbf565b610e2b8185610dca565b9350610e3b818560208601610ddb565b610e4481610e05565b840191505092915050565b6000819050919050565b610e6281610e4f565b82525050565b6000606082019050610e7d6000830186610db0565b8181036020830152610e8f8185610e16565b9050610e9e6040830184610e59565b949350505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000610eee82610dbf565b610ef88185610ed2565b9350610f08818560208601610ddb565b610f1181610e05565b840191505092915050565b6000610f288383610ee3565b905092915050565b6000602082019050919050565b6000610f4882610ea6565b610f528185610eb1565b935083602082028501610f6485610ec2565b8060005b85811015610fa05784840389528151610f818582610f1c565b9450610f8c83610f30565b925060208a01995050600181019050610f68565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610fe781610e4f565b82525050565b6000610ff98383610fde565b60208301905092915050565b6000602082019050919050565b600061101d82610fb2565b6110278185610fbd565b935061103283610fce565b8060005b8381101561106357815161104a8882610fed565b975061105583611005565b925050600181019050611036565b5085935050505092915050565b6000604082019050818103600083015261108a8185610f3d565b9050818103602083015261109e8184611012565b90509392505050565b6110b081610d39565b82525050565b60006020820190506110cb60008301846110a7565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61111382610e05565b810181811067ffffffffffffffff82111715611132576111316110db565b5b80604052505050565b6000611145610d05565b9050611151828261110a565b919050565b600067ffffffffffffffff821115611171576111706110db565b5b61117a82610e05565b9050602081019050919050565b82818337600083830152505050565b60006111a96111a484611156565b61113b565b9050828152602081018484840111156111c5576111c46110d6565b5b6111d0848285611187565b509392505050565b600082601f8301126111ed576111ec6110d1565b5b81356111fd848260208601611196565b91505092915050565b61120f81610e4f565b811461121a57600080fd5b50565b60008135905061122c81611206565b92915050565b60008060006060848603121561124b5761124a610d0f565b5b600061125986828701610d62565b935050602084013567ffffffffffffffff81111561127a57611279610d14565b5b611286868287016111d8565b92505060406112978682870161121d565b9150509250925092565b6000819050919050565b60006112c66112c16112bc84610d19565b6112a1565b610d19565b9050919050565b60006112d8826112ab565b9050919050565b60006112ea826112cd565b9050919050565b6112fa816112df565b82525050565b600060208201905061131560008301846112f1565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061136257607f821691505b6020821081036113755761137461131b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113b582610e4f565b91506113c083610e4f565b92508282039050818111156113d8576113d761137b565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f496e76616c696420726563697069656e74206164647265737300000000000000600082015250565b6000611443601983610dca565b915061144e8261140d565b602082019050919050565b6000602082019050818103600083015261147281611436565b9050919050565b7f436f75727365206e616d652063616e6e6f7420626520656d7074790000000000600082015250565b60006114af601b83610dca565b91506114ba82611479565b602082019050919050565b600060208201905081810360008301526114de816114a2565b9050919050565b7f497373756520646174652063616e6e6f7420626520696e20746865206675747560008201527f7265000000000000000000000000000000000000000000000000000000000000602082015250565b6000611541602283610dca565b915061154c826114e5565b604082019050919050565b6000602082019050818103600083015261157081611534565b9050919050565b600060408201905081810360008301526115918185610e16565b90506115a06020830184610e59565b9392505050565b7f446174612076616c69646174696f6e206661696c656400000000000000000000600082015250565b60006115dd601683610dca565b91506115e8826115a7565b602082019050919050565b6000602082019050818103600083015261160c816115d0565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026116757fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611638565b61167f8683611638565b95508019841693508086168417925050509392505050565b60006116b26116ad6116a884610e4f565b6112a1565b610e4f565b9050919050565b6000819050919050565b6116cc83611697565b6116e06116d8826116b9565b848454611645565b825550505050565b600090565b6116f56116e8565b6117008184846116c3565b505050565b5b81811015611724576117196000826116ed565b600181019050611706565b5050565b601f8211156117695761173a81611613565b61174384611628565b81016020851015611752578190505b61176661175e85611628565b830182611705565b50505b505050565b600082821c905092915050565b600061178c6000198460080261176e565b1980831691505092915050565b60006117a5838361177b565b9150826002028217905092915050565b6117be82610dbf565b67ffffffffffffffff8111156117d7576117d66110db565b5b6117e1825461134a565b6117ec828285611728565b600060209050601f83116001811461181f576000841561180d578287015190505b6118178582611799565b86555061187f565b601f19841661182d86611613565b60005b8281101561185557848901518255600182019150602085019450602081019050611830565b86831015611872578489015161186e601f89168261177b565b8355505b6001600288020188555050505b505050505050565b7f496e76616c696420535020696e7374616e636520616464726573730000000000600082015250565b60006118bd601b83610dca565b91506118c882611887565b602082019050919050565b600060208201905081810360008301526118ec816118b0565b9050919050565b7f496e76616c696420736368656d61204944000000000000000000000000000000600082015250565b6000611929601183610dca565b9150611934826118f3565b602082019050919050565b600060208201905081810360008301526119588161191c565b9050919050565b600061197261196d84611156565b61113b565b90508281526020810184848401111561198e5761198d6110d6565b5b611999848285610ddb565b509392505050565b600082601f8301126119b6576119b56110d1565b5b81516119c684826020860161195f565b91505092915050565b6000815190506119de81611206565b92915050565b600080604083850312156119fb576119fa610d0f565b5b600083015167ffffffffffffffff811115611a1957611a18610d14565b5b611a25858286016119a1565b9250506020611a36858286016119cf565b915050925092905056fea2646970667358221220bae6a4f63e0e60c32e240c8c9dd48e739d3fc9b63aee871ed5938c0807c7ea2164736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x8E9841D0 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x8E9D660F EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0xA8C5DC33 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x197 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x4DD8046 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x7DF5E551 EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0x84270608 EQ PUSH2 0xF2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x1B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xCEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBE PUSH2 0x1B8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x1CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x377 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP3 SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x5EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x10B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x1232 JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x896 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x181 PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x977 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x9FD JUMP JUMPDEST PUSH2 0x1CA PUSH1 0x0 PUSH2 0xA84 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x300 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x265 SWAP1 PUSH2 0x134A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x291 SWAP1 PUSH2 0x134A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x232 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x370 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 DUP4 MLOAD PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x13AA JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x351 JUMPI PUSH2 0x350 PUSH2 0x13DE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x20 ADD MLOAD SWAP5 POP SWAP5 POP SWAP5 POP POP POP JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x4A9 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x40E SWAP1 PUSH2 0x134A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x43A SWAP1 PUSH2 0x134A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x487 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x45C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x487 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x46A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3DB JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD SWAP1 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4CF JUMPI PUSH2 0x4CE PUSH2 0x10DB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x502 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x4ED JUMPI SWAP1 POP JUMPDEST POP SWAP4 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x51F JUMPI PUSH2 0x51E PUSH2 0x10DB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x54D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5E3 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x56E JUMPI PUSH2 0x56D PUSH2 0x13DE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x58D JUMPI PUSH2 0x58C PUSH2 0x13DE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x5AB JUMPI PUSH2 0x5AA PUSH2 0x13DE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5CA JUMPI PUSH2 0x5C9 PUSH2 0x13DE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x553 JUMP JUMPDEST POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x61C PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x682 SWAP1 PUSH2 0x1459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD GT PUSH2 0x6CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C6 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP2 GT ISZERO PUSH2 0x712 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x709 SWAP1 PUSH2 0x1557 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x741 PUSH1 0x1 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x72C SWAP3 SWAP2 SWAP1 PUSH2 0x1577 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP7 PUSH2 0xB48 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x783 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77A SWAP1 PUSH2 0x15F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x815 SWAP2 SWAP1 PUSH2 0x17B5 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x841 PUSH2 0xCBF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3CDCE538B6DB111FCF97C8CDFC0F65DCD4C7EAEEA28ABF410F46AD76DAED828B DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x888 SWAP3 SWAP2 SWAP1 PUSH2 0x1577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x89E PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x90D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x904 SWAP1 PUSH2 0x18D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x97F PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0x10B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9FA DUP2 PUSH2 0xA84 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA05 PUSH2 0xCBF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA23 PUSH2 0x5EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA82 JUMPI PUSH2 0xA46 PUSH2 0xCBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA79 SWAP2 SWAP1 PUSH2 0x10B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB98 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC07 SWAP1 PUSH2 0x1459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xC27 SWAP2 SWAP1 PUSH2 0x19E4 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP3 MLOAD GT PUSH2 0xC6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC66 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP2 GT ISZERO PUSH2 0xCB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA9 SWAP1 PUSH2 0x1557 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE4 DUP2 PUSH2 0xCC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCFF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD44 DUP3 PUSH2 0xD19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD54 DUP2 PUSH2 0xD39 JUMP JUMPDEST DUP2 EQ PUSH2 0xD5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD71 DUP2 PUSH2 0xD4B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD8D JUMPI PUSH2 0xD8C PUSH2 0xD0F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD9B DUP5 DUP3 DUP6 ADD PUSH2 0xD62 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB9 DUP2 PUSH2 0xDA4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDF9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDDE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE21 DUP3 PUSH2 0xDBF JUMP JUMPDEST PUSH2 0xE2B DUP2 DUP6 PUSH2 0xDCA JUMP JUMPDEST SWAP4 POP PUSH2 0xE3B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDDB JUMP JUMPDEST PUSH2 0xE44 DUP2 PUSH2 0xE05 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE62 DUP2 PUSH2 0xE4F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE7D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xDB0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xE8F DUP2 DUP6 PUSH2 0xE16 JUMP JUMPDEST SWAP1 POP PUSH2 0xE9E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE59 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEEE DUP3 PUSH2 0xDBF JUMP JUMPDEST PUSH2 0xEF8 DUP2 DUP6 PUSH2 0xED2 JUMP JUMPDEST SWAP4 POP PUSH2 0xF08 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDDB JUMP JUMPDEST PUSH2 0xF11 DUP2 PUSH2 0xE05 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF28 DUP4 DUP4 PUSH2 0xEE3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF48 DUP3 PUSH2 0xEA6 JUMP JUMPDEST PUSH2 0xF52 DUP2 DUP6 PUSH2 0xEB1 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0xF64 DUP6 PUSH2 0xEC2 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xFA0 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0xF81 DUP6 DUP3 PUSH2 0xF1C JUMP JUMPDEST SWAP5 POP PUSH2 0xF8C DUP4 PUSH2 0xF30 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xF68 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFE7 DUP2 PUSH2 0xE4F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF9 DUP4 DUP4 PUSH2 0xFDE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x101D DUP3 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0x1027 DUP2 DUP6 PUSH2 0xFBD JUMP JUMPDEST SWAP4 POP PUSH2 0x1032 DUP4 PUSH2 0xFCE JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1063 JUMPI DUP2 MLOAD PUSH2 0x104A DUP9 DUP3 PUSH2 0xFED JUMP JUMPDEST SWAP8 POP PUSH2 0x1055 DUP4 PUSH2 0x1005 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1036 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x108A DUP2 DUP6 PUSH2 0xF3D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x109E DUP2 DUP5 PUSH2 0x1012 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x10B0 DUP2 PUSH2 0xD39 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10CB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1113 DUP3 PUSH2 0xE05 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1132 JUMPI PUSH2 0x1131 PUSH2 0x10DB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1145 PUSH2 0xD05 JUMP JUMPDEST SWAP1 POP PUSH2 0x1151 DUP3 DUP3 PUSH2 0x110A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1171 JUMPI PUSH2 0x1170 PUSH2 0x10DB JUMP JUMPDEST JUMPDEST PUSH2 0x117A DUP3 PUSH2 0xE05 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A9 PUSH2 0x11A4 DUP5 PUSH2 0x1156 JUMP JUMPDEST PUSH2 0x113B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x11C5 JUMPI PUSH2 0x11C4 PUSH2 0x10D6 JUMP JUMPDEST JUMPDEST PUSH2 0x11D0 DUP5 DUP3 DUP6 PUSH2 0x1187 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11ED JUMPI PUSH2 0x11EC PUSH2 0x10D1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11FD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1196 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x120F DUP2 PUSH2 0xE4F JUMP JUMPDEST DUP2 EQ PUSH2 0x121A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x122C DUP2 PUSH2 0x1206 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x124B JUMPI PUSH2 0x124A PUSH2 0xD0F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1259 DUP7 DUP3 DUP8 ADD PUSH2 0xD62 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x127A JUMPI PUSH2 0x1279 PUSH2 0xD14 JUMP JUMPDEST JUMPDEST PUSH2 0x1286 DUP7 DUP3 DUP8 ADD PUSH2 0x11D8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1297 DUP7 DUP3 DUP8 ADD PUSH2 0x121D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C6 PUSH2 0x12C1 PUSH2 0x12BC DUP5 PUSH2 0xD19 JUMP JUMPDEST PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0xD19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D8 DUP3 PUSH2 0x12AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12EA DUP3 PUSH2 0x12CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12FA DUP2 PUSH2 0x12DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1315 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1362 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1375 JUMPI PUSH2 0x1374 PUSH2 0x131B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13B5 DUP3 PUSH2 0xE4F JUMP JUMPDEST SWAP2 POP PUSH2 0x13C0 DUP4 PUSH2 0xE4F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x13D8 JUMPI PUSH2 0x13D7 PUSH2 0x137B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1443 PUSH1 0x19 DUP4 PUSH2 0xDCA JUMP JUMPDEST SWAP2 POP PUSH2 0x144E DUP3 PUSH2 0x140D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1472 DUP2 PUSH2 0x1436 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F75727365206E616D652063616E6E6F7420626520656D7074790000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14AF PUSH1 0x1B DUP4 PUSH2 0xDCA JUMP JUMPDEST SWAP2 POP PUSH2 0x14BA DUP3 PUSH2 0x1479 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14DE DUP2 PUSH2 0x14A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x497373756520646174652063616E6E6F7420626520696E207468652066757475 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1541 PUSH1 0x22 DUP4 PUSH2 0xDCA JUMP JUMPDEST SWAP2 POP PUSH2 0x154C DUP3 PUSH2 0x14E5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1570 DUP2 PUSH2 0x1534 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1591 DUP2 DUP6 PUSH2 0xE16 JUMP JUMPDEST SWAP1 POP PUSH2 0x15A0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE59 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x446174612076616C69646174696F6E206661696C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15DD PUSH1 0x16 DUP4 PUSH2 0xDCA JUMP JUMPDEST SWAP2 POP PUSH2 0x15E8 DUP3 PUSH2 0x15A7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x160C DUP2 PUSH2 0x15D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x1675 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1638 JUMP JUMPDEST PUSH2 0x167F DUP7 DUP4 PUSH2 0x1638 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16B2 PUSH2 0x16AD PUSH2 0x16A8 DUP5 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0xE4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16CC DUP4 PUSH2 0x1697 JUMP JUMPDEST PUSH2 0x16E0 PUSH2 0x16D8 DUP3 PUSH2 0x16B9 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1645 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x16F5 PUSH2 0x16E8 JUMP JUMPDEST PUSH2 0x1700 DUP2 DUP5 DUP5 PUSH2 0x16C3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1724 JUMPI PUSH2 0x1719 PUSH1 0x0 DUP3 PUSH2 0x16ED JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1706 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1769 JUMPI PUSH2 0x173A DUP2 PUSH2 0x1613 JUMP JUMPDEST PUSH2 0x1743 DUP5 PUSH2 0x1628 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1752 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1766 PUSH2 0x175E DUP6 PUSH2 0x1628 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1705 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x178C PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x176E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A5 DUP4 DUP4 PUSH2 0x177B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17BE DUP3 PUSH2 0xDBF JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17D7 JUMPI PUSH2 0x17D6 PUSH2 0x10DB JUMP JUMPDEST JUMPDEST PUSH2 0x17E1 DUP3 SLOAD PUSH2 0x134A JUMP JUMPDEST PUSH2 0x17EC DUP3 DUP3 DUP6 PUSH2 0x1728 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x181F JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x180D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1817 DUP6 DUP3 PUSH2 0x1799 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x187F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x182D DUP7 PUSH2 0x1613 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1855 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1830 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1872 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x186E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x177B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420535020696E7374616E636520616464726573730000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BD PUSH1 0x1B DUP4 PUSH2 0xDCA JUMP JUMPDEST SWAP2 POP PUSH2 0x18C8 DUP3 PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18EC DUP2 PUSH2 0x18B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420736368656D61204944000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1929 PUSH1 0x11 DUP4 PUSH2 0xDCA JUMP JUMPDEST SWAP2 POP PUSH2 0x1934 DUP3 PUSH2 0x18F3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1958 DUP2 PUSH2 0x191C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1972 PUSH2 0x196D DUP5 PUSH2 0x1156 JUMP JUMPDEST PUSH2 0x113B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x198E JUMPI PUSH2 0x198D PUSH2 0x10D6 JUMP JUMPDEST JUMPDEST PUSH2 0x1999 DUP5 DUP3 DUP6 PUSH2 0xDDB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19B6 JUMPI PUSH2 0x19B5 PUSH2 0x10D1 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x19C6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x195F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x19DE DUP2 PUSH2 0x1206 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19FB JUMPI PUSH2 0x19FA PUSH2 0xD0F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A19 JUMPI PUSH2 0x1A18 PUSH2 0xD14 JUMP JUMPDEST JUMPDEST PUSH2 0x1A25 DUP6 DUP3 DUP7 ADD PUSH2 0x19A1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A36 DUP6 DUP3 DUP7 ADD PUSH2 0x19CF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xE6 LOG4 0xF6 RETURNDATACOPY 0xE PUSH1 0xC3 0x2E 0x24 0xC DUP13 SWAP14 0xD4 DUP15 PUSH20 0x9D3FC9B63AEE871ED5938C0807C7EA2164736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"201:3102:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;357:47;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:6;;;:::i;:::-;;2280:459:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1706:568;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1638:85:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;997:703:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;816:175;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;330:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;357:47:9;403:1;357:47;:::o;2293:101:6:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2280:459:9:-;2348:10;2360:20;2382:17;2411:35;2449:11;:19;2461:6;2449:19;;;;;;;;;;;;;;;2411:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2517:1;2491:15;:22;:27;2487:79;;2542:5;2553:1;2534:21;;;;;;;;;;;;;;;;;;;;;;2487:79;2576:34;2613:15;2654:1;2629:15;:22;:26;;;;:::i;:::-;2613:43;;;;;;;;:::i;:::-;;;;;;;;2576:80;;2674:4;2680:16;:23;;;2705:16;:26;;;2666:66;;;;;;;;2280:459;;;;;;:::o;1706:568::-;1769:23;1794:27;1833:35;1871:11;:19;1883:6;1871:19;;;;;;;;;;;;;;;1833:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1900:23;1926:15;:22;1900:48;;1982:15;1969:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1959:39;;2035:15;2021:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2008:43;;2067:9;2062:167;2086:15;2082:1;:19;2062:167;;;2135:15;2151:1;2135:18;;;;;;;;:::i;:::-;;;;;;;;:25;;;2122:7;2130:1;2122:10;;;;;;;;:::i;:::-;;;;;;;:38;;;;2190:15;2206:1;2190:18;;;;;;;;:::i;:::-;;;;;;;;:28;;;2174:10;2185:1;2174:13;;;;;;;;:::i;:::-;;;;;;;:44;;;;;2103:3;;;;;;;2062:167;;;;2239:28;;1706:568;;;:::o;1638:85:6:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;997:703:9:-;1531:13:6;:11;:13::i;:::-;1170:1:9::1;1149:23;;:9;:23;;::::0;1141:61:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1243:1;1226:6;1220:20;:24;1212:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1307:15;1294:9;:28;;1286:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1408:12;1423:74;403:1;1467:6;1475:9;1456:29;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1487:9;1423:10;:74::i;:::-;1408:89;;1515:7;1507:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;1560:11;:22;1572:9;1560:22;;;;;;;;;;;;;;;1588:29;;;;;;;;1599:6;1588:29;;;;1607:9;1588:29;;::::0;1560:58:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;1664:9;1633:60;;1650:12;:10;:12::i;:::-;1633:60;;;1675:6;1683:9;1633:60;;;;;;;:::i;:::-;;;;;;;;1131:569;997:703:::0;;;:::o;816:175::-;1531:13:6;:11;:13::i;:::-;914:1:9::1;894:22;;:8;:22;;::::0;886:62:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;975:8;958:10;;:26;;;;;;;;;;;;;;;;;;816:175:::0;:::o;330:21::-;;;;;;;;;;;;;:::o;2543:215:6:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2745:556:9:-;2873:4;403:1;2897:32;;:8;:32;;;2889:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2990:1;2969:23;;:9;:23;;;2961:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;3034:20;3056:17;3088:4;3077:35;;;;;;;;;;;;:::i;:::-;3033:79;;;;3154:1;3137:6;3131:20;:24;3123:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3218:15;3205:9;:28;;3197:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;3290:4;3283:11;;;;2745:556;;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;7:101:10:-;43:7;83:18;76:5;72:30;61:41;;7:101;;;:::o;114:115::-;199:23;216:5;199:23;:::i;:::-;194:3;187:36;114:115;;:::o;235:218::-;326:4;364:2;353:9;349:18;341:26;;377:69;443:1;432:9;428:17;419:6;377:69;:::i;:::-;235:218;;;;:::o;459:75::-;492:6;525:2;519:9;509:19;;459:75;:::o;540:117::-;649:1;646;639:12;663:117;772:1;769;762:12;786:126;823:7;863:42;856:5;852:54;841:65;;786:126;;;:::o;918:96::-;955:7;984:24;1002:5;984:24;:::i;:::-;973:35;;918:96;;;:::o;1020:122::-;1093:24;1111:5;1093:24;:::i;:::-;1086:5;1083:35;1073:63;;1132:1;1129;1122:12;1073:63;1020:122;:::o;1148:139::-;1194:5;1232:6;1219:20;1210:29;;1248:33;1275:5;1248:33;:::i;:::-;1148:139;;;;:::o;1293:329::-;1352:6;1401:2;1389:9;1380:7;1376:23;1372:32;1369:119;;;1407:79;;:::i;:::-;1369:119;1527:1;1552:53;1597:7;1588:6;1577:9;1573:22;1552:53;:::i;:::-;1542:63;;1498:117;1293:329;;;;:::o;1628:90::-;1662:7;1705:5;1698:13;1691:21;1680:32;;1628:90;;;:::o;1724:109::-;1805:21;1820:5;1805:21;:::i;:::-;1800:3;1793:34;1724:109;;:::o;1839:99::-;1891:6;1925:5;1919:12;1909:22;;1839:99;;;:::o;1944:169::-;2028:11;2062:6;2057:3;2050:19;2102:4;2097:3;2093:14;2078:29;;1944:169;;;;:::o;2119:246::-;2200:1;2210:113;2224:6;2221:1;2218:13;2210:113;;;2309:1;2304:3;2300:11;2294:18;2290:1;2285:3;2281:11;2274:39;2246:2;2243:1;2239:10;2234:15;;2210:113;;;2357:1;2348:6;2343:3;2339:16;2332:27;2181:184;2119:246;;;:::o;2371:102::-;2412:6;2463:2;2459:7;2454:2;2447:5;2443:14;2439:28;2429:38;;2371:102;;;:::o;2479:377::-;2567:3;2595:39;2628:5;2595:39;:::i;:::-;2650:71;2714:6;2709:3;2650:71;:::i;:::-;2643:78;;2730:65;2788:6;2783:3;2776:4;2769:5;2765:16;2730:65;:::i;:::-;2820:29;2842:6;2820:29;:::i;:::-;2815:3;2811:39;2804:46;;2571:285;2479:377;;;;:::o;2862:77::-;2899:7;2928:5;2917:16;;2862:77;;;:::o;2945:118::-;3032:24;3050:5;3032:24;:::i;:::-;3027:3;3020:37;2945:118;;:::o;3069:521::-;3232:4;3270:2;3259:9;3255:18;3247:26;;3283:65;3345:1;3334:9;3330:17;3321:6;3283:65;:::i;:::-;3395:9;3389:4;3385:20;3380:2;3369:9;3365:18;3358:48;3423:78;3496:4;3487:6;3423:78;:::i;:::-;3415:86;;3511:72;3579:2;3568:9;3564:18;3555:6;3511:72;:::i;:::-;3069:521;;;;;;:::o;3596:124::-;3673:6;3707:5;3701:12;3691:22;;3596:124;;;:::o;3726:194::-;3835:11;3869:6;3864:3;3857:19;3909:4;3904:3;3900:14;3885:29;;3726:194;;;;:::o;3926:142::-;4003:4;4026:3;4018:11;;4056:4;4051:3;4047:14;4039:22;;3926:142;;;:::o;4074:159::-;4148:11;4182:6;4177:3;4170:19;4222:4;4217:3;4213:14;4198:29;;4074:159;;;;:::o;4239:357::-;4317:3;4345:39;4378:5;4345:39;:::i;:::-;4400:61;4454:6;4449:3;4400:61;:::i;:::-;4393:68;;4470:65;4528:6;4523:3;4516:4;4509:5;4505:16;4470:65;:::i;:::-;4560:29;4582:6;4560:29;:::i;:::-;4555:3;4551:39;4544:46;;4321:275;4239:357;;;;:::o;4602:196::-;4691:10;4726:66;4788:3;4780:6;4726:66;:::i;:::-;4712:80;;4602:196;;;;:::o;4804:123::-;4884:4;4916;4911:3;4907:14;4899:22;;4804:123;;;:::o;4961:991::-;5100:3;5129:64;5187:5;5129:64;:::i;:::-;5209:96;5298:6;5293:3;5209:96;:::i;:::-;5202:103;;5331:3;5376:4;5368:6;5364:17;5359:3;5355:27;5406:66;5466:5;5406:66;:::i;:::-;5495:7;5526:1;5511:396;5536:6;5533:1;5530:13;5511:396;;;5607:9;5601:4;5597:20;5592:3;5585:33;5658:6;5652:13;5686:84;5765:4;5750:13;5686:84;:::i;:::-;5678:92;;5793:70;5856:6;5793:70;:::i;:::-;5783:80;;5892:4;5887:3;5883:14;5876:21;;5571:336;5558:1;5555;5551:9;5546:14;;5511:396;;;5515:14;5923:4;5916:11;;5943:3;5936:10;;5105:847;;;;;4961:991;;;;:::o;5958:114::-;6025:6;6059:5;6053:12;6043:22;;5958:114;;;:::o;6078:184::-;6177:11;6211:6;6206:3;6199:19;6251:4;6246:3;6242:14;6227:29;;6078:184;;;;:::o;6268:132::-;6335:4;6358:3;6350:11;;6388:4;6383:3;6379:14;6371:22;;6268:132;;;:::o;6406:108::-;6483:24;6501:5;6483:24;:::i;:::-;6478:3;6471:37;6406:108;;:::o;6520:179::-;6589:10;6610:46;6652:3;6644:6;6610:46;:::i;:::-;6688:4;6683:3;6679:14;6665:28;;6520:179;;;;:::o;6705:113::-;6775:4;6807;6802:3;6798:14;6790:22;;6705:113;;;:::o;6854:732::-;6973:3;7002:54;7050:5;7002:54;:::i;:::-;7072:86;7151:6;7146:3;7072:86;:::i;:::-;7065:93;;7182:56;7232:5;7182:56;:::i;:::-;7261:7;7292:1;7277:284;7302:6;7299:1;7296:13;7277:284;;;7378:6;7372:13;7405:63;7464:3;7449:13;7405:63;:::i;:::-;7398:70;;7491:60;7544:6;7491:60;:::i;:::-;7481:70;;7337:224;7324:1;7321;7317:9;7312:14;;7277:284;;;7281:14;7577:3;7570:10;;6978:608;;;6854:732;;;;:::o;7592:674::-;7833:4;7871:2;7860:9;7856:18;7848:26;;7920:9;7914:4;7910:20;7906:1;7895:9;7891:17;7884:47;7948:128;8071:4;8062:6;7948:128;:::i;:::-;7940:136;;8123:9;8117:4;8113:20;8108:2;8097:9;8093:18;8086:48;8151:108;8254:4;8245:6;8151:108;:::i;:::-;8143:116;;7592:674;;;;;:::o;8272:118::-;8359:24;8377:5;8359:24;:::i;:::-;8354:3;8347:37;8272:118;;:::o;8396:222::-;8489:4;8527:2;8516:9;8512:18;8504:26;;8540:71;8608:1;8597:9;8593:17;8584:6;8540:71;:::i;:::-;8396:222;;;;:::o;8624:117::-;8733:1;8730;8723:12;8747:117;8856:1;8853;8846:12;8870:180;8918:77;8915:1;8908:88;9015:4;9012:1;9005:15;9039:4;9036:1;9029:15;9056:281;9139:27;9161:4;9139:27;:::i;:::-;9131:6;9127:40;9269:6;9257:10;9254:22;9233:18;9221:10;9218:34;9215:62;9212:88;;;9280:18;;:::i;:::-;9212:88;9320:10;9316:2;9309:22;9099:238;9056:281;;:::o;9343:129::-;9377:6;9404:20;;:::i;:::-;9394:30;;9433:33;9461:4;9453:6;9433:33;:::i;:::-;9343:129;;;:::o;9478:308::-;9540:4;9630:18;9622:6;9619:30;9616:56;;;9652:18;;:::i;:::-;9616:56;9690:29;9712:6;9690:29;:::i;:::-;9682:37;;9774:4;9768;9764:15;9756:23;;9478:308;;;:::o;9792:146::-;9889:6;9884:3;9879;9866:30;9930:1;9921:6;9916:3;9912:16;9905:27;9792:146;;;:::o;9944:425::-;10022:5;10047:66;10063:49;10105:6;10063:49;:::i;:::-;10047:66;:::i;:::-;10038:75;;10136:6;10129:5;10122:21;10174:4;10167:5;10163:16;10212:3;10203:6;10198:3;10194:16;10191:25;10188:112;;;10219:79;;:::i;:::-;10188:112;10309:54;10356:6;10351:3;10346;10309:54;:::i;:::-;10028:341;9944:425;;;;;:::o;10389:340::-;10445:5;10494:3;10487:4;10479:6;10475:17;10471:27;10461:122;;10502:79;;:::i;:::-;10461:122;10619:6;10606:20;10644:79;10719:3;10711:6;10704:4;10696:6;10692:17;10644:79;:::i;:::-;10635:88;;10451:278;10389:340;;;;:::o;10735:122::-;10808:24;10826:5;10808:24;:::i;:::-;10801:5;10798:35;10788:63;;10847:1;10844;10837:12;10788:63;10735:122;:::o;10863:139::-;10909:5;10947:6;10934:20;10925:29;;10963:33;10990:5;10963:33;:::i;:::-;10863:139;;;;:::o;11008:799::-;11095:6;11103;11111;11160:2;11148:9;11139:7;11135:23;11131:32;11128:119;;;11166:79;;:::i;:::-;11128:119;11286:1;11311:53;11356:7;11347:6;11336:9;11332:22;11311:53;:::i;:::-;11301:63;;11257:117;11441:2;11430:9;11426:18;11413:32;11472:18;11464:6;11461:30;11458:117;;;11494:79;;:::i;:::-;11458:117;11599:63;11654:7;11645:6;11634:9;11630:22;11599:63;:::i;:::-;11589:73;;11384:288;11711:2;11737:53;11782:7;11773:6;11762:9;11758:22;11737:53;:::i;:::-;11727:63;;11682:118;11008:799;;;;;:::o;11813:60::-;11841:3;11862:5;11855:12;;11813:60;;;:::o;11879:142::-;11929:9;11962:53;11980:34;11989:24;12007:5;11989:24;:::i;:::-;11980:34;:::i;:::-;11962:53;:::i;:::-;11949:66;;11879:142;;;:::o;12027:126::-;12077:9;12110:37;12141:5;12110:37;:::i;:::-;12097:50;;12027:126;;;:::o;12159:137::-;12220:9;12253:37;12284:5;12253:37;:::i;:::-;12240:50;;12159:137;;;:::o;12302:153::-;12400:48;12442:5;12400:48;:::i;:::-;12395:3;12388:61;12302:153;;:::o;12461:244::-;12565:4;12603:2;12592:9;12588:18;12580:26;;12616:82;12695:1;12684:9;12680:17;12671:6;12616:82;:::i;:::-;12461:244;;;;:::o;12711:180::-;12759:77;12756:1;12749:88;12856:4;12853:1;12846:15;12880:4;12877:1;12870:15;12897:320;12941:6;12978:1;12972:4;12968:12;12958:22;;13025:1;13019:4;13015:12;13046:18;13036:81;;13102:4;13094:6;13090:17;13080:27;;13036:81;13164:2;13156:6;13153:14;13133:18;13130:38;13127:84;;13183:18;;:::i;:::-;13127:84;12948:269;12897:320;;;:::o;13223:180::-;13271:77;13268:1;13261:88;13368:4;13365:1;13358:15;13392:4;13389:1;13382:15;13409:194;13449:4;13469:20;13487:1;13469:20;:::i;:::-;13464:25;;13503:20;13521:1;13503:20;:::i;:::-;13498:25;;13547:1;13544;13540:9;13532:17;;13571:1;13565:4;13562:11;13559:37;;;13576:18;;:::i;:::-;13559:37;13409:194;;;;:::o;13609:180::-;13657:77;13654:1;13647:88;13754:4;13751:1;13744:15;13778:4;13775:1;13768:15;13795:175;13935:27;13931:1;13923:6;13919:14;13912:51;13795:175;:::o;13976:366::-;14118:3;14139:67;14203:2;14198:3;14139:67;:::i;:::-;14132:74;;14215:93;14304:3;14215:93;:::i;:::-;14333:2;14328:3;14324:12;14317:19;;13976:366;;;:::o;14348:419::-;14514:4;14552:2;14541:9;14537:18;14529:26;;14601:9;14595:4;14591:20;14587:1;14576:9;14572:17;14565:47;14629:131;14755:4;14629:131;:::i;:::-;14621:139;;14348:419;;;:::o;14773:177::-;14913:29;14909:1;14901:6;14897:14;14890:53;14773:177;:::o;14956:366::-;15098:3;15119:67;15183:2;15178:3;15119:67;:::i;:::-;15112:74;;15195:93;15284:3;15195:93;:::i;:::-;15313:2;15308:3;15304:12;15297:19;;14956:366;;;:::o;15328:419::-;15494:4;15532:2;15521:9;15517:18;15509:26;;15581:9;15575:4;15571:20;15567:1;15556:9;15552:17;15545:47;15609:131;15735:4;15609:131;:::i;:::-;15601:139;;15328:419;;;:::o;15753:221::-;15893:34;15889:1;15881:6;15877:14;15870:58;15962:4;15957:2;15949:6;15945:15;15938:29;15753:221;:::o;15980:366::-;16122:3;16143:67;16207:2;16202:3;16143:67;:::i;:::-;16136:74;;16219:93;16308:3;16219:93;:::i;:::-;16337:2;16332:3;16328:12;16321:19;;15980:366;;;:::o;16352:419::-;16518:4;16556:2;16545:9;16541:18;16533:26;;16605:9;16599:4;16595:20;16591:1;16580:9;16576:17;16569:47;16633:131;16759:4;16633:131;:::i;:::-;16625:139;;16352:419;;;:::o;16777:423::-;16918:4;16956:2;16945:9;16941:18;16933:26;;17005:9;16999:4;16995:20;16991:1;16980:9;16976:17;16969:47;17033:78;17106:4;17097:6;17033:78;:::i;:::-;17025:86;;17121:72;17189:2;17178:9;17174:18;17165:6;17121:72;:::i;:::-;16777:423;;;;;:::o;17206:172::-;17346:24;17342:1;17334:6;17330:14;17323:48;17206:172;:::o;17384:366::-;17526:3;17547:67;17611:2;17606:3;17547:67;:::i;:::-;17540:74;;17623:93;17712:3;17623:93;:::i;:::-;17741:2;17736:3;17732:12;17725:19;;17384:366;;;:::o;17756:419::-;17922:4;17960:2;17949:9;17945:18;17937:26;;18009:9;18003:4;17999:20;17995:1;17984:9;17980:17;17973:47;18037:131;18163:4;18037:131;:::i;:::-;18029:139;;17756:419;;;:::o;18181:141::-;18230:4;18253:3;18245:11;;18276:3;18273:1;18266:14;18310:4;18307:1;18297:18;18289:26;;18181:141;;;:::o;18328:93::-;18365:6;18412:2;18407;18400:5;18396:14;18392:23;18382:33;;18328:93;;;:::o;18427:107::-;18471:8;18521:5;18515:4;18511:16;18490:37;;18427:107;;;;:::o;18540:393::-;18609:6;18659:1;18647:10;18643:18;18682:97;18712:66;18701:9;18682:97;:::i;:::-;18800:39;18830:8;18819:9;18800:39;:::i;:::-;18788:51;;18872:4;18868:9;18861:5;18857:21;18848:30;;18921:4;18911:8;18907:19;18900:5;18897:30;18887:40;;18616:317;;18540:393;;;;;:::o;18939:142::-;18989:9;19022:53;19040:34;19049:24;19067:5;19049:24;:::i;:::-;19040:34;:::i;:::-;19022:53;:::i;:::-;19009:66;;18939:142;;;:::o;19087:75::-;19130:3;19151:5;19144:12;;19087:75;;;:::o;19168:269::-;19278:39;19309:7;19278:39;:::i;:::-;19339:91;19388:41;19412:16;19388:41;:::i;:::-;19380:6;19373:4;19367:11;19339:91;:::i;:::-;19333:4;19326:105;19244:193;19168:269;;;:::o;19443:73::-;19488:3;19443:73;:::o;19522:189::-;19599:32;;:::i;:::-;19640:65;19698:6;19690;19684:4;19640:65;:::i;:::-;19575:136;19522:189;;:::o;19717:186::-;19777:120;19794:3;19787:5;19784:14;19777:120;;;19848:39;19885:1;19878:5;19848:39;:::i;:::-;19821:1;19814:5;19810:13;19801:22;;19777:120;;;19717:186;;:::o;19909:543::-;20010:2;20005:3;20002:11;19999:446;;;20044:38;20076:5;20044:38;:::i;:::-;20128:29;20146:10;20128:29;:::i;:::-;20118:8;20114:44;20311:2;20299:10;20296:18;20293:49;;;20332:8;20317:23;;20293:49;20355:80;20411:22;20429:3;20411:22;:::i;:::-;20401:8;20397:37;20384:11;20355:80;:::i;:::-;20014:431;;19999:446;19909:543;;;:::o;20458:117::-;20512:8;20562:5;20556:4;20552:16;20531:37;;20458:117;;;;:::o;20581:169::-;20625:6;20658:51;20706:1;20702:6;20694:5;20691:1;20687:13;20658:51;:::i;:::-;20654:56;20739:4;20733;20729:15;20719:25;;20632:118;20581:169;;;;:::o;20755:295::-;20831:4;20977:29;21002:3;20996:4;20977:29;:::i;:::-;20969:37;;21039:3;21036:1;21032:11;21026:4;21023:21;21015:29;;20755:295;;;;:::o;21055:1395::-;21172:37;21205:3;21172:37;:::i;:::-;21274:18;21266:6;21263:30;21260:56;;;21296:18;;:::i;:::-;21260:56;21340:38;21372:4;21366:11;21340:38;:::i;:::-;21425:67;21485:6;21477;21471:4;21425:67;:::i;:::-;21519:1;21543:4;21530:17;;21575:2;21567:6;21564:14;21592:1;21587:618;;;;22249:1;22266:6;22263:77;;;22315:9;22310:3;22306:19;22300:26;22291:35;;22263:77;22366:67;22426:6;22419:5;22366:67;:::i;:::-;22360:4;22353:81;22222:222;21557:887;;21587:618;21639:4;21635:9;21627:6;21623:22;21673:37;21705:4;21673:37;:::i;:::-;21732:1;21746:208;21760:7;21757:1;21754:14;21746:208;;;21839:9;21834:3;21830:19;21824:26;21816:6;21809:42;21890:1;21882:6;21878:14;21868:24;;21937:2;21926:9;21922:18;21909:31;;21783:4;21780:1;21776:12;21771:17;;21746:208;;;21982:6;21973:7;21970:19;21967:179;;;22040:9;22035:3;22031:19;22025:26;22083:48;22125:4;22117:6;22113:17;22102:9;22083:48;:::i;:::-;22075:6;22068:64;21990:156;21967:179;22192:1;22188;22180:6;22176:14;22172:22;22166:4;22159:36;21594:611;;;21557:887;;21147:1303;;;21055:1395;;:::o;22456:177::-;22596:29;22592:1;22584:6;22580:14;22573:53;22456:177;:::o;22639:366::-;22781:3;22802:67;22866:2;22861:3;22802:67;:::i;:::-;22795:74;;22878:93;22967:3;22878:93;:::i;:::-;22996:2;22991:3;22987:12;22980:19;;22639:366;;;:::o;23011:419::-;23177:4;23215:2;23204:9;23200:18;23192:26;;23264:9;23258:4;23254:20;23250:1;23239:9;23235:17;23228:47;23292:131;23418:4;23292:131;:::i;:::-;23284:139;;23011:419;;;:::o;23436:167::-;23576:19;23572:1;23564:6;23560:14;23553:43;23436:167;:::o;23609:366::-;23751:3;23772:67;23836:2;23831:3;23772:67;:::i;:::-;23765:74;;23848:93;23937:3;23848:93;:::i;:::-;23966:2;23961:3;23957:12;23950:19;;23609:366;;;:::o;23981:419::-;24147:4;24185:2;24174:9;24170:18;24162:26;;24234:9;24228:4;24224:20;24220:1;24209:9;24205:17;24198:47;24262:131;24388:4;24262:131;:::i;:::-;24254:139;;23981:419;;;:::o;24406:434::-;24495:5;24520:66;24536:49;24578:6;24536:49;:::i;:::-;24520:66;:::i;:::-;24511:75;;24609:6;24602:5;24595:21;24647:4;24640:5;24636:16;24685:3;24676:6;24671:3;24667:16;24664:25;24661:112;;;24692:79;;:::i;:::-;24661:112;24782:52;24827:6;24822:3;24817;24782:52;:::i;:::-;24501:339;24406:434;;;;;:::o;24860:355::-;24927:5;24976:3;24969:4;24961:6;24957:17;24953:27;24943:122;;24984:79;;:::i;:::-;24943:122;25094:6;25088:13;25119:90;25205:3;25197:6;25190:4;25182:6;25178:17;25119:90;:::i;:::-;25110:99;;24933:282;24860:355;;;;:::o;25221:143::-;25278:5;25309:6;25303:13;25294:22;;25325:33;25352:5;25325:33;:::i;:::-;25221:143;;;;:::o;25370:680::-;25459:6;25467;25516:2;25504:9;25495:7;25491:23;25487:32;25484:119;;;25522:79;;:::i;:::-;25484:119;25663:1;25652:9;25648:17;25642:24;25693:18;25685:6;25682:30;25679:117;;;25715:79;;:::i;:::-;25679:117;25820:74;25886:7;25877:6;25866:9;25862:22;25820:74;:::i;:::-;25810:84;;25613:291;25943:2;25969:64;26025:7;26016:6;26005:9;26001:22;25969:64;:::i;:::-;25959:74;;25914:129;25370:680;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1354800","executionCost":"infinite","totalCost":"infinite"},"external":{"CREDENTIAL_SCHEMA_ID()":"336","getCredentials(address)":"infinite","getLatestCredential(address)":"infinite","issueCredential(address,string,uint256)":"infinite","owner()":"2522","renounceOwnership()":"infinite","setSPInstance(address)":"infinite","spInstance()":"infinite","transferOwnership(address)":"infinite"},"internal":{"schemaHook(uint64,bytes memory,address)":"infinite"}},"methodIdentifiers":{"CREDENTIAL_SCHEMA_ID()":"04dd8046","getCredentials(address)":"84270608","getLatestCredential(address)":"7df5e551","issueCredential(address,string,uint256)":"8e9841d0","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setSPInstance(address)":"8e9d660f","spInstance()":"a8c5dc33","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spInstanceAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"institution\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"course\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"issueDate\",\"type\":\"uint256\"}],\"name\":\"CredentialIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CREDENTIAL_SCHEMA_ID\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"getCredentials\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"courses\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"issueDates\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"getLatestCredential\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"found\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"course\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"issueDate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"course\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"issueDate\",\"type\":\"uint256\"}],\"name\":\"issueCredential\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"instance\",\"type\":\"address\"}],\"name\":\"setSPInstance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spInstance\",\"outputs\":[{\"internalType\":\"contract ISP\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EducationalCredential.sol\":\"EducationalCredential\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ethsign/sign-protocol-evm/src/interfaces/ISP.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { IVersionable } from \\\"./IVersionable.sol\\\";\\nimport { Schema } from \\\"../models/Schema.sol\\\";\\nimport { Attestation, OffchainAttestation } from \\\"../models/Attestation.sol\\\";\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/**\\n * @title Sign Protocol Interface\\n * @author Jack Xu @ EthSign\\n */\\ninterface ISP is IVersionable {\\n    event SchemaRegistered(uint64 schemaId);\\n    event AttestationMade(uint64 attestationId, string indexingKey);\\n    event AttestationRevoked(uint64 attestationId, string reason);\\n    event OffchainAttestationMade(string attestationId);\\n    event OffchainAttestationRevoked(string attestationId, string reason);\\n\\n    /**\\n     * @dev 0x9e87fac8\\n     */\\n    error Paused();\\n    /**\\n     * @dev 0x38f8c6c4\\n     */\\n    error SchemaNonexistent();\\n    /**\\n     * @dev 0x71984561\\n     */\\n    error SchemaWrongRegistrant();\\n    /**\\n     * @dev 0x8ac42f49\\n     */\\n    error AttestationIrrevocable();\\n    /**\\n     * @dev 0x54681a13\\n     */\\n    error AttestationNonexistent();\\n    /**\\n     * @dev 0xa65e02ed\\n     */\\n    error AttestationInvalidDuration();\\n    /**\\n     * @dev 0xd8c3da86\\n     */\\n    error AttestationAlreadyRevoked();\\n    /**\\n     * @dev 0xa9ad2007\\n     */\\n    error AttestationWrongAttester();\\n    /**\\n     * @dev 0xc83e3cdf\\n     */\\n    error OffchainAttestationExists();\\n    /**\\n     * @dev 0xa006519a\\n     */\\n    error OffchainAttestationNonexistent();\\n    /**\\n     * @dev 0xa0671d20\\n     */\\n    error OffchainAttestationAlreadyRevoked();\\n    /**\\n     * @dev 0xfdf4e6f9\\n     */\\n    error InvalidDelegateSignature();\\n    /**\\n     * @dev 0x5c34b9cc\\n     */\\n    error LegacySPRequired();\\n\\n    /**\\n     * @notice Registers a Schema.\\n     * @dev Emits `SchemaRegistered`.\\n     * @param schema See `Schema`.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\\\"\\\"` or `0x`\\n     * otherwise.\\n     * @return schemaId The assigned ID of the registered schema.\\n     */\\n    function register(Schema memory schema, bytes calldata delegateSignature) external returns (uint64 schemaId);\\n\\n    /**\\n     * @notice Makes an attestation.\\n     * @dev Emits `AttestationMade`.\\n     * @param attestation See `Attestation`.\\n     * @param indexingKey Used by the frontend to aid indexing.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\\\"\\\"` or `0x`\\n     * otherwise.\\n     * @param extraData This is forwarded to the resolver directly.\\n     * @return attestationId The assigned ID of the attestation.\\n     */\\n    function attest(\\n        Attestation calldata attestation,\\n        string calldata indexingKey,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        returns (uint64 attestationId);\\n\\n    /**\\n     * @notice Makes an attestation where the schema hook expects ETH payment.\\n     * @dev Emits `AttestationMade`.\\n     * @param attestation See `Attestation`.\\n     * @param resolverFeesETH Amount of funds to send to the hook.\\n     * @param indexingKey Used by the frontend to aid indexing.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\\\"\\\"` or `0x`\\n     * otherwise.\\n     * @param extraData This is forwarded to the resolver directly.\\n     * @return attestationId The assigned ID of the attestation.\\n     */\\n    function attest(\\n        Attestation calldata attestation,\\n        uint256 resolverFeesETH,\\n        string calldata indexingKey,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        payable\\n        returns (uint64 attestationId);\\n\\n    /**\\n     * @notice Makes an attestation where the schema hook expects ERC20 payment.\\n     * @dev Emits `AttestationMade`.\\n     * @param attestation See `Attestation`.\\n     * @param resolverFeesERC20Token ERC20 token address used for payment.\\n     * @param resolverFeesERC20Amount Amount of funds to send to the hook.\\n     * @param indexingKey Used by the frontend to aid indexing.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\\\"\\\"` or `0x`\\n     * otherwise.\\n     * @param extraData This is forwarded to the resolver directly.\\n     * @return attestationId The assigned ID of the attestation.\\n     */\\n    function attest(\\n        Attestation calldata attestation,\\n        IERC20 resolverFeesERC20Token,\\n        uint256 resolverFeesERC20Amount,\\n        string calldata indexingKey,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        returns (uint64 attestationId);\\n\\n    /**\\n     * @notice Timestamps an off-chain data ID.\\n     * @dev Emits `OffchainAttestationMade`.\\n     * @param offchainAttestationId The off-chain data ID.\\n     * @param delegateAttester An optional delegated attester that authorized the caller to attest on their behalf if\\n     * this is a delegated attestation. Use `address(0)` otherwise.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated attestation. Use `\\\"\\\"` or `0x`\\n     * otherwise. Use `\\\"\\\"` or `0x` otherwise.\\n     */\\n    function attestOffchain(\\n        string calldata offchainAttestationId,\\n        address delegateAttester,\\n        bytes calldata delegateSignature\\n    )\\n        external;\\n\\n    /**\\n     * @notice Revokes an existing revocable attestation.\\n     * @dev Emits `AttestationRevoked`. Must be called by the attester.\\n     * @param attestationId An existing attestation ID.\\n     * @param reason The revocation reason. This is only emitted as an event to save gas.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation.\\n     * @param extraData This is forwarded to the resolver directly.\\n     */\\n    function revoke(\\n        uint64 attestationId,\\n        string calldata reason,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external;\\n\\n    /**\\n     * @notice Revokes an existing revocable attestation where the schema hook expects ERC20 payment.\\n     * @dev Emits `AttestationRevoked`. Must be called by the attester.\\n     * @param attestationId An existing attestation ID.\\n     * @param reason The revocation reason. This is only emitted as an event to save gas.\\n     * @param resolverFeesETH Amount of funds to send to the hook.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation.\\n     * @param extraData This is forwarded to the resolver directly.\\n     */\\n    function revoke(\\n        uint64 attestationId,\\n        string calldata reason,\\n        uint256 resolverFeesETH,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        payable;\\n\\n    /**\\n     * @notice Revokes an existing revocable attestation where the schema hook expects ERC20 payment.\\n     * @dev Emits `AttestationRevoked`. Must be called by the attester.\\n     * @param attestationId An existing attestation ID.\\n     * @param reason The revocation reason. This is only emitted as an event to save gas.\\n     * @param resolverFeesERC20Token ERC20 token address used for payment.\\n     * @param resolverFeesERC20Amount Amount of funds to send to the hook.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation.\\n     * @param extraData This is forwarded to the resolver directly.\\n     */\\n    function revoke(\\n        uint64 attestationId,\\n        string calldata reason,\\n        IERC20 resolverFeesERC20Token,\\n        uint256 resolverFeesERC20Amount,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external;\\n\\n    /**\\n     * @notice Revokes an existing offchain attestation.\\n     * @dev Emits `OffchainAttestationRevoked`. Must be called by the attester.\\n     * @param offchainAttestationId An existing attestation ID.\\n     * @param reason The revocation reason. This is only emitted as an event to save gas.\\n     * @param delegateSignature An optional ECDSA delegateSignature if this is a delegated revocation.\\n     */\\n    function revokeOffchain(\\n        string calldata offchainAttestationId,\\n        string calldata reason,\\n        bytes calldata delegateSignature\\n    )\\n        external;\\n\\n    /**\\n     * @notice Batch registers a Schema.\\n     */\\n    function registerBatch(\\n        Schema[] calldata schemas,\\n        bytes calldata delegateSignature\\n    )\\n        external\\n        returns (uint64[] calldata schemaIds);\\n\\n    /**\\n     * @notice Batch attests.\\n     */\\n    function attestBatch(\\n        Attestation[] calldata attestations,\\n        string[] calldata indexingKeys,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        returns (uint64[] calldata attestationIds);\\n\\n    /**\\n     * @notice Batch attests where the schema hook expects ETH payment.\\n     */\\n    function attestBatch(\\n        Attestation[] calldata attestations,\\n        uint256[] calldata resolverFeesETH,\\n        string[] calldata indexingKeys,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        payable\\n        returns (uint64[] calldata attestationIds);\\n\\n    /**\\n     * @notice Batch attests where the schema hook expects ERC20 payment.\\n     */\\n    function attestBatch(\\n        Attestation[] calldata attestations,\\n        IERC20[] calldata resolverFeesERC20Tokens,\\n        uint256[] calldata resolverFeesERC20Amount,\\n        string[] calldata indexingKeys,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        returns (uint64[] calldata attestationIds);\\n\\n    /**\\n     * @notice Batch timestamps off-chain data IDs.\\n     */\\n    function attestOffchainBatch(\\n        string[] calldata offchainAttestationIds,\\n        address delegateAttester,\\n        bytes calldata delegateSignature\\n    )\\n        external;\\n\\n    /**\\n     * @notice Batch revokes revocable on-chain attestations.\\n     */\\n    function revokeBatch(\\n        uint64[] calldata attestationIds,\\n        string[] calldata reasons,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external;\\n\\n    /**\\n     * @notice Batch revokes revocable on-chain attestations where the schema hook expects ETH payment.\\n     */\\n    function revokeBatch(\\n        uint64[] calldata attestationIds,\\n        string[] calldata reasons,\\n        uint256[] calldata resolverFeesETH,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external\\n        payable;\\n\\n    /**\\n     * @notice Batch revokes revocable on-chain attestations where the schema hook expects ERC20 payment.\\n     */\\n    function revokeBatch(\\n        uint64[] calldata attestationIds,\\n        string[] calldata reasons,\\n        IERC20[] calldata resolverFeesERC20Tokens,\\n        uint256[] calldata resolverFeesERC20Amount,\\n        bytes calldata delegateSignature,\\n        bytes calldata extraData\\n    )\\n        external;\\n\\n    /**\\n     * @notice Batch revokes off-chain attestations.\\n     */\\n    function revokeOffchainBatch(\\n        string[] calldata offchainAttestationIds,\\n        string[] calldata reasons,\\n        bytes calldata delegateSignature\\n    )\\n        external;\\n\\n    /**\\n     * @notice Returns the specified `Schema`.\\n     */\\n    function getSchema(uint64 schemaId) external view returns (Schema calldata);\\n\\n    /**\\n     * @notice Returns the specified `Attestation`.\\n     */\\n    function getAttestation(uint64 attestationId) external view returns (Attestation calldata);\\n\\n    /**\\n     * @notice Returns the specified `OffchainAttestation`.\\n     */\\n    function getOffchainAttestation(string calldata offchainAttestationId)\\n        external\\n        view\\n        returns (OffchainAttestation calldata);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated registration.\\n     */\\n    function getDelegatedRegisterHash(Schema memory schema) external pure returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated batch registration.\\n     */\\n    function getDelegatedRegisterBatchHash(Schema[] memory schemas) external pure returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated attestation.\\n     */\\n    function getDelegatedAttestHash(Attestation calldata attestation) external pure returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated batch attestation.\\n     */\\n    function getDelegatedAttestBatchHash(Attestation[] calldata attestations) external pure returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated offchain attestation.\\n     */\\n    function getDelegatedOffchainAttestHash(string calldata offchainAttestationId) external pure returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated batch offchain attestation.\\n     */\\n    function getDelegatedOffchainAttestBatchHash(string[] calldata offchainAttestationIds)\\n        external\\n        pure\\n        returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated revocation.\\n     */\\n    function getDelegatedRevokeHash(uint64 attestationId, string memory reason) external pure returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated batch revocation.\\n     */\\n    function getDelegatedRevokeBatchHash(\\n        uint64[] memory attestationIds,\\n        string[] memory reasons\\n    )\\n        external\\n        pure\\n        returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated offchain revocation.\\n     */\\n    function getDelegatedOffchainRevokeHash(\\n        string memory offchainAttestationId,\\n        string memory reason\\n    )\\n        external\\n        pure\\n        returns (bytes32);\\n\\n    /**\\n     * @notice Returns the hash that will be used to authorize a delegated batch offchain revocation.\\n     */\\n    function getDelegatedOffchainRevokeBatchHash(\\n        string[] memory offchainAttestationIds,\\n        string[] memory reasons\\n    )\\n        external\\n        pure\\n        returns (bytes32);\\n\\n    /**\\n     * @notice Returns the current schema counter. This is incremented for each `Schema` registered.\\n     */\\n    function schemaCounter() external view returns (uint64);\\n\\n    /**\\n     * @notice Returns the current on-chain attestation counter. This is incremented for each `Attestation` made.\\n     */\\n    function attestationCounter() external view returns (uint64);\\n}\\n\",\"keccak256\":\"0xd5ddbb7cc6af2ee4c11d6c5dac739fc6254d84e13167bc054eb4477244490756\",\"license\":\"MIT\"},\"@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/**\\n * @title SIGN Attestation Protocol Resolver Interface\\n * @author Jack Xu @ EthSign\\n */\\ninterface ISPHook {\\n    function didReceiveAttestation(\\n        address attester,\\n        uint64 schemaId,\\n        uint64 attestationId,\\n        bytes calldata extraData\\n    )\\n        external\\n        payable;\\n\\n    function didReceiveAttestation(\\n        address attester,\\n        uint64 schemaId,\\n        uint64 attestationId,\\n        IERC20 resolverFeeERC20Token,\\n        uint256 resolverFeeERC20Amount,\\n        bytes calldata extraData\\n    )\\n        external;\\n\\n    function didReceiveRevocation(\\n        address attester,\\n        uint64 schemaId,\\n        uint64 attestationId,\\n        bytes calldata extraData\\n    )\\n        external\\n        payable;\\n\\n    function didReceiveRevocation(\\n        address attester,\\n        uint64 schemaId,\\n        uint64 attestationId,\\n        IERC20 resolverFeeERC20Token,\\n        uint256 resolverFeeERC20Amount,\\n        bytes calldata extraData\\n    )\\n        external;\\n}\\n\",\"keccak256\":\"0xa42159d34c4b8fa91507efacad81c14106f466efdc63b81a7d566dc0d2e736f4\",\"license\":\"MIT\"},\"@ethsign/sign-protocol-evm/src/interfaces/IVersionable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title IVersionable\\n * @author Jack Xu @ EthSign\\n * @dev This interface helps contracts to keep track of their versioning for upgrade compatibility checks.\\n */\\ninterface IVersionable {\\n    function version() external pure returns (string memory);\\n}\\n\",\"keccak256\":\"0xbcf1955aa8423f4f77a46a988a7cd41a46ae92af42aa4546cfebdc2a92916129\",\"license\":\"MIT\"},\"@ethsign/sign-protocol-evm/src/models/Attestation.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { DataLocation } from \\\"./DataLocation.sol\\\";\\n\\n/**\\n * @title Attestation\\n * @author Jack Xu @ EthSign\\n * @notice This struct represents an on-chain attestation record. This record is not deleted after revocation.\\n *\\n * `schemaId`: The `Schema` that this Attestation is based on. It must exist.\\n * `linkedAttestationId`: Useful if the current Attestation references a previous Attestation. It can either be 0 or an\\n * existing attestation ID.\\n * `attestTimestamp`: When the attestation was made. This is automatically populated by `_attest(...)`.\\n * `revokeTimestamp`: When the attestation was revoked. This is automatically populated by `_revoke(...)`.\\n * `attester`: The attester. At this time, the attester must be the caller of `attest()`.\\n * `validUntil`: The expiration timestamp of the Attestation. Must respect `Schema.maxValidFor`. 0 indicates no\\n * expiration date.\\n * `dataLocation`: Where `Attestation.data` is stored. See `DataLocation.DataLocation`.\\n * `revoked`: If the Attestation has been revoked. It is possible to make a revoked Attestation.\\n * `recipients`: The intended ABI-encoded recipients of this Attestation. This is of type `bytes` to support non-EVM\\n * repicients.\\n * `data`: The raw data of the Attestation based on `Schema.schema`. There is no enforcement here, however. Recommended\\n * to use `abi.encode`.\\n */\\nstruct Attestation {\\n    uint64 schemaId;\\n    uint64 linkedAttestationId;\\n    uint64 attestTimestamp;\\n    uint64 revokeTimestamp;\\n    address attester;\\n    uint64 validUntil;\\n    DataLocation dataLocation;\\n    bool revoked;\\n    bytes[] recipients;\\n    bytes data;\\n}\\n\\n/**\\n * @title OffchainAttestation\\n * @author Jack Xu @ EthSign\\n * @notice This struct represents an off-chain attestation record. This record is not deleted after revocation.\\n *\\n * `attester`: The attester. At this time, the attester must be the caller of `attestOffchain()`.\\n * `timestamp`: The `block.timestamp` of the function call.\\n */\\nstruct OffchainAttestation {\\n    address attester;\\n    uint64 timestamp;\\n}\\n\",\"keccak256\":\"0x8e2a182141d06bfdcce1325d70e8dd307f7d6b3d7b6fafcedc2dbabeb99fa30f\",\"license\":\"MIT\"},\"@ethsign/sign-protocol-evm/src/models/DataLocation.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title DataLocation\\n * @author Jack Xu @ EthSign\\n * @notice This enum indicates where `Schema.data` and `Attestation.data` are stored.\\n */\\nenum DataLocation {\\n    ONCHAIN,\\n    ARWEAVE,\\n    IPFS,\\n    CUSTOM\\n}\\n\",\"keccak256\":\"0x14f64929317cae8ae822a0dd2c20315ac141f10fa255cd2b13a0a4962385ec10\",\"license\":\"MIT\"},\"@ethsign/sign-protocol-evm/src/models/Schema.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { ISPHook } from \\\"../interfaces/ISPHook.sol\\\";\\nimport { DataLocation } from \\\"./DataLocation.sol\\\";\\n\\n/**\\n * @title Schema\\n * @author Jack Xu @ EthSign\\n * @notice This struct represents an on-chain Schema that Attestations can conform to.\\n *\\n * `registrant`: The address that registered this schema.\\n * `revocable`: Whether Attestations that adopt this Schema can be revoked.\\n * `dataLocation`: Where `Schema.data` is stored. See `DataLocation.DataLocation`.\\n * `maxValidFor`: The maximum number of seconds that an Attestation can remain valid. 0 means Attestations can be valid\\n * forever. This is enforced through `Attestation.validUntil`.\\n * `hook`: The `ISPHook` that is called at the end of every function. 0 means there is no hook set. See\\n * `ISPHook`.\\n * `timestamp`: When the schema was registered. This is automatically populated by `_register(...)`.\\n * `data`: The raw schema that `Attestation.data` should follow. Since there is no way to enforce this, it is a `string`\\n * for easy readability.\\n */\\nstruct Schema {\\n    address registrant;\\n    bool revocable;\\n    DataLocation dataLocation;\\n    uint64 maxValidFor;\\n    ISPHook hook;\\n    uint64 timestamp;\\n    string data;\\n}\\n\",\"keccak256\":\"0xcf3bd964790fdc7f72bacc86380b307e58bf15fa5f7332852d4969fe0db58216\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/EducationalCredential.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport { ISP } from \\\"@ethsign/sign-protocol-evm/src/interfaces/ISP.sol\\\";\\n\\ncontract EducationalCredential is Ownable {\\n    struct Credential {\\n        string course;\\n        uint256 issueDate;\\n    }\\n\\n    ISP public spInstance;\\n    uint64 public constant CREDENTIAL_SCHEMA_ID = 1; // Set your schema ID here\\n\\n    mapping(address => Credential[]) private credentials;\\n\\n    event CredentialIssued(address indexed institution, address indexed recipient, string course, uint256 issueDate);\\n\\n    constructor(address spInstanceAddress) Ownable(_msgSender()) {\\n        require(spInstanceAddress != address(0), \\\"Invalid SP instance address\\\");\\n        spInstance = ISP(spInstanceAddress);\\n    }\\n\\n    function setSPInstance(address instance) external onlyOwner {\\n        require(instance != address(0), \\\"Invalid SP instance address\\\");\\n        spInstance = ISP(instance);\\n    }\\n\\n    function issueCredential(\\n        address recipient,\\n        string memory course,\\n        uint256 issueDate\\n    ) external onlyOwner {\\n        require(recipient != address(0), \\\"Invalid recipient address\\\");\\n        require(bytes(course).length > 0, \\\"Course name cannot be empty\\\");\\n        require(issueDate <= block.timestamp, \\\"Issue date cannot be in the future\\\");\\n\\n        // Validate with schemaHook\\n        bool isValid = schemaHook(CREDENTIAL_SCHEMA_ID, abi.encode(course, issueDate), recipient);\\n        require(isValid, \\\"Data validation failed\\\");\\n\\n        credentials[recipient].push(Credential(course, issueDate));\\n        emit CredentialIssued(_msgSender(), recipient, course, issueDate);\\n    }\\n\\n    function getCredentials(address wallet) external view returns (string[] memory courses, uint256[] memory issueDates) {\\n        Credential[] memory userCredentials = credentials[wallet];\\n        uint256 credentialCount = userCredentials.length;\\n\\n        courses = new string[](credentialCount);\\n        issueDates = new uint256[](credentialCount);\\n\\n        for (uint256 i = 0; i < credentialCount; i++) {\\n            courses[i] = userCredentials[i].course;\\n            issueDates[i] = userCredentials[i].issueDate;\\n        }\\n\\n        return (courses, issueDates);\\n    }\\n\\n    function getLatestCredential(address wallet) external view returns (bool found, string memory course, uint256 issueDate) {\\n        Credential[] memory userCredentials = credentials[wallet];\\n        \\n        if (userCredentials.length == 0) {\\n            return (false, \\\"\\\", 0);\\n        }\\n\\n        Credential memory latestCredential = userCredentials[userCredentials.length - 1];\\n        return (true, latestCredential.course, latestCredential.issueDate);\\n    }\\n\\n    function schemaHook(\\n        uint64 schemaId,\\n        bytes memory data,\\n        address recipient\\n    ) internal view returns (bool) {\\n        require(schemaId == CREDENTIAL_SCHEMA_ID, \\\"Invalid schema ID\\\");\\n        require(recipient != address(0), \\\"Invalid recipient address\\\");\\n\\n        (string memory course, uint256 issueDate) = abi.decode(data, (string, uint256));\\n\\n        require(bytes(course).length > 0, \\\"Course name cannot be empty\\\");\\n        require(issueDate <= block.timestamp, \\\"Issue date cannot be in the future\\\");\\n\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x4a4fa1a05290d1b35542a6e702fe15007af0ad7d0fb1260377a3ebf5f632a9c4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":639,"contract":"contracts/EducationalCredential.sol:EducationalCredential","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":902,"contract":"contracts/EducationalCredential.sol:EducationalCredential","label":"spInstance","offset":0,"slot":"1","type":"t_contract(ISP)495"},{"astId":911,"contract":"contracts/EducationalCredential.sol:EducationalCredential","label":"credentials","offset":0,"slot":"2","type":"t_mapping(t_address,t_array(t_struct(Credential)899_storage)dyn_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(Credential)899_storage)dyn_storage":{"base":"t_struct(Credential)899_storage","encoding":"dynamic_array","label":"struct EducationalCredential.Credential[]","numberOfBytes":"32"},"t_contract(ISP)495":{"encoding":"inplace","label":"contract ISP","numberOfBytes":"20"},"t_mapping(t_address,t_array(t_struct(Credential)899_storage)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct EducationalCredential.Credential[])","numberOfBytes":"32","value":"t_array(t_struct(Credential)899_storage)dyn_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Credential)899_storage":{"encoding":"inplace","label":"struct EducationalCredential.Credential","members":[{"astId":896,"contract":"contracts/EducationalCredential.sol:EducationalCredential","label":"course","offset":0,"slot":"0","type":"t_string_storage"},{"astId":898,"contract":"contracts/EducationalCredential.sol:EducationalCredential","label":"issueDate","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}