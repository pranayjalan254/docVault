return (
    <div className="issue-certificate-form-insti">
      <h2>Issue Certificate</h2>
      {error && <p className="error">{error}</p>}

      <div className="toggle-container">
        <button
          className={`toggle-btn ${!isCsvMode ? "active" : ""}`}
          onClick={() => setIsCsvMode(false)}
        >
          Single Certificate
        </button>
        <button
          className={`toggle-btn ${isCsvMode ? "active" : ""}`}
          onClick={() => setIsCsvMode(true)}
        >
          Upload CSV
        </button>
      </div>

      {isCsvMode ? (
        <div className="csv-upload-section">
          <label>Upload CSV File</label>
          <input type="file" accept=".csv" onChange={handleFileChange} />
          <button onClick={handleCsvSubmit} disabled={isLoading}>
            {isLoading
              ? "Issuing Certificates..."
              : "Issue Certificates from CSV"}
          </button>
          <h4>Note: Please add enough ETH to issue all certificates</h4>
        </div>
      ) : (
        <form onSubmit={handleManualSubmit}>
          <div className="form-group-insti">
            <label>Student Name</label>
            <input
              type="text"
              name="studentName"
              value={formData.studentName || ""}
              onChange={(e) =>
                setFormData({ ...formData, studentName: e.target.value })
              }
              required
            />
          </div>
          <div className="form-group-insti">
            <label>Course</label>
            <input
              type="text"
              name="course"
              value={formData.course || ""}
              onChange={(e) =>
                setFormData({ ...formData, course: e.target.value })
              }
              required
            />
          </div>
          <div className="form-group-insti">
            <label>Date of Issuance</label>
            <input
              type="date"
              name="date"
              value={formData.date || ""}
              onChange={(e) =>
                setFormData({ ...formData, date: e.target.value })
              }
              required
            />
          </div>
          <div className="form-group-insti">
            <label>Contact</label>
            <input
              type="number"
              name="contact"
              value={formData.contact || ""}
              onChange={(e) =>
                setFormData({ ...formData, contact: e.target.value })
              }
              required
            />
          </div>
          <div className="form-group-insti">
            <label>Residential Address</label>
            <input
              type="text"
              name="add"
              value={formData.add || ""}
              onChange={(e) =>
                setFormData({ ...formData, add: e.target.value })
              }
              required
            />
          </div>
          <div className="form-group-insti">
            <label>Wallet Address</label>
            <input
              type="text"
              name="walletAddress"
              value={formData.walletAddress || ""}
              onChange={(e) =>
                setFormData({ ...formData, walletAddress: e.target.value })
              }
              required
            />
          </div>
          <button type="submit" disabled={isLoading}>
            {isLoading ? "Issuing Certificate..." : "Issue Certificate"}
          </button>
          <h4>Note: Please add enough ETH to issue the certificate</h4>
        </form>
      )}

      {isSubmitted && (
        <div className="popup">
          <div className="popup-content">
            <h3>Certificate issued successfully</h3>
            <button onClick={handleClosePopup}>Close</button>
          </div>
        </div>
      )}
    </div>
  );
